import { AgentEventStream } from '@agent-tars/core';
import { StorageProvider, SessionMetadata } from './types';
/**
 * File-based storage provider using lowdb
 * Stores data in a JSON file for persistence
 * Suitable for local development and small-scale deployments
 */
export declare class FileStorageProvider implements StorageProvider {
    private db;
    private initialized;
    readonly dbPath: string;
    constructor(storagePath?: string);
    initialize(): Promise<void>;
    createSession(metadata: SessionMetadata): Promise<SessionMetadata>;
    updateSessionMetadata(sessionId: string, metadata: Partial<Omit<SessionMetadata, 'id'>>): Promise<SessionMetadata>;
    getSessionMetadata(sessionId: string): Promise<SessionMetadata | null>;
    getAllSessions(): Promise<SessionMetadata[]>;
    deleteSession(sessionId: string): Promise<boolean>;
    saveEvent(sessionId: string, event: AgentEventStream.Event): Promise<void>;
    getSessionEvents(sessionId: string): Promise<AgentEventStream.Event[]>;
    close(): Promise<void>;
    private ensureInitialized;
}
//# sourceMappingURL=FileStorageProvider.d.ts.map