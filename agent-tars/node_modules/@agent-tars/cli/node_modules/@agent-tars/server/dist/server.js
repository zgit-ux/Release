/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    AgentTARSServer: ()=>AgentTARSServer,
    express: ()=>external_express_default()
});
const external_express_namespaceObject = require("express");
var external_express_default = /*#__PURE__*/ __webpack_require__.n(external_express_namespaceObject);
const external_http_namespaceObject = require("http");
var external_http_default = /*#__PURE__*/ __webpack_require__.n(external_http_namespaceObject);
const index_js_namespaceObject = require("./api/index.js");
const SocketHandlers_js_namespaceObject = require("./core/SocketHandlers.js");
const external_storage_index_js_namespaceObject = require("./storage/index.js");
const core_namespaceObject = require("@agent-tars/core");
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
class AgentTARSServer {
    getCustomAgioProvider() {
        return this.customAgioProvider;
    }
    getApp() {
        return this.app;
    }
    getHttpServer() {
        return this.server;
    }
    getSocketIOServer() {
        return this.io;
    }
    isServerRunning() {
        return this.isRunning;
    }
    getStorageInfo() {
        if (!this.storageProvider) return {
            type: 'none'
        };
        if ('FileStorageProvider' === this.storageProvider.constructor.name) return {
            type: 'file',
            path: this.storageProvider.dbPath
        };
        if ('SQLiteStorageProvider' === this.storageProvider.constructor.name) return {
            type: 'sqlite',
            path: this.storageProvider.dbPath
        };
        return {
            type: this.storageProvider.constructor.name.replace('StorageProvider', '').toLowerCase()
        };
    }
    async start() {
        if (this.storageProvider) try {
            await this.storageProvider.initialize();
        } catch (error) {
            console.error('Failed to initialize storage provider:', error);
        }
        return new Promise((resolve)=>{
            this.server.listen(this.port, ()=>{
                this.isRunning = true;
                resolve(this.server);
            });
        });
    }
    async stop() {
        const sessionCleanup = Object.values(this.sessions).map((session)=>session.cleanup());
        await Promise.all(sessionCleanup);
        Object.values(this.storageUnsubscribes).forEach((unsubscribe)=>unsubscribe());
        this.storageUnsubscribes = {};
        this.sessions = {};
        if (this.storageProvider) await this.storageProvider.close();
        if (this.isRunning) return new Promise((resolve, reject)=>{
            this.server.close((err)=>{
                if (err) return void reject(err);
                this.isRunning = false;
                console.log('Server stopped');
                resolve();
            });
        });
        return Promise.resolve();
    }
    constructor(appConfig, injectionOptions){
        var _appConfig_workspace;
        _define_property(this, "app", void 0);
        _define_property(this, "server", void 0);
        _define_property(this, "io", void 0);
        _define_property(this, "isRunning", false);
        _define_property(this, "sessions", {});
        _define_property(this, "storageUnsubscribes", {});
        _define_property(this, "customAgioProvider", void 0);
        _define_property(this, "port", void 0);
        _define_property(this, "workspacePath", void 0);
        _define_property(this, "isDebug", void 0);
        _define_property(this, "storageProvider", null);
        _define_property(this, "appConfig", void 0);
        this.appConfig = appConfig;
        this.port = appConfig.server.port ?? 3000;
        this.workspacePath = null == (_appConfig_workspace = appConfig.workspace) ? void 0 : _appConfig_workspace.workingDirectory;
        this.isDebug = appConfig.logLevel === core_namespaceObject.LogLevel.DEBUG;
        this.customAgioProvider = null == injectionOptions ? void 0 : injectionOptions.agioProvider;
        this.app = external_express_default()();
        this.server = external_http_default().createServer(this.app);
        if (appConfig.server.storage) this.storageProvider = (0, external_storage_index_js_namespaceObject.createStorageProvider)(appConfig.server.storage);
        (0, index_js_namespaceObject.setupAPI)(this.app);
        this.io = (0, SocketHandlers_js_namespaceObject.setupSocketIO)(this.server, this);
        this.app.locals.server = this;
    }
}
exports.AgentTARSServer = __webpack_exports__.AgentTARSServer;
exports.express = __webpack_exports__.express;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "AgentTARSServer",
    "express"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});

//# sourceMappingURL=server.js.map