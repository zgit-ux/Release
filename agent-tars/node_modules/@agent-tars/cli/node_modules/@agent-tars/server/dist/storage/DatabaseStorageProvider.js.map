{"version":3,"file":"storage/DatabaseStorageProvider.js","sources":["webpack://@agent-tars/server/webpack/runtime/define_property_getters","webpack://@agent-tars/server/webpack/runtime/has_own_property","webpack://@agent-tars/server/webpack/runtime/make_namespace_object","webpack://@agent-tars/server/./src/storage/DatabaseStorageProvider.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AgentEventStream } from '@agent-tars/core';\nimport { StorageProvider, SessionMetadata, ServerStorageOptions } from './types';\n\n/**\n * Abstract database storage provider\n * Base class for implementing database-specific storage providers\n * Extend this class to implement storage with MongoDB, PostgreSQL, etc.\n */\nexport abstract class DatabaseStorageProvider implements StorageProvider {\n  protected config: ServerStorageOptions['database'];\n\n  constructor(config?: ServerStorageOptions['database']) {\n    this.config = config || { url: '' };\n  }\n\n  abstract initialize(): Promise<void>;\n  abstract createSession(metadata: SessionMetadata): Promise<SessionMetadata>;\n  abstract updateSessionMetadata(\n    sessionId: string,\n    metadata: Partial<Omit<SessionMetadata, 'id'>>,\n  ): Promise<SessionMetadata>;\n  abstract getSessionMetadata(sessionId: string): Promise<SessionMetadata | null>;\n  abstract getAllSessions(): Promise<SessionMetadata[]>;\n  abstract deleteSession(sessionId: string): Promise<boolean>;\n  abstract saveEvent(sessionId: string, event: AgentEventStream.Event): Promise<void>;\n  abstract getSessionEvents(sessionId: string): Promise<AgentEventStream.Event[]>;\n  abstract close(): Promise<void>;\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","DatabaseStorageProvider","config"],"mappings":";;;;;;;IAAAA,oBAAoB,CAAC,GAAG,CAAC,UAASC;QACjC,IAAI,IAAIC,OAAOD,WACR,IAAGD,oBAAoB,CAAC,CAACC,YAAYC,QAAQ,CAACF,oBAAoB,CAAC,CAAC,UAASE,MACzEC,OAAO,cAAc,CAAC,UAASD,KAAK;YAAE,YAAY;YAAM,KAAKD,UAAU,CAACC,IAAI;QAAC;IAGzF;;;ICNAF,oBAAoB,CAAC,GAAG,CAACI,KAAKC,OAAUF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACC,KAAKC;;;ICClFL,oBAAoB,CAAC,GAAG,CAAC;QACxB,IAAG,AAAkB,eAAlB,OAAOM,UAA0BA,OAAO,WAAW,EACrDH,OAAO,cAAc,CAAC,UAASG,OAAO,WAAW,EAAE;YAAE,OAAO;QAAS;QAEtEH,OAAO,cAAc,CAAC,UAAS,cAAc;YAAE,OAAO;QAAK;IAC5D;;;;;;;ACHC;;;;;;;;;;AAUM,MAAeI;IAGpB,YAAYC,MAAyC,CAAE;QAFvD,uBAAU,UAAV;QAGE,IAAI,CAAC,MAAM,GAAGA,UAAU;YAAE,KAAK;QAAG;IACpC;AAcF"}