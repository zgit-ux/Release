import { StorageProvider } from '../storage';
import type { AgentTARSAppConfig } from '../types';
import type { IAgent } from '@agent-tars/interface';
/**
 * ShareService - Centralized service for handling session sharing
 *
 * Responsible for:
 * - Generating shareable HTML content
 * - Uploading shared content to providers
 * - Managing share metadata and slugs
 */
export declare class ShareService {
    private appConfig;
    private storageProvider;
    constructor(appConfig: Required<AgentTARSAppConfig>, storageProvider: StorageProvider | null);
    /**
     * Share a session
     * @param sessionId Session ID to share
     * @param upload Whether to upload to share provider
     * @param agent Optional agent instance for slug generation
     * @returns Share result with URL or HTML content
     */
    shareSession(sessionId: string, upload?: boolean, agent?: IAgent): Promise<{
        success: boolean;
        url?: string;
        html?: string;
        sessionId: string;
        error?: string;
    }>;
    /**
     * Generate shareable HTML content
     */
    private generateShareHtml;
    /**
     * Upload share HTML to provider
     */
    private uploadShareHtml;
    /**
     * Get share configuration
     */
    getShareConfig(): {
        hasShareProvider: boolean;
        shareProvider: string | null;
    };
}
//# sourceMappingURL=ShareService.d.ts.map