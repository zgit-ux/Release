import { AgentEventStream } from '@agent-tars/core';
import { StorageProvider, SessionMetadata } from './types';
/**
 * In-memory storage provider
 * Simple implementation that stores data in memory
 * Useful for testing and development
 * Note: Data will be lost when the server restarts
 */
export declare class MemoryStorageProvider implements StorageProvider {
    private sessions;
    private events;
    initialize(): Promise<void>;
    createSession(metadata: SessionMetadata): Promise<SessionMetadata>;
    updateSessionMetadata(sessionId: string, metadata: Partial<Omit<SessionMetadata, 'id'>>): Promise<SessionMetadata>;
    getSessionMetadata(sessionId: string): Promise<SessionMetadata | null>;
    getAllSessions(): Promise<SessionMetadata[]>;
    deleteSession(sessionId: string): Promise<boolean>;
    saveEvent(sessionId: string, event: AgentEventStream.Event): Promise<void>;
    getSessionEvents(sessionId: string): Promise<AgentEventStream.Event[]>;
    close(): Promise<void>;
}
//# sourceMappingURL=MemoryStorageProvider.d.ts.map