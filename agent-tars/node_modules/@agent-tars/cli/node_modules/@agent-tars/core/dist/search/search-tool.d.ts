import { ConsoleLogger, Tool } from '@mcp-agent/core';
import { AgentTARSSearchOptions } from '@agent-tars/interface';
import { LocalBrowser, RemoteBrowser } from '@agent-infra/browser';
/**
 * Configuration for search tool provider
 */
export interface SearchToolConfig extends AgentTARSSearchOptions {
    /** External browser instance for browser_search provider */
    externalBrowser?: LocalBrowser | RemoteBrowser;
    cdpEndpoint?: string;
}
/**
 * SearchToolProvider - Direct integration with agent-infra/search
 *
 * This class provides a clean interface for creating search tools that
 * directly use the SearchClient from agent-infra/search, eliminating the
 * need for the mcp-server-search middleware.
 */
export declare class SearchToolProvider {
    private logger;
    private searchClient;
    private config;
    /**
     * Create a new search tool provider
     *
     * @param logger - Logger instance
     * @param config - Search configuration
     */
    constructor(logger: ConsoleLogger, config: SearchToolConfig);
    /**
     * Map string provider name to SearchProvider enum
     */
    private mapProviderString;
    /**
     * Create a search tool definition that can be registered with an agent
     *
     * @returns Tool definition for agent registration
     */
    createSearchTool(): Tool;
}
//# sourceMappingURL=search-tool.d.ts.map