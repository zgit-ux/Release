{"version":3,"file":"browser/browser-control-strategies/strategy-factory.js","sources":["webpack://@agent-tars/core/webpack/runtime/define_property_getters","webpack://@agent-tars/core/webpack/runtime/has_own_property","webpack://@agent-tars/core/webpack/runtime/make_namespace_object","webpack://@agent-tars/core/./src/browser/browser-control-strategies/strategy-factory.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleLogger } from '@mcp-agent/core';\nimport { BrowserControlStrategy } from './base-strategy';\nimport { MixedControlStrategy } from './mixed-strategy';\nimport { GUIAgentOnlyStrategy } from './gui-agent-only-strategy';\nimport { BrowserUseOnlyStrategy } from './browser-use-only-strategy';\nimport { BrowserControlMode } from '../../types';\n\n/**\n * StrategyFactory - Factory for creating browser control strategies\n *\n * Responsible for instantiating the appropriate strategy based on the requested mode\n */\nexport class StrategyFactory {\n  /**\n   * Create a browser control strategy based on the specified mode\n   * @param mode Browser control mode\n   * @param logger Logger instance\n   * @returns Browser control strategy instance\n   */\n  static createStrategy(mode: BrowserControlMode, logger: ConsoleLogger): BrowserControlStrategy {\n    switch (mode) {\n      case 'mixed':\n        return new MixedControlStrategy(logger);\n      case 'gui-agent-only':\n        return new GUIAgentOnlyStrategy(logger);\n      case 'browser-use-only':\n        return new BrowserUseOnlyStrategy(logger);\n      default:\n        logger.warn(`Unknown browser control mode: ${mode}, falling back to default`);\n        return new MixedControlStrategy(logger);\n    }\n  }\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","StrategyFactory","mode","logger","MixedControlStrategy","GUIAgentOnlyStrategy","BrowserUseOnlyStrategy"],"mappings":";;;;;;;IAAAA,oBAAoB,CAAC,GAAG,CAAC,UAASC;QACjC,IAAI,IAAIC,OAAOD,WACR,IAAGD,oBAAoB,CAAC,CAACC,YAAYC,QAAQ,CAACF,oBAAoB,CAAC,CAAC,UAASE,MACzEC,OAAO,cAAc,CAAC,UAASD,KAAK;YAAE,YAAY;YAAM,KAAKD,UAAU,CAACC,IAAI;QAAC;IAGzF;;;ICNAF,oBAAoB,CAAC,GAAG,CAACI,KAAKC,OAAUF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACC,KAAKC;;;ICClFL,oBAAoB,CAAC,GAAG,CAAC;QACxB,IAAG,AAAkB,eAAlB,OAAOM,UAA0BA,OAAO,WAAW,EACrDH,OAAO,cAAc,CAAC,UAASG,OAAO,WAAW,EAAE;YAAE,OAAO;QAAS;QAEtEH,OAAO,cAAc,CAAC,UAAS,cAAc;YAAE,OAAO;QAAK;IAC5D;;;;;;;;;;ACWO,MAAMI;IAOX,OAAO,eAAeC,IAAwB,EAAEC,MAAqB,EAA0B;QAC7F,OAAQD;YACN,KAAK;gBACH,OAAO,IAAIE,2CAAAA,oBAAoBA,CAACD;YAClC,KAAK;gBACH,OAAO,IAAIE,oDAAAA,oBAAoBA,CAACF;YAClC,KAAK;gBACH,OAAO,IAAIG,sDAAAA,sBAAsBA,CAACH;YACpC;gBACEA,OAAO,IAAI,CAAC,CAAC,8BAA8B,EAAED,KAAK,yBAAyB,CAAC;gBAC5E,OAAO,IAAIE,2CAAAA,oBAAoBA,CAACD;QACpC;IACF;AACF"}