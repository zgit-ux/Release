{"version":3,"file":"browser/tools/content-tools.mjs","sources":["webpack://@agent-tars/core/./src/browser/tools/content-tools.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleLogger, ToolDefinition, Tool, z } from '@multimodal/mcp-agent';\nimport { CustomBrowserTool } from './base';\n\n/**\n * ContentTools - Provides browser content extraction tools\n * \n * Implements custom content extraction tools that convert page content\n * to different formats like Markdown, HTML, and plain text.\n */\nexport class ContentTools extends CustomBrowserTool {\n  constructor(logger: ConsoleLogger) {\n    super(logger);\n    this.category = 'browser';\n  }\n\n  getTools(): ToolDefinition[] {\n    const tools: ToolDefinition[] = [];\n    \n    // Custom implementation of browser_get_markdown\n    const getMarkdownTool = new Tool({\n      id: 'browser_get_markdown',\n      description: '[browser] Get the content of the current page as markdown',\n      parameters: z.object({\n        selector: z.string().optional().describe('CSS selector to extract content from (optional)'),\n      }),\n      function: async ({ selector }) => {\n        try {\n          if (!this.browserGUIAgent) {\n            return { error: 'GUI Agent not initialized' };\n          }\n\n          const page = await this.getPage();\n          \n          // Use the toMarkdown function to convert page content to markdown\n          const markdown = await page.evaluate((targetSelector) => {\n            /**\n             * Converts HTML content to Markdown format\n             * @param element - The DOM element to convert\n             * @returns Markdown representation of the element\n             */\n            function htmlToMarkdown(element) {\n              if (!element) return '';\n              \n              // Get computed style to check visibility\n              const style = window.getComputedStyle(element);\n              if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') {\n                return '';\n              }\n              \n              // Process element based on tag name\n              const tag = element.tagName.toLowerCase();\n              let result = '';\n              \n              // Handle different HTML elements\n              switch (tag) {\n                case 'h1':\n                  return `\\n# ${element.textContent.trim()}\\n\\n`;\n                case 'h2':\n                  return `\\n## ${element.textContent.trim()}\\n\\n`;\n                case 'h3':\n                  return `\\n### ${element.textContent.trim()}\\n\\n`;\n                case 'h4':\n                  return `\\n#### ${element.textContent.trim()}\\n\\n`;\n                case 'h5':\n                  return `\\n##### ${element.textContent.trim()}\\n\\n`;\n                case 'h6':\n                  return `\\n###### ${element.textContent.trim()}\\n\\n`;\n                case 'p':\n                  return `\\n${element.textContent.trim()}\\n\\n`;\n                case 'a':\n                  const href = element.getAttribute('href');\n                  if (href) {\n                    return `[${element.textContent.trim()}](${href})`;\n                  } else {\n                    return element.textContent.trim();\n                  }\n                case 'strong':\n                case 'b':\n                  return `**${element.textContent.trim()}**`;\n                case 'em':\n                case 'i':\n                  return `*${element.textContent.trim()}*`;\n                case 'code':\n                  return `\\`${element.textContent.trim()}\\``;\n                case 'pre':\n                  return `\\n\\`\\`\\`\\n${element.textContent.trim()}\\n\\`\\`\\`\\n\\n`;\n                case 'ul':\n                  {\n                    let listItems = '';\n                    for (const child of element.children) {\n                      if (child.tagName.toLowerCase() === 'li') {\n                        listItems += `\\n- ${child.textContent.trim()}`;\n                      }\n                    }\n                    return `${listItems}\\n\\n`;\n                  }\n                case 'ol':\n                  {\n                    let listItems = '';\n                    let index = 1;\n                    for (const child of element.children) {\n                      if (child.tagName.toLowerCase() === 'li') {\n                        listItems += `\\n${index}. ${child.textContent.trim()}`;\n                        index++;\n                      }\n                    }\n                    return `${listItems}\\n\\n`;\n                  }\n                case 'img':\n                  {\n                    const alt = element.getAttribute('alt') || 'image';\n                    const src = element.getAttribute('src') || '';\n                    return `\\n![${alt}](${src})\\n\\n`;\n                  }\n                case 'blockquote':\n                  return `\\n> ${element.textContent.trim()}\\n\\n`;\n                case 'hr':\n                  return '\\n---\\n\\n';\n                case 'table':\n                  {\n                    // Simple table handling - advanced formatting omitted for brevity\n                    return `\\n[Table content: ${element.textContent.trim()}]\\n\\n`;\n                  }\n                case 'br':\n                  return '\\n';\n                default:\n                  // Recursively process child nodes for containers\n                  if (element.children && element.children.length > 0) {\n                    for (const child of element.children) {\n                      result += htmlToMarkdown(child);\n                    }\n                    return result;\n                  } else {\n                    // Text node or leaf element\n                    const text = element.textContent.trim();\n                    return text ? text : '';\n                  }\n              }\n            }\n            \n            // Main conversion function\n            try {\n              // Get page title\n              const title = document.title;\n              let markdown = `# ${title}\\n\\n`;\n              \n              // Get target element based on selector or use document body\n              const target = targetSelector \n                ? document.querySelector(targetSelector) \n                : document.body;\n                \n              if (!target) {\n                return `# ${title}\\n\\nNo content found for selector: ${targetSelector}`;\n              }\n              \n              // Process target element\n              markdown += htmlToMarkdown(target);\n              \n              // Clean up whitespace and return\n              return markdown\n                .replace(/\\n{3,}/g, '\\n\\n')\n                .trim();\n            } catch (error) {\n              return `Error converting to markdown: ${error.message}`;\n            }\n          }, selector || null);\n          \n          return markdown;\n        } catch (error) {\n          this.logger.error(`Error extracting markdown: ${error}`);\n          return `Failed to extract content: ${error instanceof Error ? error.message : String(error)}`;\n        }\n      },\n    });\n    \n    // Add the custom Markdown tool\n    tools.push(getMarkdownTool);\n    \n    return tools;\n  }\n}\n"],"names":["ContentTools","CustomBrowserTool","tools","getMarkdownTool","Tool","z","selector","page","markdown","targetSelector","htmlToMarkdown","element","style","window","tag","result","href","listItems","child","index","alt","src","text","title","document","target","error","Error","String","logger"],"mappings":"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"}