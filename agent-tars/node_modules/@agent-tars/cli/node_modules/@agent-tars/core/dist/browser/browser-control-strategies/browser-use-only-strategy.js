/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    BrowserUseOnlyStrategy: ()=>BrowserUseOnlyStrategy
});
const external_base_strategy_js_namespaceObject = require("./base-strategy.js");
const index_js_namespaceObject = require("../tools/index.js");
class BrowserUseOnlyStrategy extends external_base_strategy_js_namespaceObject.AbstractBrowserControlStrategy {
    async registerTools(registerToolFn) {
        if (!this.browserClient) {
            this.logger.warn('Browser client not set, cannot register browser tools');
            return [];
        }
        if (this.browserGUIAgent) {
            const contentTools = (0, index_js_namespaceObject.createContentTools)(this.logger, this.browserGUIAgent);
            contentTools.forEach((tool)=>{
                registerToolFn(tool);
                this.registeredTools.add(tool.name);
            });
        }
        const browserTools = [
            'browser_navigate',
            'browser_go_back',
            'browser_go_forward',
            'browser_click',
            'browser_press_key',
            'browser_hover',
            'browser_scroll',
            'browser_form_input_fill',
            'browser_select',
            'browser_get_clickable_elements',
            'browser_read_links',
            'browser_tab_list',
            'browser_new_tab',
            'browser_close_tab',
            'browser_switch_tab',
            'browser_evaluate'
        ];
        await this.registerMCPBrowserTools(registerToolFn, browserTools);
        return Array.from(this.registeredTools);
    }
}
exports.BrowserUseOnlyStrategy = __webpack_exports__.BrowserUseOnlyStrategy;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "BrowserUseOnlyStrategy"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});

//# sourceMappingURL=browser-use-only-strategy.js.map