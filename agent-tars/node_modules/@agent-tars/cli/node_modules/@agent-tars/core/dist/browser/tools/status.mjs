/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
import { Tool, z } from "@mcp-agent/core";
function createStatusTools(logger, browserGUIAgent) {
    const getUrlTool = new Tool({
        id: 'browser_get_url',
        description: '[browser] Get the current page URL',
        parameters: z.object({}),
        function: async ()=>{
            try {
                if (!browserGUIAgent) return {
                    status: 'error',
                    message: 'GUI Agent not initialized'
                };
                const page = await browserGUIAgent.getPage();
                return await page.url();
            } catch (error) {
                logger.error(`Error getting URL: ${error}`);
                return `Failed to get URL: ${error instanceof Error ? error.message : String(error)}`;
            }
        }
    });
    const getTitleTool = new Tool({
        id: 'browser_get_title',
        description: '[browser] Get the current page title',
        parameters: z.object({}),
        function: async ()=>{
            try {
                if (!browserGUIAgent) return {
                    status: 'error',
                    message: 'GUI Agent not initialized'
                };
                const page = await browserGUIAgent.getPage();
                return await page.title();
            } catch (error) {
                logger.error(`Error getting title: ${error}`);
                return `Failed to get title: ${error instanceof Error ? error.message : String(error)}`;
            }
        }
    });
    return [
        getUrlTool,
        getTitleTool
    ];
}
export { createStatusTools };

//# sourceMappingURL=status.mjs.map