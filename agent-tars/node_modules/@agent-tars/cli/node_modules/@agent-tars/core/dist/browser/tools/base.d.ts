import { ConsoleLogger, ToolDefinition } from '@multimodal/mcp-agent';
import { Client } from '@modelcontextprotocol/sdk/client/index.js';
import { BrowserGUIAgent } from '../browser-gui-agent';
/**
 * BrowserToolProvider - Interface for classes that can provide browser tools
 *
 * This interface defines the contract for any class that can generate browser
 * tool definitions for registration with the agent.
 */
export interface BrowserToolProvider {
    /**
     * Get the tool definitions for this provider
     * @returns Array of tool definitions
     */
    getTools(): ToolDefinition[];
}
/**
 * BaseBrowserTool - Abstract base class for browser tools
 *
 * Provides common functionality and configuration for all browser tools,
 * whether they're implemented using the MCP Browser client, GUI Agent,
 * or custom implementation.
 */
export declare abstract class BaseBrowserTool implements BrowserToolProvider {
    protected logger: ConsoleLogger;
    protected browserClient?: Client;
    protected browserGUIAgent?: BrowserGUIAgent;
    protected category: string;
    /**
     * Creates a new browser tool
     * @param logger - Logger instance
     */
    constructor(logger: ConsoleLogger);
    /**
     * Set the MCP Browser client
     * @param client - MCP Browser client instance
     */
    setBrowserClient(client: Client): void;
    /**
     * Set the Browser GUI Agent
     * @param guiAgent - Browser GUI Agent instance
     */
    setBrowserGUIAgent(guiAgent: BrowserGUIAgent): void;
    /**
     * Get tool definitions provided by this tool
     * This method must be implemented by concrete subclasses
     */
    abstract getTools(): ToolDefinition[];
}
/**
 * MCPBrowserTool - Base class for tools that use MCP Browser client
 *
 * Specializes BaseBrowserTool for tools that are implemented using the
 * MCP Browser client.
 */
export declare abstract class MCPBrowserTool extends BaseBrowserTool {
    /**
     * Create a tool definition that wraps an MCP tool
     * @param name - Tool name
     * @param description - Tool description
     * @returns Tool definition
     */
    protected createMCPToolDefinition(name: string, description: string): ToolDefinition | null;
}
/**
 * CustomBrowserTool - Base class for custom browser tools
 *
 * Specializes BaseBrowserTool for tools that have custom implementations
 * rather than relying on MCP Browser client.
 */
export declare abstract class CustomBrowserTool extends BaseBrowserTool {
    /**
     * Get the page from GUI Agent
     * Helper method for accessing the browser page
     */
    protected getPage(): Promise<import("puppeteer-core").Page>;
}
//# sourceMappingURL=base.d.ts.map