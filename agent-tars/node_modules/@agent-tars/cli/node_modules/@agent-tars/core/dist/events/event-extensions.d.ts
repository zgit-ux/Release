import { AgentEventStream } from '@mcp-agent/core';
/**
 * Agent TARS specific event types and interfaces
 * This file extends the core AgentEventStream namespace with custom events
 */
/**
 * Browser automation progress event - tracks browser automation steps
 */
export interface BrowserAutomationProgressEvent extends AgentEventStream.BaseEvent {
    type: 'browser_automation_progress';
    /** Current automation step description */
    step: string;
    /** Current step number */
    stepNumber: number;
    /** Total number of steps */
    totalSteps: number;
    /** Whether this step is completed */
    completed: boolean;
    /** Screenshot data if available */
    screenshot?: {
        /** Base64 encoded screenshot */
        data: string;
        /** Screenshot width */
        width: number;
        /** Screenshot height */
        height: number;
    };
    /** Optional error message if step failed */
    error?: string;
    /** Additional metadata for the automation step */
    metadata?: Record<string, any>;
}
/**
 * GUI operation event - tracks visual browser interactions
 */
export interface GUIOperationEvent extends AgentEventStream.BaseEvent {
    type: 'gui_operation';
    /** Type of GUI operation performed */
    operation: 'click' | 'type' | 'scroll' | 'drag' | 'hotkey' | 'wait';
    /** Target coordinates for the operation (if applicable) */
    coordinates?: {
        x: number;
        y: number;
    };
    /** Text content for type operations */
    content?: string;
    /** Key combination for hotkey operations */
    hotkey?: string;
    /** Scroll direction for scroll operations */
    scrollDirection?: 'up' | 'down' | 'left' | 'right';
    /** Operation success status */
    success: boolean;
    /** Duration of the operation in milliseconds */
    duration: number;
    /** Optional error message if operation failed */
    error?: string;
}
/**
 * Research progress event - tracks research and data gathering progress
 */
export interface ResearchProgressEvent extends AgentEventStream.BaseEvent {
    type: 'research_progress';
    /** Research phase */
    phase: 'planning' | 'searching' | 'extracting' | 'analyzing' | 'reporting';
    /** Current research topic or query */
    topic: string;
    /** Progress percentage (0-100) */
    progress: number;
    /** Number of sources processed */
    sourcesProcessed: number;
    /** Total number of sources to process */
    totalSources: number;
    /** Current source being processed */
    currentSource?: {
        url: string;
        title: string;
        type: 'webpage' | 'document' | 'search_result';
    };
    /** Key findings or insights discovered */
    findings?: string[];
    /** Optional status message */
    status?: string;
}
declare module '@mcp-agent/core' {
    namespace AgentEventStream {
        interface ExtendedEventMapping {
            browser_automation_progress: BrowserAutomationProgressEvent;
            gui_operation: GUIOperationEvent;
            research_progress: ResearchProgressEvent;
        }
    }
}
//# sourceMappingURL=event-extensions.d.ts.map