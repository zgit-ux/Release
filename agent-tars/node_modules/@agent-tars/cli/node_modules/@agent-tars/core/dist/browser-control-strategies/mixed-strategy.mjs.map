{"version":3,"file":"browser-control-strategies/mixed-strategy.mjs","sources":["webpack://@agent-tars/core/./src/browser-control-strategies/mixed-strategy.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ToolDefinition } from '@multimodal/mcp-agent';\nimport { AbstractBrowserControlStrategy } from './base-strategy';\n\n/**\n * MixedControlStrategy - Implements the 'default' browser control mode\n *\n * This strategy provides a hybrid approach that combines both GUI Agent (vision-based)\n * and MCP Browser (DOM-based) tools without handling conflicts between them.\n */\nexport class MixedControlStrategy extends AbstractBrowserControlStrategy {\n  /**\n   * Register both GUI Agent tools and complementary MCP Browser tools\n   */\n  async registerTools(registerToolFn: (tool: ToolDefinition) => void): Promise<string[]> {\n    // Register GUI Agent tool if available\n    if (this.guiAgent) {\n      const guiAgentTool = this.guiAgent.getToolDefinition();\n      registerToolFn(guiAgentTool);\n      this.registeredTools.add(guiAgentTool.name);\n    }\n\n    // Register all browser tools from MCP Browser server\n    if (this.browserClient) {\n      // Register all browser tools except less useful content extraction tools\n      // Prefer browser_get_markdown over other content extraction tools\n      const browserTools = [\n        // Navigation tools\n        'browser_navigate',\n        'browser_go_back',\n        'browser_go_forward',\n\n        // Content tools\n        'browser_get_markdown',\n\n        // Interaction tools\n        'browser_click',\n        'browser_form_input_fill',\n        'browser_press_key',\n        'browser_hover',\n        'browser_scroll',\n        'browser_select',\n\n        // Status tools\n        'browser_get_clickable_elements',\n        'browser_read_links',\n\n        // Visual tools\n        'browser_screenshot',\n\n        // Tab management\n        'browser_tab_list',\n        'browser_new_tab',\n        'browser_close_tab',\n        'browser_switch_tab',\n\n        // Advanced tools\n        'browser_evaluate',\n      ];\n\n      await this.registerMCPBrowserTools(registerToolFn, browserTools);\n    }\n\n    return Array.from(this.registeredTools);\n  }\n}\n"],"names":["MixedControlStrategy","AbstractBrowserControlStrategy","registerToolFn","guiAgentTool","browserTools","Array"],"mappings":";;;;;AAcO,MAAMA,6BAA6BC,wDAAAA,8BAA8BA;IAItE,MAAM,cAAcC,cAA8C,EAAqB;QAErF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAMC,eAAe,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YACpDD,eAAeC;YACf,IAAI,CAAC,eAAe,CAAC,GAAG,CAACA,aAAa,IAAI;QAC5C;QAGA,IAAI,IAAI,CAAC,aAAa,EAAE;YAGtB,MAAMC,eAAe;gBAEnB;gBACA;gBACA;gBAGA;gBAGA;gBACA;gBACA;gBACA;gBACA;gBACA;gBAGA;gBACA;gBAGA;gBAGA;gBACA;gBACA;gBACA;gBAGA;aACD;YAED,MAAM,IAAI,CAAC,uBAAuB,CAACF,gBAAgBE;QACrD;QAEA,OAAOC,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe;IACxC;AACF"}