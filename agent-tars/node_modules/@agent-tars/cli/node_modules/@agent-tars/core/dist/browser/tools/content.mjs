/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
import { Tool, z } from "@mcp-agent/core";
import { PaginatedContentExtractor } from "../content-extractor.mjs";
function createContentTools(logger, browserGUIAgent) {
    const contentExtractor = new PaginatedContentExtractor(logger.spawn('ContentExtractor'));
    const getMarkdownTool = new Tool({
        id: 'browser_get_markdown',
        description: '[browser] Get the content of the current page as markdown with pagination support',
        parameters: z.object({
            page: z.number().optional().describe('Page number to extract (default: 1), in most cases, you do not need to pass this parameter.')
        }),
        function: async ({ page = 1 })=>{
            try {
                if (!browserGUIAgent) return {
                    status: 'error',
                    message: 'GUI Agent not initialized'
                };
                const browserPage = await browserGUIAgent.getPage();
                const result = await contentExtractor.extractContent(browserPage, page);
                return {
                    content: result.content,
                    pagination: {
                        currentPage: result.currentPage,
                        totalPages: result.totalPages,
                        hasMorePages: result.hasMorePages
                    },
                    title: result.title
                };
            } catch (error) {
                logger.error(`Error extracting markdown: ${error}`);
                return {
                    status: 'error',
                    message: `Failed to extract content: ${error instanceof Error ? error.message : String(error)}`
                };
            }
        }
    });
    return [
        getMarkdownTool
    ];
}
export { createContentTools };

//# sourceMappingURL=content.mjs.map