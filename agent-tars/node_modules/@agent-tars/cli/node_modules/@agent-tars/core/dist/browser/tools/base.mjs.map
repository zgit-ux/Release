{"version":3,"file":"browser/tools/base.mjs","sources":["webpack://@agent-tars/core/./src/browser/tools/base.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleLogger, ToolDefinition } from '@multimodal/mcp-agent';\nimport { Client } from '@modelcontextprotocol/sdk/client/index.js';\nimport { BrowserGUIAgent } from '../browser-gui-agent';\n\n/**\n * BrowserToolProvider - Interface for classes that can provide browser tools\n * \n * This interface defines the contract for any class that can generate browser\n * tool definitions for registration with the agent.\n */\nexport interface BrowserToolProvider {\n  /**\n   * Get the tool definitions for this provider\n   * @returns Array of tool definitions\n   */\n  getTools(): ToolDefinition[];\n}\n\n/**\n * BaseBrowserTool - Abstract base class for browser tools\n * \n * Provides common functionality and configuration for all browser tools,\n * whether they're implemented using the MCP Browser client, GUI Agent,\n * or custom implementation.\n */\nexport abstract class BaseBrowserTool implements BrowserToolProvider {\n  protected logger: ConsoleLogger;\n  protected browserClient?: Client;\n  protected browserGUIAgent?: BrowserGUIAgent;\n  protected category: string = 'browser';\n\n  /**\n   * Creates a new browser tool\n   * @param logger - Logger instance\n   */\n  constructor(logger: ConsoleLogger) {\n    this.logger = logger.spawn(this.constructor.name);\n  }\n\n  /**\n   * Set the MCP Browser client\n   * @param client - MCP Browser client instance\n   */\n  setBrowserClient(client: Client): void {\n    this.browserClient = client;\n  }\n\n  /**\n   * Set the Browser GUI Agent\n   * @param guiAgent - Browser GUI Agent instance\n   */\n  setBrowserGUIAgent(guiAgent: BrowserGUIAgent): void {\n    this.browserGUIAgent = guiAgent;\n  }\n\n  /**\n   * Get tool definitions provided by this tool\n   * This method must be implemented by concrete subclasses\n   */\n  abstract getTools(): ToolDefinition[];\n}\n\n/**\n * MCPBrowserTool - Base class for tools that use MCP Browser client\n *\n * Specializes BaseBrowserTool for tools that are implemented using the\n * MCP Browser client.\n */\nexport abstract class MCPBrowserTool extends BaseBrowserTool {\n  /**\n   * Create a tool definition that wraps an MCP tool\n   * @param name - Tool name\n   * @param description - Tool description \n   * @returns Tool definition\n   */\n  protected createMCPToolDefinition(name: string, description: string): ToolDefinition | null {\n    if (!this.browserClient) {\n      this.logger.warn(`Cannot create tool ${name}: Browser client not set`);\n      return null;\n    }\n\n    return {\n      name,\n      description: `[${this.category}] ${description}`,\n      schema: { type: 'object', properties: {} },\n      function: async (args: Record<string, unknown>) => {\n        try {\n          const result = await this.browserClient!.callTool({\n            name,\n            arguments: args,\n          });\n          return result.content;\n        } catch (error) {\n          this.logger.error(`Error executing tool '${name}':`, error);\n          throw error;\n        }\n      },\n    };\n  }\n}\n\n/**\n * CustomBrowserTool - Base class for custom browser tools\n *\n * Specializes BaseBrowserTool for tools that have custom implementations\n * rather than relying on MCP Browser client.\n */\nexport abstract class CustomBrowserTool extends BaseBrowserTool {\n  /**\n   * Get the page from GUI Agent\n   * Helper method for accessing the browser page\n   */\n  protected async getPage() {\n    if (!this.browserGUIAgent) {\n      throw new Error('GUI Agent not initialized');\n    }\n    return this.browserGUIAgent.getPage();\n  }\n}\n"],"names":["BaseBrowserTool","client","guiAgent","logger","MCPBrowserTool","name","description","args","result","error","CustomBrowserTool","Error"],"mappings":";;;;AAGC;;;;;;;;;;AA2BM,MAAeA;IAkBpB,iBAAiBC,MAAc,EAAQ;QACrC,IAAI,CAAC,aAAa,GAAGA;IACvB;IAMA,mBAAmBC,QAAyB,EAAQ;QAClD,IAAI,CAAC,eAAe,GAAGA;IACzB;IAlBA,YAAYC,MAAqB,CAAE;QATnC,uBAAU,UAAV;QACA,uBAAU,iBAAV;QACA,uBAAU,mBAAV;QACA,uBAAU,YAAmB;QAO3B,IAAI,CAAC,MAAM,GAAGA,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI;IAClD;AAuBF;AAQO,MAAeC,uBAAuBJ;IAOjC,wBAAwBK,IAAY,EAAEC,WAAmB,EAAyB;QAC1F,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAED,KAAK,wBAAwB,CAAC;YACrE,OAAO;QACT;QAEA,OAAO;YACLA;YACA,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAEC,aAAa;YAChD,QAAQ;gBAAE,MAAM;gBAAU,YAAY,CAAC;YAAE;YACzC,UAAU,OAAOC;gBACf,IAAI;oBACF,MAAMC,SAAS,MAAM,IAAI,CAAC,aAAa,CAAE,QAAQ,CAAC;wBAChDH;wBACA,WAAWE;oBACb;oBACA,OAAOC,OAAO,OAAO;gBACvB,EAAE,OAAOC,OAAO;oBACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAEJ,KAAK,EAAE,CAAC,EAAEI;oBACrD,MAAMA;gBACR;YACF;QACF;IACF;AACF;AAQO,MAAeC,0BAA0BV;IAK9C,MAAgB,UAAU;QACxB,IAAI,CAAC,IAAI,CAAC,eAAe,EACvB,MAAM,IAAIW,MAAM;QAElB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO;IACrC;AACF"}