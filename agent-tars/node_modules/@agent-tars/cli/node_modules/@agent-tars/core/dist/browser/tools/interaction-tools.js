/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    InteractionTools: ()=>InteractionTools
});
const external_base_js_namespaceObject = require("./base.js");
class InteractionTools extends external_base_js_namespaceObject.MCPBrowserTool {
    getTools() {
        const tools = [];
        const mcpTools = [
            {
                name: 'browser_click',
                description: 'Click on an element'
            },
            {
                name: 'browser_press_key',
                description: 'Press a key or keyboard shortcut'
            },
            {
                name: 'browser_hover',
                description: 'Hover over an element'
            },
            {
                name: 'browser_scroll',
                description: 'Scroll the page'
            },
            {
                name: 'browser_form_input_fill',
                description: 'Fill a form input field'
            },
            {
                name: 'browser_select',
                description: 'Select an option from a dropdown'
            },
            {
                name: 'browser_get_clickable_elements',
                description: 'Get all clickable elements on the page'
            },
            {
                name: 'browser_read_links',
                description: 'Get all links on the page'
            },
            {
                name: 'browser_screenshot',
                description: 'Take a screenshot of the page'
            },
            {
                name: 'browser_evaluate',
                description: 'Evaluate JavaScript on the page'
            }
        ];
        mcpTools.forEach((tool)=>{
            const toolDef = this.createMCPToolDefinition(tool.name, tool.description);
            if (toolDef) tools.push(toolDef);
        });
        return tools;
    }
    constructor(logger){
        super(logger);
        this.category = 'browser';
    }
}
var __webpack_export_target__ = exports;
for(var __webpack_i__ in __webpack_exports__)__webpack_export_target__[__webpack_i__] = __webpack_exports__[__webpack_i__];
if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, '__esModule', {
    value: true
});

//# sourceMappingURL=interaction-tools.js.map