{"version":3,"file":"index.45aa73788194307a.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/Navbar.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Layout/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/Navbar.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/ShareButton.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/ShareModal.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/shareService.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749662344115\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749662344112\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { Sidebar } from '@/standalone/sidebar';\nimport { Navbar } from '@/standalone/navbar';\nimport { ChatPanel } from '../Chat/ChatPanel';\nimport { WorkspacePanel } from '../Workspace/WorkspacePanel';\nimport { useSession } from '../../hooks/useSession';\nimport { motion } from 'framer-motion';\nimport { Shell } from './Shell';\nimport { useReplayMode } from '../../context/ReplayModeContext';\nimport './Layout.css';\n\ninterface LayoutProps {\n  isReplayMode?: boolean;\n}\n\n/**\n * Layout Component - Main application layout\n *\n * Design principles:\n * - Clean, minimalist aesthetic with refined borders and subtle shadows\n * - Neutral color palette with elegant accent colors\n * - Consistent spacing and typography for optimal readability\n * - Seamless visual flow between different interface elements\n * - Adapts layout based on replay mode status\n */\nexport const Layout: React.FC<LayoutProps> = ({ isReplayMode: propIsReplayMode }) => {\n  const { connectionStatus } = useSession();\n\n  // Use the context hook to get global replay mode status\n  const contextIsReplayMode = useReplayMode();\n\n  // Prioritize props for backward compatibility, but fall back to context\n  const isReplayMode = propIsReplayMode !== undefined ? propIsReplayMode : contextIsReplayMode;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-[#F2F3F5] dark:bg-white/5 text-gray-900 dark:text-gray-100 overflow-hidden\">\n      {/* Global navbar at the top */}\n      <Navbar />\n\n      {/* Main content area */}\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Sidebar with ToolBar and ChatSession - only show when not in replay mode */}\n        {!isReplayMode && <Sidebar />}\n\n        {/* Content area - using flex-col to properly distribute vertical space */}\n        <div className=\"flex-1 flex flex-col overflow-hidden p-2 lg:p-3\">\n          {/* Panels container - apply flex-1 to take remaining vertical space */}\n          <div className=\"flex gap-3 flex-1 min-h-0\">\n            {/* Chat panel - adjust width based on replay mode */}\n            <motion.div\n              layout\n              className={isReplayMode ? 'w-[50%] flex flex-col' : 'w-[50%] flex flex-col'}\n            >\n              <Shell className=\"h-full rounded-xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n                <ChatPanel />\n              </Shell>\n            </motion.div>\n\n            {/* Workspace panel */}\n            <motion.div layout className=\"w-[50%] flex flex-col\">\n              <Shell className=\"h-full rounded-xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n                <WorkspacePanel />\n              </Shell>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { ShareButton } from '@/standalone/share';\nimport { motion } from 'framer-motion';\nimport { FiMoon, FiSun } from 'react-icons/fi';\nimport { GoSidebarCollapse, GoSidebarExpand } from 'react-icons/go';\nimport { useLayout } from '../../hooks/useLayout';\nimport { useSession } from '../../hooks/useSession';\nimport { useReplayMode } from '../../context/ReplayModeContext';\n\nimport './Navbar.css';\n\nexport const Navbar: React.FC = () => {\n  const { isSidebarCollapsed, toggleSidebar } = useLayout();\n  const { activeSessionId, isProcessing, modelInfo } = useSession();\n  const isReplayMode = useReplayMode();\n  const [isDarkMode, setIsDarkMode] = React.useState(\n    document.documentElement.classList.contains('dark'),\n  );\n\n  // Toggle dark mode\n  const toggleDarkMode = useCallback(() => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    document.documentElement.classList.toggle('dark', newMode);\n\n    // Save preference to localStorage\n    localStorage.setItem('agent-tars-theme', newMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  return (\n    <div className=\"h-12 border-b border-gray-300/40 dark:border-gray-600/20 backdrop-blur-sm flex items-center px-3\">\n      {/* Left section with macOS-style traffic lights */}\n      <div className=\"flex items-center\">\n        {/* macOS-style traffic lights */}\n        <div className=\"flex space-x-1.5 mr-3\">\n          <div className=\"traffic-light traffic-light-red\" />\n          <div className=\"traffic-light traffic-light-yellow\" />\n          <div className=\"traffic-light traffic-light-green\" />\n        </div>\n      </div>\n\n      {/* Sidebar toggle button - positioned at the right edge aligned with Chat area */}\n      {!isReplayMode && (\n        <div className={`${isSidebarCollapsed ? 'ml-0' : 'ml-[245px]'}`}>\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={toggleSidebar}\n            className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 p-1.5 hover:bg-gray-100/40 dark:hover:bg-gray-800/40 rounded-full transition-colors\"\n            title={isSidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n          >\n            {isSidebarCollapsed ? <GoSidebarCollapse size={20} /> : <GoSidebarExpand size={20} />}\n          </motion.button>\n        </div>\n      )}\n\n      {/* Center section - Model info */}\n      <div className=\"flex-1 flex items-center justify-center\">\n        {modelInfo.model && (\n          <div className=\"px-3 py-1 rounded-full bg-gray-100/80 dark:bg-gray-700/80 text-xs text-gray-700 dark:text-gray-300 border border-gray-200/40 dark:border-gray-700/30 flex items-center\">\n            <div className=\"w-4 h-4 rounded-full bg-purple-400 dark:bg-purple-500 mr-2 flex-shrink-0\"></div>\n            <span className=\"font-mono\">{modelInfo.model}</span>\n            {modelInfo.provider && (\n              <span className=\"ml-2 px-1.5 py-0.5 rounded-md bg-gray-200/80 dark:bg-gray-600/80 text-gray-600 dark:text-gray-400 text-[10px]\">\n                {modelInfo.provider}\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Right section - with share button and dark mode toggle */}\n      <div className=\"flex items-center space-x-2\">\n        {activeSessionId && !isProcessing && !isReplayMode && <ShareButton variant=\"navbar\" />}\n\n        {/* Dark mode toggle */}\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={toggleDarkMode}\n          className=\"w-8 h-8 rounded-full flex items-center justify-center text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-100/40 dark:hover:bg-gray-800/40 transition-colors\"\n          title={isDarkMode ? 'Light Mode' : 'Dark Mode'}\n        >\n          {isDarkMode ? <FiSun size={16} /> : <FiMoon size={16} />}\n        </motion.button>\n      </div>\n    </div>\n  );\n};\n","export { Navbar } from './Navbar';\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiShare2 } from 'react-icons/fi';\nimport { useSession } from '@/main/hooks/useSession';\nimport { ShareModal } from './ShareModal';\n\ninterface ShareButtonProps {\n  variant?: 'default' | 'navbar';\n}\n\n/**\n * 分享按钮组件 - 显示在聊天面板底部或导航栏\n *\n * 设计原则:\n * - 简洁的单色图标，与整体黑白灰风格保持一致\n * - 圆形按钮设计，保持优雅的视觉效果\n * - 精细的悬停和点击动画，提升交互体验\n * - 支持不同的展示变体以适应不同位置\n */\nexport const ShareButton: React.FC<ShareButtonProps> = ({ variant = 'default' }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { activeSessionId } = useSession();\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  if (!activeSessionId) {\n    return null;\n  }\n\n  // Navbar variant has different styling\n  if (variant === 'navbar') {\n    return (\n      <>\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleOpenModal}\n          className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100/40 dark:hover:bg-gray-700/40 rounded-full transition-all duration-200\"\n          title=\"Share this conversation\"\n        >\n          <FiShare2 size={16} />\n        </motion.button>\n\n        <ShareModal isOpen={isModalOpen} onClose={handleCloseModal} sessionId={activeSessionId} />\n      </>\n    );\n  }\n\n  // Default variant (original styling)\n  return (\n    <>\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleOpenModal}\n        className=\"flex items-center gap-1.5 px-3 py-1.5 rounded-3xl text-xs text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/30 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700/70 transition-all duration-200\"\n        title=\"Share this conversation\"\n      >\n        <FiShare2 className=\"text-gray-500 dark:text-gray-400\" size={14} />\n        <span>Share</span>\n      </motion.button>\n\n      <ShareModal isOpen={isModalOpen} onClose={handleCloseModal} sessionId={activeSessionId} />\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiX, FiShare2, FiLink, FiDownload, FiCheck, FiLoader } from 'react-icons/fi';\nimport { shareService, ShareConfig, ShareResult } from './shareService';\nimport { Dialog } from '@headlessui/react';\n\ninterface ShareModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  sessionId: string;\n}\n\n/**\n * 分享模态框组件\n *\n * 设计原则:\n * - 简洁优雅的黑白灰风格，符合整体设计语言\n * - 大圆角和精细边框，呈现精致的视觉效果\n * - 动态过渡和微妙动画，提升用户体验\n * - 清晰的状态反馈，包括加载、成功和错误状态\n */\nexport const ShareModal: React.FC<ShareModalProps> = ({ isOpen, onClose, sessionId }) => {\n  const [shareConfig, setShareConfig] = useState<ShareConfig | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shareResult, setShareResult] = useState<ShareResult | null>(null);\n  const [copied, setCopied] = useState(false);\n\n  // 获取分享配置\n  useEffect(() => {\n    if (isOpen) {\n      const fetchConfig = async () => {\n        try {\n          const config = await shareService.getShareConfig();\n          setShareConfig(config);\n        } catch (error) {\n          console.error('Failed to get share config:', error);\n          // 设置默认配置\n          setShareConfig({ hasShareProvider: false, shareProvider: null });\n        }\n      };\n\n      fetchConfig();\n    }\n  }, [isOpen]);\n\n  // 当模态框关闭时重置状态，允许重新分享\n  useEffect(() => {\n    if (!isOpen) {\n      setShareResult(null);\n    }\n  }, [isOpen]);\n\n  // 处理上传分享\n  const handleUpload = async () => {\n    if (!sessionId || !shareConfig) return;\n\n    setIsLoading(true);\n    setShareResult(null);\n\n    try {\n      const result = await shareService.shareSession(sessionId, true);\n      setShareResult(result);\n    } catch (error) {\n      console.error('Failed to share session:', error);\n      setShareResult({\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 处理下载分享\n  const handleDownload = async () => {\n    if (!sessionId) return;\n\n    setIsLoading(true);\n    setShareResult(null);\n\n    try {\n      const result = await shareService.shareSession(sessionId, false);\n      setShareResult(result);\n\n      if (result.success && result.html) {\n        shareService.downloadShareHtml(result.html, sessionId);\n      }\n    } catch (error) {\n      console.error('Failed to download share HTML:', error);\n      setShareResult({\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 复制分享链接\n  const handleCopyLink = () => {\n    if (shareResult?.url) {\n      navigator.clipboard.writeText(shareResult.url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n      {/* 背景遮罩层 */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-40 backdrop-blur-md\" aria-hidden=\"true\" />\n\n      {/* 模态框内容容器 */}\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md p-6 bg-white dark:bg-gray-800 rounded-3xl border border-[#E5E6EC] dark:border-gray-700/30 shadow-lg\">\n          {/* 标题和关闭按钮 */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <Dialog.Title className=\"text-xl font-medium text-gray-800 dark:text-gray-200 flex items-center\">\n              <FiShare2 className=\"mr-3 text-gray-500 dark:text-gray-400\" />\n              Share Conversation\n            </Dialog.Title>\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={onClose}\n              className=\"p-2 rounded-full text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700/50 transition-colors\"\n            >\n              <FiX size={20} />\n            </motion.button>\n          </div>\n\n          {/* 正在加载配置 */}\n          {!shareConfig && (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center space-x-2 text-gray-500 dark:text-gray-400\">\n                <motion.div\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n                >\n                  <FiLoader size={20} />\n                </motion.div>\n                <span>Loading share options...</span>\n              </div>\n            </div>\n          )}\n\n          {/* 分享选项 */}\n          {shareConfig && !isLoading && !shareResult && (\n            <div className=\"space-y-6\">\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                Choose how you want to share this conversation:\n              </p>\n\n              <div className=\"space-y-4\">\n                {/* 上传选项 - 仅当配置了分享提供者时显示 */}\n                {shareConfig.hasShareProvider && (\n                  <motion.button\n                    whileHover={{ y: -2 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={handleUpload}\n                    className=\"w-full flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 hover:border-gray-300 dark:hover:border-gray-600/70 transition-all duration-200\"\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-700 dark:text-gray-300 mr-3\">\n                        <FiLink size={20} />\n                      </div>\n                      <div className=\"text-left\">\n                        <h4 className=\"font-medium text-gray-800 dark:text-gray-200\">\n                          Get shareable link\n                        </h4>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          Upload and get a link to share\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                      <FiShare2 size={16} className=\"text-gray-500 dark:text-gray-400\" />\n                    </div>\n                  </motion.button>\n                )}\n\n                {/* 下载选项 - 始终显示 */}\n                <motion.button\n                  whileHover={{ y: -2 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={handleDownload}\n                  className=\"w-full flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 hover:border-gray-300 dark:hover:border-gray-600/70 transition-all duration-200\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-700 dark:text-gray-300 mr-3\">\n                      <FiDownload size={20} />\n                    </div>\n                    <div className=\"text-left\">\n                      <h4 className=\"font-medium text-gray-800 dark:text-gray-200\">\n                        Download HTML\n                      </h4>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Save the conversation as HTML file\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                    <FiDownload size={16} className=\"text-gray-500 dark:text-gray-400\" />\n                  </div>\n                </motion.button>\n              </div>\n\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n                Sharing includes all messages and tool results in this conversation.\n              </p>\n            </div>\n          )}\n\n          {/* 加载状态 */}\n          {isLoading && (\n            <div className=\"flex flex-col items-center justify-center py-10\">\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 2, repeat: Infinity, ease: 'linear' }}\n                className=\"w-12 h-12 rounded-full border-2 border-gray-200 dark:border-gray-700 border-t-gray-600 dark:border-t-gray-300 mb-4\"\n              />\n              <p className=\"text-gray-700 dark:text-gray-300 text-center\">\n                Preparing your conversation for sharing...\n              </p>\n            </div>\n          )}\n\n          {/* 分享结果 - 成功 */}\n          {shareResult && shareResult.success && shareResult.url && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-50/50 dark:bg-green-900/20 rounded-xl p-4 border border-green-100/60 dark:border-green-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 dark:bg-green-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiCheck className=\"text-green-600 dark:text-green-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">\n                    Share link created!\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Your conversation is now available at the link below.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 bg-gray-50 dark:bg-gray-700/60 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 pr-1.5\">\n                <input\n                  type=\"text\"\n                  value={shareResult.url}\n                  readOnly\n                  className=\"flex-grow pl-4 py-3 bg-transparent text-gray-800 dark:text-gray-200 text-sm focus:outline-none\"\n                />\n                <button\n                  onClick={handleCopyLink}\n                  className=\"flex-shrink-0 px-3 py-1.5 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg text-xs font-medium text-gray-700 dark:text-gray-300 transition-colors\"\n                >\n                  {copied ? (\n                    <span className=\"flex items-center\">\n                      <FiCheck className=\"mr-1\" size={12} />\n                      Copied!\n                    </span>\n                  ) : (\n                    'Copy Link'\n                  )}\n                </button>\n              </div>\n\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n                This link will be accessible to anyone who has it.\n              </p>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n\n          {/* 分享结果 - 下载HTML成功 */}\n          {shareResult && shareResult.success && shareResult.html && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-50/50 dark:bg-green-900/20 rounded-xl p-4 border border-green-100/60 dark:border-green-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 dark:bg-green-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiCheck className=\"text-green-600 dark:text-green-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">\n                    HTML file downloaded!\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    The HTML file contains all messages and tool results from this conversation.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n\n          {/* 分享结果 - 错误 */}\n          {shareResult && !shareResult.success && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-red-50/50 dark:bg-red-900/20 rounded-xl p-4 border border-red-100/60 dark:border-red-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-red-100 dark:bg-red-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiX className=\"text-red-600 dark:text-red-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">Failed to share</p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    {shareResult.error ||\n                      'An error occurred while trying to share the conversation.'}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n","export { ShareButton } from './ShareButton';\nexport { ShareModal } from './ShareModal';\n","import { API_BASE_URL } from '@/main/constants';\n\n/**\n * 分享配置接口\n */\nexport interface ShareConfig {\n  hasShareProvider: boolean;\n  shareProvider: string | null;\n}\n\n/**\n * 分享结果接口\n */\nexport interface ShareResult {\n  success: boolean;\n  url?: string;\n  html?: string;\n  sessionId?: string;\n  error?: string;\n}\n\n/**\n * 分享服务类 - 处理分享相关功能\n */\nclass ShareService {\n  private shareConfig: ShareConfig | null = null;\n\n  /**\n   * 获取分享配置\n   */\n  async getShareConfig(): Promise<ShareConfig> {\n    if (this.shareConfig) {\n      return this.shareConfig;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/share/config`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get share config: ${response.statusText}`);\n      }\n\n      this.shareConfig = await response.json();\n      return this.shareConfig as ShareConfig;\n    } catch (error) {\n      console.error('Failed to get share config:', error);\n      // 默认配置\n      return { hasShareProvider: false, shareProvider: null };\n    }\n  }\n\n  /**\n   * 分享会话\n   * @param sessionId 会话ID\n   * @param upload 是否上传到分享提供者（如果存在）\n   */\n  async shareSession(sessionId: string, upload = false): Promise<ShareResult> {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/sessions/share`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, upload }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Failed to share session: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Failed to share session:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  }\n\n  /**\n   * 下载 HTML 分享文件\n   * @param html HTML 内容\n   * @param sessionId 会话ID\n   */\n  downloadShareHtml(html: string, sessionId: string): void {\n    const blob = new Blob([html], { type: 'text/html' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `agent-tars-${sessionId}-${Date.now()}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n}\n\nexport const shareService = new ShareService();\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;AASA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;;;;;AAGA;AAAA;;AAEA;;;;;AAGA;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;AAEA;AAAA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AA5CA;;AACA;AAGA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AAEA;AAAA;;AACA;AAAA;;;;;;AACA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;;AACA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AAAA;;AACA;AAAA;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAKA;AA7EA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;AAQA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AApDA;;AAEA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAQA;;;;;;;;AAQA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AAAA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;;;;;;AAAA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;AAEA;AAAA;;;;;;;;;;;;;;;;;AAMA;AACA;;AACA;AAAA;AAAA;;;;;;AAIA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;;;;;;;;;;;;AAOA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;AAOA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;;;;;;;;;;;;AAKA;AAAA;AAAA;;;;;;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAnUA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAqBA;;AAEA;AAIA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxEA;;AAyEA;AAEA"}