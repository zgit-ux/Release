"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749956811597
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/standalone/workspace/WorkspaceDetail.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  WorkspaceDetail: () => (WorkspaceDetail)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var _common_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/common/hooks/useSession.ts");
/* ESM import */var _common_hooks_useTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/common/hooks/useTool.tsx");
/* ESM import */var _common_utils_formatters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/common/utils/formatters.ts");
/* ESM import */var _renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/standalone/workspace/renderers/ToolResultRenderer.tsx");
/* ESM import */var _renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/standalone/workspace/renderers/ResearchReportRenderer.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();








/**
 * WorkspaceDetail Component - Displays details of a single tool result or report
 */ const WorkspaceDetail = ()=>{
    var _activePanelContent_toolCallId;
    _s();
    const { activePanelContent, setActivePanelContent } = (0,_common_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    const { getToolIcon } = (0,_common_hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool)();
    const [zoomedImage, setZoomedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    if (!activePanelContent) {
        return null;
    }
    // 特殊处理 final_answer 类型、研究报告内容或可交付产物
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report' || (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'deliverable' || activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer')) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: typeof activePanelContent.source === 'string' ? activePanelContent.source : JSON.stringify(activePanelContent.source, null, 2),
            title: activePanelContent.title || 'Research Report',
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
            lineNumber: 30,
            columnNumber: 7
        }, undefined);
    }
    // 特殊处理研究报告内容
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report') {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: activePanelContent.source,
            title: activePanelContent.title,
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
            lineNumber: 45,
            columnNumber: 7
        }, undefined);
    }
    // Convert legacy format content to standardized tool result parts
    const getStandardizedContent = ()=>{
        const { type, source, title, error, arguments: toolArguments } = activePanelContent;
        // Show error if present
        if (error) {
            return [
                {
                    type: 'text',
                    name: 'ERROR',
                    text: error
                }
            ];
        }
        // Handle read_file and write_file tools specifically
        if ((type === 'file' || type === 'read_file' || type === 'write_file') && (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path)) {
            // Handle case where content is an array of content parts (modern format)
            if (Array.isArray(source)) {
                const textContent = source.find((part)=>part.type === 'text');
                if (textContent && textContent.text) {
                    return [
                        {
                            type: 'file_result',
                            name: 'FILE_RESULT',
                            path: toolArguments.path,
                            content: textContent.text
                        }
                    ];
                }
            }
            // Handle case where content is directly in source or toolArguments
            const content = toolArguments.content || (typeof source === 'string' ? source : null);
            if (content) {
                return [
                    {
                        type: 'file_result',
                        name: 'FILE_RESULT',
                        path: toolArguments.path,
                        content: content
                    }
                ];
            }
        }
        // Handle browser_vision_control type specifically
        if (type === 'browser_vision_control') {
            // 如果这是环境增强，包含原始截图数据
            const environmentImage = Array.isArray(activePanelContent.originalContent) ? extractImageUrl(activePanelContent.originalContent) : null;
            // Create browser_control part for the specialized renderer
            return [
                {
                    type: 'browser_control',
                    name: 'BROWSER_CONTROL',
                    toolCallId: activePanelContent.toolCallId,
                    thought: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.thought) || '',
                    step: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.step) || '',
                    action: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.action) || '',
                    status: (source === null || source === void 0 ? void 0 : source.status) || 'unknown',
                    environmentImage: environmentImage
                }
            ];
        }
        // Handle array of content parts from environment_input
        if (Array.isArray(source) && source.some((part)=>part.type === 'image_url')) {
            const imagePart = source.find((part)=>part.type === 'image_url');
            if (imagePart && imagePart.image_url && imagePart.image_url.url) {
                const imgSrc = imagePart.image_url.url;
                if (imgSrc.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = imgSrc.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
            }
        }
        // Based on tool type, convert to standardized format
        switch(type){
            case 'image':
                // Image content
                if (typeof source === 'string' && source.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = source.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: 'Image could not be displayed'
                    }
                ];
            case 'search':
                // Search results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    // Handle new multimodal format
                    const resultsItem = source.find((item)=>item.name === 'RESULTS');
                    const queryItem = source.find((item)=>item.name === 'QUERY');
                    if (resultsItem && resultsItem.text) {
                        // Parse results text into separate result items
                        const resultBlocks = resultsItem.text.split('---').filter(Boolean);
                        const parsedResults = resultBlocks.map((block)=>{
                            const lines = block.trim().split('\n');
                            const titleLine = lines[0] || '';
                            const urlLine = lines[1] || '';
                            const snippet = lines.slice(2).join('\n');
                            const title = titleLine.replace(/^\[\d+\]\s*/, '').trim();
                            const url = urlLine.replace(/^URL:\s*/, '').trim();
                            return {
                                title,
                                url,
                                snippet
                            };
                        });
                        // Return only the search_result part, removing the redundant text query part
                        return [
                            {
                                type: 'search_result',
                                name: 'SEARCH_RESULTS',
                                results: parsedResults,
                                query: queryItem === null || queryItem === void 0 ? void 0 : queryItem.text
                            }
                        ];
                    }
                }
                // Handle old format
                if (source && typeof source === 'object' && source.results) {
                    return [
                        {
                            type: 'search_result',
                            name: 'SEARCH_RESULTS',
                            results: source.results,
                            query: source.query
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'command':
                // Command results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    var _source_find;
                    // New multimodal format
                    const commandItem = source.find((item)=>item.name === 'COMMAND');
                    const stdoutItem = source.find((item)=>item.name === 'STDOUT');
                    const stderrItem = source.find((item)=>item.name === 'STDERR');
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: (commandItem === null || commandItem === void 0 ? void 0 : commandItem.text) || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: (stdoutItem === null || stdoutItem === void 0 ? void 0 : stdoutItem.text) || '',
                            stderr: (stderrItem === null || stderrItem === void 0 ? void 0 : stderrItem.text) || '',
                            exitCode: (_source_find = source.find((item)=>item.name === 'EXIT_CODE')) === null || _source_find === void 0 ? void 0 : _source_find.value
                        }
                    ];
                }
                // Old format
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: source.command || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: source.output || source.stdout || '',
                            stderr: source.stderr || '',
                            exitCode: source.exitCode
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'browser':
                return [
                    {
                        type: 'json',
                        name: title || 'BROWSER_DATA',
                        data: source
                    }
                ];
            case 'file':
            case 'read_file':
            case 'write_file':
                // Handle file operations in a more generic way
                if (Array.isArray(source)) {
                    // Modern format with content parts array
                    const textContent = source.find((part)=>part.type === 'text');
                    if (textContent && textContent.text) {
                        return [
                            {
                                type: 'file_result',
                                name: 'FILE_RESULT',
                                path: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path) || 'Unknown file',
                                content: textContent.text
                            }
                        ];
                    }
                }
                // Legacy format where source is an object
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'file_result',
                            name: 'FILE_RESULT',
                            path: source.path || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path) || 'Unknown file',
                            content: source.content || 'No content available'
                        }
                    ];
                }
                // Handle case where source might be a direct string content
                if (typeof source === 'string') {
                    return [
                        {
                            type: 'file_result',
                            name: 'FILE_RESULT',
                            path: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path) || 'Unknown file',
                            content: source
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            default:
                // Default handling for unknown types
                if (typeof source === 'object') {
                    return [
                        {
                            type: 'json',
                            name: 'JSON_DATA',
                            data: source
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
        }
    };
    // 辅助函数：从环境内容中提取图片URL
    const extractImageUrl = (content)=>{
        const imgPart = content.find((part)=>part && part.type === 'image_url' && part.image_url && part.image_url.url);
        return imgPart ? imgPart.image_url.url : null;
    };
    // Handle tool result content action
    const handleContentAction = (action, data)=>{
        if (action === 'zoom' && data.src) {
            // Show zoomed image in modal
            setZoomedImage({
                src: data.src,
                alt: data.alt
            });
        }
    };
    // Handle back navigation
    const handleBack = ()=>{
        setActivePanelContent(null);
    };
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {
        initial: {
            opacity: 0
        },
        animate: {
            opacity: 1
        },
        exit: {
            opacity: 0
        },
        className: "h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20",
        children: [
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "flex items-center",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.button, {
                            whileHover: {
                                scale: 1.05,
                                x: -2
                            },
                            whileTap: {
                                scale: 0.95
                            },
                            onClick: handleBack,
                            className: "mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50",
                            title: "Back to workspace",
                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiArrowLeft, {
                                size: 18
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                lineNumber: 379,
                                columnNumber: 13
                            }, undefined)
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                            lineNumber: 372,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden relative",
                            children: ((_activePanelContent_toolCallId = activePanelContent.toolCallId) === null || _activePanelContent_toolCallId === void 0 ? void 0 : _activePanelContent_toolCallId.startsWith('final-answer')) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "absolute inset-0 bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20"
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                        lineNumber: 386,
                                        columnNumber: 17
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "relative z-10",
                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiBookOpen, {
                                            className: "text-accent-600 dark:text-accent-400",
                                            size: 20
                                        }, void 0, false, {
                                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                            lineNumber: 388,
                                            columnNumber: 19
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                        lineNumber: 387,
                                        columnNumber: 17
                                    }, undefined)
                                ]
                            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: `absolute inset-0 ${(activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'search' ? 'bg-gradient-to-br from-blue-400/20 to-indigo-500/10 dark:from-blue-600/30 dark:to-indigo-500/20' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser' ? 'bg-gradient-to-br from-purple-400/20 to-pink-500/10 dark:from-purple-600/30 dark:to-pink-500/20' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'command' ? 'bg-gradient-to-br from-green-400/20 to-emerald-500/10 dark:from-green-600/30 dark:to-emerald-500/20' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'file' ? 'bg-gradient-to-br from-yellow-400/20 to-amber-500/10 dark:from-yellow-600/30 dark:to-amber-500/20' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'image' ? 'bg-gradient-to-br from-red-400/20 to-rose-500/10 dark:from-red-600/30 dark:to-rose-500/20' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser_vision_control' ? 'bg-gradient-to-br from-cyan-400/20 to-teal-500/10 dark:from-cyan-600/30 dark:to-teal-500/20' : 'bg-gradient-to-br from-gray-400/20 to-gray-500/10 dark:from-gray-500/30 dark:to-gray-600/20'}`
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                        lineNumber: 393,
                                        columnNumber: 17
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "relative z-10",
                                        children: getToolIcon((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) || 'other')
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                        lineNumber: 410,
                                        columnNumber: 17
                                    }, undefined)
                                ]
                            }, void 0, true)
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                            lineNumber: 382,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("h2", {
                                    className: "font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight",
                                    children: activePanelContent.title
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                    lineNumber: 418,
                                    columnNumber: 13
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "text-xs text-gray-500 dark:text-gray-400",
                                    children: (0,_common_utils_formatters__WEBPACK_IMPORTED_MODULE_4__.formatTimestamp)(activePanelContent.timestamp)
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                    lineNumber: 421,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                            lineNumber: 417,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                    lineNumber: 371,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                lineNumber: 370,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex-1 overflow-auto p-6",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__.ToolResultRenderer, {
                    content: getStandardizedContent(),
                    onAction: handleContentAction
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                    lineNumber: 430,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                lineNumber: 429,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.AnimatePresence, {
                children: zoomedImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {
                    initial: {
                        opacity: 0
                    },
                    animate: {
                        opacity: 1
                    },
                    exit: {
                        opacity: 0
                    },
                    className: "fixed inset-0 z-50 flex items-center justify-center bg-black/80 p-4 backdrop-blur-sm",
                    onClick: ()=>setZoomedImage(null),
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {
                        initial: {
                            scale: 0.9,
                            opacity: 0
                        },
                        animate: {
                            scale: 1,
                            opacity: 1
                        },
                        exit: {
                            scale: 0.9,
                            opacity: 0
                        },
                        transition: {
                            duration: 0.3,
                            ease: [
                                0.19,
                                1,
                                0.22,
                                1
                            ]
                        },
                        className: "relative max-w-[95vw] max-h-[95vh]",
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("button", {
                                onClick: (e)=>{
                                    e.stopPropagation();
                                    setZoomedImage(null);
                                },
                                className: "absolute -top-2 -right-2 p-2 rounded-full bg-gray-900/90 text-white hover:bg-gray-800 shadow-lg",
                                "aria-label": "Close",
                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiX, {
                                    size: 24
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                    lineNumber: 458,
                                    columnNumber: 17
                                }, undefined)
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                lineNumber: 450,
                                columnNumber: 15
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("img", {
                                src: zoomedImage.src,
                                alt: zoomedImage.alt || 'Zoomed image',
                                className: "max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl"
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                                lineNumber: 460,
                                columnNumber: 15
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                        lineNumber: 443,
                        columnNumber: 13
                    }, undefined)
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                    lineNumber: 436,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
                lineNumber: 434,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx",
        lineNumber: 363,
        columnNumber: 5
    }, undefined);
};
_s(WorkspaceDetail, "gpg4zjVyxOdyaQV8bhqr5oyL5r8=", false, function() {
    return [
        _common_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession,
        _common_hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool
    ];
});
_c = WorkspaceDetail;
var _c;
$RefreshReg$(_c, "WorkspaceDetail");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("69ccf67a9b56c357")
})();

}
);
//# sourceMappingURL=index.d3d81ec239c3d79f.hot-update.js.map