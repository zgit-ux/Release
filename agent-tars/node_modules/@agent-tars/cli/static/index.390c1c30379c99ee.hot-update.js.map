{"version":3,"file":"index.390c1c30379c99ee.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/Workspace.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Layout/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/replay/ReplayControls.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/replay/TimelineSlider.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/PlanView.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspacePanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserControlRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserShell.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/CommandResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/DeliverableRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/FileResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/GenericResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ImageRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/LinkRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/PlanViewerRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ResearchReportRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/SearchResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/TextRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ToolResultRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749663299173\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749663299172\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { Sidebar } from '@/standalone/sidebar';\nimport { Navbar } from '@/standalone/navbar';\nimport { ChatPanel } from '../Chat/ChatPanel';\nimport { WorkspacePanel } from '@/standalone/workspace/WorkspacePanel'\nimport { useSession } from '../../hooks/useSession';\nimport { motion } from 'framer-motion';\nimport { Shell } from './Shell';\nimport { useReplayMode } from '../../hooks/useReplayMode';\nimport './Layout.css';\n\ninterface LayoutProps {\n  isReplayMode?: boolean;\n}\n\n/**\n * Layout Component - Main application layout\n *\n * Design principles:\n * - Clean, minimalist aesthetic with refined borders and subtle shadows\n * - Neutral color palette with elegant accent colors\n * - Consistent spacing and typography for optimal readability\n * - Seamless visual flow between different interface elements\n * - Adapts layout based on replay mode status\n */\nexport const Layout: React.FC<LayoutProps> = ({ isReplayMode: propIsReplayMode }) => {\n  const { connectionStatus } = useSession();\n\n  // Use the context hook to get global replay mode status\n  const contextIsReplayMode = useReplayMode();\n\n  // Prioritize props for backward compatibility, but fall back to context\n  const isReplayMode = propIsReplayMode !== undefined ? propIsReplayMode : contextIsReplayMode;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-[#F2F3F5] dark:bg-white/5 text-gray-900 dark:text-gray-100 overflow-hidden\">\n      {/* Global navbar at the top */}\n      <Navbar />\n\n      {/* Main content area */}\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Sidebar with ToolBar and ChatSession - only show when not in replay mode */}\n        {!isReplayMode && <Sidebar />}\n\n        {/* Content area - using flex-col to properly distribute vertical space */}\n        <div className=\"flex-1 flex flex-col overflow-hidden p-2 lg:p-3\">\n          {/* Panels container - apply flex-1 to take remaining vertical space */}\n          <div className=\"flex gap-3 flex-1 min-h-0\">\n            {/* Chat panel - adjust width based on replay mode */}\n            <motion.div\n              layout\n              className={isReplayMode ? 'w-[50%] flex flex-col' : 'w-[50%] flex flex-col'}\n            >\n              <Shell className=\"h-full rounded-xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n                <ChatPanel />\n              </Shell>\n            </motion.div>\n\n            {/* Workspace panel */}\n            <motion.div layout className=\"w-[50%] flex flex-col\">\n              <Shell className=\"h-full rounded-xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n                <WorkspacePanel />\n              </Shell>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiPlay, FiPause, FiSkipForward, FiX, FiClock, FiRefreshCw } from 'react-icons/fi';\nimport { useReplay } from '../../hooks/useReplay';\n\n/**\n * ReplayControls - Provides playback controls for the replay functionality\n *\n * Design principles:\n * - Monochromatic black/gray design that matches the UI\n * - Minimalist controls with subtle hover states\n * - No box shadows or excessive decorations\n */\nexport const ReplayControls: React.FC = () => {\n  const {\n    replayState,\n    startReplay,\n    pauseReplay,\n    jumpToResult,\n    exitReplay,\n    setPlaybackSpeed,\n    cancelAutoPlay,\n    resetReplay,\n  } = useReplay();\n\n  const { isPaused, playbackSpeed, autoPlayCountdown, currentEventIndex, events } = replayState;\n\n  // 确定按钮状态 - 添加倒计时判断\n  const isCountingDown = autoPlayCountdown !== null;\n  const showPlayButton = isPaused || isCountingDown;\n\n  // 检查回放是否已完成（当前事件索引已到达最后）\n  const isReplayCompleted =\n    events.length > 0 && currentEventIndex === events.length - 1 && isPaused;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 10 }}\n      transition={{ duration: 0.3 }}\n      className=\"flex items-center justify-between gap-2 px-4 py-3 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\"\n    >\n      {/* Exit button - moved to left side */}\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={exitReplay}\n        className=\"p-1.5 rounded-full text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 transition-colors\"\n        title=\"Exit replay\"\n      >\n        <FiX size={16} />\n      </motion.button>\n\n      {/* Center playback controls */}\n      <div className=\"flex items-center gap-3\">\n        {/* Play/Pause button - now larger and more prominent */}\n        {isReplayCompleted ? (\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => resetReplay()}\n            className=\"w-10 h-10 flex items-center justify-center rounded-full bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800\"\n            title=\"Replay from beginning\"\n          >\n            <FiRefreshCw size={18} />\n          </motion.button>\n        ) : (\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => {\n              if (isCountingDown) {\n                // 如果在倒计时，取消倒计时并开始播放\n                cancelAutoPlay();\n                startReplay();\n              } else if (isPaused) {\n                startReplay();\n              } else {\n                pauseReplay();\n              }\n            }}\n            className=\"w-10 h-10 flex items-center justify-center rounded-full bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800\"\n          >\n            {showPlayButton ? <FiPlay size={18} /> : <FiPause size={18} />}\n          </motion.button>\n        )}\n\n        {/* Skip to end button */}\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={() => {\n            // 如果在倒计时，先取消倒计时\n            if (isCountingDown) {\n              cancelAutoPlay();\n            }\n            jumpToResult();\n          }}\n          className=\"flex items-center justify-center w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600\"\n          title=\"Skip to end\"\n        >\n          <FiSkipForward size={16} />\n        </motion.button>\n      </div>\n\n      {/* Playback speed controls */}\n      <div className=\"flex items-center gap-1\">\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 mr-1\">\n          <FiClock size={12} className=\"inline mr-1\" />\n          Speed\n        </span>\n        {[1, 2, 3].map((speed) => (\n          <motion.button\n            key={speed}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setPlaybackSpeed(speed)}\n            className={`w-6 h-6 flex items-center justify-center rounded-full text-xs font-medium ${\n              playbackSpeed === speed\n                ? 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 border border-gray-300/50 dark:border-gray-600/30'\n                : 'text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50'\n            }`}\n          >\n            {speed}x\n          </motion.button>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMessageSquare, FiTool, FiImage, FiCpu, FiBookOpen } from 'react-icons/fi';\nimport { AgentEventStream } from '../../types';\nimport { useReplay } from '../../hooks/useReplay';\nimport { formatTimestamp } from '../../utils/formatters';\n\n/**\n * TimelineSlider - Interactive timeline for replay navigation\n *\n * Enhanced with:\n * - Monochromatic design matching the app's black/gray aesthetic\n * - Subtle markers with minimal visual noise\n * - No box shadows or gradients\n */\nexport const TimelineSlider: React.FC = () => {\n  const { replayState, jumpToPosition, getCurrentPosition, getCurrentEvent } = useReplay();\n\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoverPosition, setHoverPosition] = useState<number | null>(null);\n  const [hoverEvent, setHoverEvent] = useState<Event | null>(null);\n\n  const { events } = replayState;\n  const currentPosition = getCurrentPosition();\n  const currentEvent = getCurrentEvent();\n\n  // Handle mouse down on slider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    setIsDragging(true);\n    updatePositionFromMouse(e);\n  };\n\n  // Handle mouse move for dragging and hover feedback\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    // Update hover position and event\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    setHoverPosition(position);\n\n    // Find event closest to hover position\n    if (events.length > 0) {\n      const index = Math.floor(position * events.length);\n      const boundedIndex = Math.max(0, Math.min(index, events.length - 1));\n      setHoverEvent(events[boundedIndex]);\n    }\n\n    // Update position if dragging\n    if (isDragging) {\n      updatePositionFromMouse(e);\n    }\n  };\n\n  // Handle mouse up to end dragging\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Calculate position from mouse event\n  const updatePositionFromMouse = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    jumpToPosition(position);\n  };\n\n  // Handle mouse leave\n  const handleMouseLeave = () => {\n    setHoverPosition(null);\n    setHoverEvent(null);\n    setIsDragging(false);\n  };\n\n  // Add global mouse up handler when dragging\n  useEffect(() => {\n    if (isDragging) {\n      const handleGlobalMouseUp = () => setIsDragging(false);\n      window.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => window.removeEventListener('mouseup', handleGlobalMouseUp);\n    }\n  }, [isDragging]);\n\n  // Get color for event marker\n  const getEventColor = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'bg-gray-400 dark:bg-gray-500';\n      case 'assistant_message':\n        return 'bg-gray-600 dark:bg-gray-400';\n      case 'tool_call':\n      case 'tool_result':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'environment_input':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'plan_update':\n      case 'plan_finish':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'final_answer':\n        return 'bg-gray-700 dark:bg-gray-300';\n      default:\n        return 'bg-gray-400 dark:bg-gray-500';\n    }\n  };\n\n  // Get icon for event type (for tooltip)\n  const getEventIcon = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'assistant_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'tool_call':\n      case 'tool_result':\n        return <FiTool size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'environment_input':\n        return <FiImage size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'plan_update':\n      case 'plan_finish':\n        return <FiCpu size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'final_answer':\n        return <FiBookOpen size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      default:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n    }\n  };\n\n  // Get event description for hover tooltip\n  const getEventDescription = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'User Message';\n      case 'assistant_message':\n        return 'Assistant Response';\n      case 'tool_call':\n        return `Tool Call: ${event.name || ''}`;\n      case 'tool_result':\n        return `Tool Result: ${event.name || ''}`;\n      case 'environment_input':\n        return 'Browser Screenshot';\n      case 'plan_update':\n        return 'Plan Update';\n      case 'plan_finish':\n        return 'Plan Completed';\n      case 'final_answer':\n        return 'Research Report';\n      default:\n        return event.type;\n    }\n  };\n\n  // Get event content preview for the tooltip\n  const getEventContentPreview = (event: AgentEventStream.Event) => {\n    if (event.type === 'user_message' || event.type === 'assistant_message') {\n      const content =\n        typeof event.content === 'string'\n          ? event.content\n          : Array.isArray(event.content) &&\n              event.content.length > 0 &&\n              event.content[0].type === 'text'\n            ? event.content[0].text\n            : '';\n\n      return content.length > 50 ? content.substring(0, 47) + '...' : content;\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"relative px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\">\n      {/* Current time display */}\n      {currentEvent && (\n        <div className=\"absolute left-3 top-0 text-xs text-gray-500 dark:text-gray-400 py-1\">\n          {formatTimestamp(currentEvent.timestamp)}\n        </div>\n      )}\n\n      {/* Timeline slider with modern media player styling */}\n      <div\n        ref={sliderRef}\n        className=\"relative h-6 mt-4 cursor-pointer\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseLeave}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* Track background - simplified and more minimal */}\n        <div className=\"absolute inset-0 top-1/2 -translate-y-1/2 h-1.5 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n          {/* No texture dots, keeping it minimal */}\n        </div>\n\n        {/* Progress fill */}\n        <div\n          className=\"absolute top-1/2 -translate-y-1/2 left-0 h-1.5 bg-gray-800 dark:bg-gray-300 rounded-full\"\n          style={{ width: `${currentPosition}%` }}\n        />\n\n        {/* Event markers - more subtle, minimal style */}\n        {events.map((event, index) => {\n          const position = (index / (events.length - 1)) * 100;\n\n          return (\n            <motion.div\n              key={`${event.id}-${index}`}\n              className={`absolute top-1/2 -translate-y-1/2 w-1.5 h-3 ${getEventColor(event)} rounded-sm`}\n              style={{ left: `${position}%`, marginLeft: '-1px' }}\n              initial={{ opacity: 0.6, height: 3 }}\n              animate={{\n                opacity: 0.8,\n                height: currentEvent?.id === event.id ? 5 : 3,\n              }}\n              whileHover={{ opacity: 1, height: 5 }}\n              transition={{ duration: 0.2 }}\n            />\n          );\n        })}\n\n        {/* Playhead - larger and more prominent but without shadow */}\n        <motion.div\n          className=\"absolute top-[5px] -translate-y-1/2 w-4 h-4 rounded-full bg-white dark:bg-gray-200 border-2 border-gray-800 dark:border-gray-600 z-30\"\n          style={{ left: `calc(${currentPosition}% - 8px)` }}\n          animate={{\n            scale: isDragging ? 1.2 : 1,\n          }}\n          transition={{ duration: 0.2 }}\n        />\n\n        {/* Hover position indicator */}\n        {hoverPosition !== null && !isDragging && (\n          <motion.div\n            className=\"absolute top-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400/40 dark:bg-gray-500/40 rounded-full z-10\"\n            style={{ left: `${hoverPosition * 100}%` }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </div>\n\n      {/* Improved hover tooltip - monochromatic style */}\n      {hoverEvent && hoverPosition !== null && (\n        <motion.div\n          className=\"absolute bottom-full mb-2 p-2 bg-gray-100 dark:bg-gray-800 rounded-lg border border-gray-200/50 dark:border-gray-700/30 text-xs max-w-xs z-50\"\n          style={{\n            left: `${hoverPosition * 100}%`,\n            transform: 'translateX(-50%)',\n          }}\n          initial={{ opacity: 0, y: 5, scale: 0.95 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 flex-shrink-0\">{getEventIcon(hoverEvent)}</div>\n            <div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">\n                {getEventDescription(hoverEvent)}\n              </div>\n\n              {getEventContentPreview(hoverEvent) && (\n                <div className=\"mt-1 text-gray-600 dark:text-gray-400 italic line-clamp-2 text-[10px]\">\n                  \"{getEventContentPreview(hoverEvent)}\"\n                </div>\n              )}\n\n              <div className=\"mt-1 text-[10px] text-gray-500 dark:text-gray-400\">\n                {formatTimestamp(hoverEvent.timestamp)}\n              </div>\n            </div>\n          </div>\n\n          {/* Tooltip arrow */}\n          <div className=\"absolute left-1/2 bottom-0 w-2 h-2 bg-gray-100 dark:bg-gray-800 border-r border-b border-gray-200/50 dark:border-gray-700/30 transform rotate-45 translate-y-1 -translate-x-1\"></div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  FiArrowLeft,\n  FiCpu,\n  FiPlayCircle,\n  FiPauseCircle,\n  FiCheckCircle,\n  FiClock,\n  FiMap,\n} from 'react-icons/fi';\nimport { useSession } from '@/main/hooks/useSession';\nimport { usePlan } from '@/main/hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n *\n * Features:\n * - Shows current plan status and steps\n * - Supports timeline navigation through plan keyframes\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex,\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center max-w-md p-8\"\n        >\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-3xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/50 dark:border-gray-700/30 shadow-sm\">\n            <FiMap className=\"text-gray-500 dark:text-gray-400\" size={32} />\n          </div>\n          <h3 className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\">\n            No Plan Available\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            The agent hasn't created a plan for this task yet, or the task was simple enough to not\n            require planning.\n          </p>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\"\n    >\n      {/* Header with back button */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={onBack}\n            className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={18} />\n          </motion.button>\n\n          <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 border border-accent-100/50 dark:border-accent-800/30 flex items-center justify-center text-accent-600 dark:text-accent-400\">\n            <FiCpu size={18} />\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              Task Plan\n            </h2>\n            <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400\">\n              {displayedPlan.isComplete ? (\n                <span className=\"flex items-center\">\n                  <FiCheckCircle className=\"mr-1 text-green-500 dark:text-green-400\" size={12} />\n                  Completed\n                </span>\n              ) : (\n                <span className=\"flex items-center\">\n                  <FiClock className=\"mr-1 text-accent-500 dark:text-accent-400\" size={12} />\n                  In progress\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Future replay controls */}\n        <div className=\"flex items-center space-x-2\">\n          {currentPlan.keyframes && currentPlan.keyframes.length > 1 && (\n            <div className=\"text-xs bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full text-gray-600 dark:text-gray-400 border border-gray-200/50 dark:border-gray-700/30\">\n              {currentKeyframeIndex !== undefined && (\n                <span>\n                  Keyframe {currentKeyframeIndex + 1} of {currentPlan.keyframes.length}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Plan content */}\n      <div className=\"flex-1 overflow-auto bg-gradient-to-b from-gray-50/80 to-gray-100/50 dark:from-gray-900/20 dark:to-gray-900/30\">\n        <PlanViewerRenderer\n          plan={{\n            ...displayedPlan,\n            keyframes: currentPlan.keyframes,\n            currentKeyframeIndex,\n          }}\n          onKeyframeChange={handleKeyframeChange}\n        />\n      </div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '@/main/hooks/useSession';\nimport { usePlan } from '@/main/hooks/usePlan';\nimport {\n  FiLayout,\n  FiCpu,\n  FiZap,\n  FiArrowRight,\n  FiLayers,\n  FiActivity,\n  FiFileText,\n} from 'react-icons/fi';\nimport './Workspace.css';\n\n/**\n * WorkspaceContent Component - Enhanced workspace with beautiful empty state\n *\n * Design principles:\n * - Focus on plan display for Pro users\n * - Beautiful empty state when no content is available\n * - Clean visual hierarchy and elegant animations\n */\nexport const WorkspaceContent: React.FC = () => {\n  const { activeSessionId, setActivePanelContent } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n\n  // Animation variants\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6, ease: [0.19, 1, 0.22, 1] },\n    },\n  };\n\n  // Plan view button for Pro users\n  const renderPlanButton = () => {\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.div variants={itemVariants} className=\"mb-6\">\n        <motion.div\n          whileHover={{\n            y: -4,\n            boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02)',\n          }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() =>\n            setActivePanelContent({\n              type: 'plan',\n              source: null,\n              title: 'Task Plan',\n              timestamp: Date.now(),\n            })\n          }\n          className=\"bg-white dark:bg-gray-800/90 rounded-2xl border border-[#E5E6EC]/70 dark:border-gray-700/40 overflow-hidden cursor-pointer transition-all duration-300 shadow-sm hover:shadow-md\"\n        >\n          <div className=\"p-5\">\n            <div className=\"flex items-start\">\n              <div\n                className={`w-14 h-14 rounded-2xl flex items-center justify-center mr-4 flex-shrink-0 ${\n                  isComplete\n                    ? 'bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 text-green-600 dark:text-green-400 border border-green-100/80 dark:border-green-800/40'\n                    : 'bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30'\n                }`}\n              >\n                {isComplete ? (\n                  <FiCpu size={24} />\n                ) : (\n                  <motion.div\n                    animate={{ scale: [1, 1.08, 1] }}\n                    transition={{ duration: 2.5, repeat: Infinity, ease: 'easeInOut' }}\n                  >\n                    <FiCpu size={24} />\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between\">\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg mb-1 truncate pr-2\">\n                    Task Plan\n                  </h4>\n                  <div className=\"flex items-center text-xs\">\n                    <span\n                      className={`w-2 h-2 rounded-full mr-1.5 ${\n                        isComplete\n                          ? 'bg-green-500 dark:bg-green-400'\n                          : 'bg-accent-500 dark:bg-accent-400'\n                      }`}\n                    />\n                    <span className=\"text-gray-500 dark:text-gray-400\">\n                      {isComplete ? 'Completed' : 'In progress'}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  {isComplete\n                    ? 'All planned steps have been completed successfully.'\n                    : 'The agent is executing a plan to accomplish your task.'}\n                </div>\n\n                {/* Progress bar */}\n                <div className=\"mt-1 mb-2\">\n                  <div className=\"flex justify-between items-center mb-1.5 text-xs\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Progress</span>\n                    <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                      {completedSteps}/{totalSteps}\n                    </span>\n                  </div>\n                  <div className=\"h-2 bg-gray-100 dark:bg-gray-700/70 rounded-full overflow-hidden\">\n                    <div\n                      className={`h-full ${\n                        isComplete\n                          ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                          : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n                      }`}\n                      style={{ width: `${totalSteps ? (completedSteps / totalSteps) * 100 : 0}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-b from-gray-50/70 to-gray-50 dark:from-gray-800/50 dark:to-gray-800/80 px-5 py-3 border-t border-[#E5E6EC]/50 dark:border-gray-700/30 flex justify-between items-center\">\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              View plan details\n            </div>\n            <div className=\"flex items-center text-sm\">\n              <FiArrowRight className=\"text-accent-500 dark:text-accent-400\" size={16} />\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  };\n\n  // Enhanced empty state when no session\n  if (!activeSessionId) {\n    return (\n      <motion.div\n        variants={containerVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        className=\"flex items-center justify-center h-full text-center py-12\"\n      >\n        <div className=\"max-w-md mx-auto px-6\">\n          <motion.div variants={itemVariants} className=\"relative mx-auto mb-8\">\n            {/* Gradient background glow effect */}\n            <div className=\"absolute inset-0 w-24 h-24 mx-auto rounded-full bg-gradient-to-br from-gray-200/50 to-gray-100/30 dark:from-gray-700/30 dark:to-gray-800/20 blur-xl\"></div>\n\n            {/* Main icon */}\n            <div className=\"relative w-24 h-24 mx-auto rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n              <FiLayout size={40} className=\"text-gray-500 dark:text-gray-400\" />\n            </div>\n          </motion.div>\n\n          <motion.h3\n            variants={itemVariants}\n            className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n\n          <motion.p\n            variants={itemVariants}\n            className=\"text-gray-600 dark:text-gray-400 leading-relaxed\"\n          >\n            Create or select a session to start working. Tool results and detailed information will\n            be displayed here automatically.\n          </motion.p>\n        </div>\n      </motion.div>\n    );\n  }\n\n  // Enhanced empty state when session exists but no content\n  const hasContent = currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header with refined styling */}\n      <div className=\"flex items-center px-6 py-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-700 dark:to-gray-800 flex items-center justify-center text-gray-600 dark:text-gray-400 border border-gray-200/60 dark:border-gray-700/40 shadow-sm\">\n          <FiLayers size={18} />\n        </div>\n        <div>\n          <h2 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg\">Workspace</h2>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            View tool outputs and plan details\n          </div>\n        </div>\n      </div>\n\n      {/* Content area with elegant empty state */}\n      <div className=\"flex-1 overflow-y-auto p-6\">\n        {hasContent ? (\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"space-y-8\"\n          >\n            {/* Plan view for Pro users */}\n            {renderPlanButton()}\n          </motion.div>\n        ) : (\n          /* Beautiful empty state for active session with no content */\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"flex items-center justify-center h-full text-center\"\n          >\n            <div className=\"max-w-lg mx-auto px-6\">\n              <motion.div variants={itemVariants} className=\"relative mb-10\">\n                {/* Animated background circles */}\n                <motion.div\n                  animate={{\n                    scale: [1, 1.1, 1],\n                    opacity: [0.3, 0.5, 0.3],\n                    rotate: [0, 5, 0, -5, 0],\n                  }}\n                  transition={{ duration: 6, repeat: Infinity, ease: 'easeInOut' }}\n                  className=\"absolute inset-0 w-28 h-28 rounded-full bg-gradient-to-br from-accent-200/30 to-accent-300/20 dark:from-accent-800/20 dark:to-accent-700/10 mx-auto blur-xl\"\n                />\n                <motion.div\n                  animate={{\n                    scale: [1.1, 1, 1.1],\n                    opacity: [0.2, 0.4, 0.2],\n                    rotate: [0, -5, 0, 5, 0],\n                  }}\n                  transition={{ duration: 5, repeat: Infinity, ease: 'easeInOut', delay: 1 }}\n                  className=\"absolute inset-0 w-32 h-32 rounded-full bg-gradient-to-br from-purple-200/20 to-purple-300/10 dark:from-purple-800/10 dark:to-purple-700/5 mx-auto mt-2 ml-2 blur-xl\"\n                />\n\n                {/* Main icon with glowing effect */}\n                <div className=\"relative mx-auto w-28 h-28 rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n                  <motion.div\n                    animate={{\n                      scale: [1, 1.05, 1],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: 'easeInOut' }}\n                  >\n                    <FiActivity size={44} className=\"text-accent-500 dark:text-accent-400\" />\n                  </motion.div>\n\n                  {/* Subtle pulsing ring */}\n                  <motion.div\n                    animate={{\n                      scale: [0.8, 1.2, 0.8],\n                      opacity: [0.3, 0.1, 0.3],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: 'easeInOut' }}\n                    className=\"absolute inset-0 rounded-3xl border-2 border-accent-400/20 dark:border-accent-400/10\"\n                  />\n                </div>\n              </motion.div>\n\n              <motion.h3\n                variants={itemVariants}\n                className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200 bg-gradient-to-r from-gray-800 to-gray-600 dark:from-gray-200 dark:to-gray-300 bg-clip-text text-transparent\"\n              >\n                Ready for Action\n              </motion.h3>\n\n              <motion.p\n                variants={itemVariants}\n                className=\"text-gray-600 dark:text-gray-400 leading-relaxed mb-8 max-w-md mx-auto\"\n              >\n                Your workspace is active. Start a conversation with Agent TARS and watch as tool\n                results, plans, and detailed information appear here in real-time.\n              </motion.p>\n\n              <motion.div\n                variants={containerVariants}\n                className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 max-w-2xl mx-auto\"\n              >\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-blue-50 dark:bg-blue-900/20 flex items-center justify-center mb-3 text-blue-500 dark:text-blue-400 border border-blue-100/80 dark:border-blue-800/30\">\n                    <FiLayout size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Tool Results\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Comprehensive outputs\n                    </div>\n                  </div>\n                </motion.div>\n\n                {isProMode && (\n                  <motion.div\n                    variants={itemVariants}\n                    whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                    className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                  >\n                    <div className=\"w-12 h-12 rounded-xl bg-purple-50 dark:bg-purple-900/20 flex items-center justify-center mb-3 text-purple-500 dark:text-purple-400 border border-purple-100/80 dark:border-purple-800/30\">\n                      <FiCpu size={22} />\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                        Task Plans\n                      </div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Execution progress\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-green-50 dark:bg-green-900/20 flex items-center justify-center mb-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n                    <FiZap size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Live Updates\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Real-time results\n                    </div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-amber-50 dark:bg-amber-900/20 flex items-center justify-center mb-3 text-amber-500 dark:text-amber-400 border border-amber-100/80 dark:border-amber-800/30\">\n                    <FiFileText size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Deliverables\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Reports & Code</div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiBookOpen, FiX, FiArrowLeft } from 'react-icons/fi';\nimport { useSession } from '@/main/hooks/useSession';\nimport { useTool } from '@/main/hooks/useTool';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { ToolResultRenderer } from './renderers/ToolResultRenderer';\nimport { ResearchReportRenderer } from './renderers/ResearchReportRenderer';\n\n/**\n * WorkspaceDetail Component - Displays details of a single tool result or report\n */\nexport const WorkspaceDetail: React.FC = () => {\n  const { activePanelContent, setActivePanelContent } = useSession();\n  const { getToolIcon } = useTool();\n  const [zoomedImage, setZoomedImage] = useState<{ src: string; alt?: string } | null>(null);\n\n  if (!activePanelContent) {\n    return null;\n  }\n\n  // 特殊处理 final_answer 类型、研究报告内容或可交付产物\n  if (\n    activePanelContent?.type === 'research_report' ||\n    activePanelContent?.type === 'deliverable' ||\n    (activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer'))\n  ) {\n    return (\n      <ResearchReportRenderer\n        content={\n          typeof activePanelContent.source === 'string'\n            ? activePanelContent.source\n            : JSON.stringify(activePanelContent.source, null, 2)\n        }\n        title={activePanelContent.title || 'Research Report'}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // 特殊处理研究报告内容\n  if (activePanelContent?.type === 'research_report') {\n    return (\n      <ResearchReportRenderer\n        content={activePanelContent.source}\n        title={activePanelContent.title}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // Convert legacy format content to standardized tool result parts\n  const getStandardizedContent = (): ToolResultContentPart[] => {\n    const { type, source, title, error, arguments: toolArguments } = activePanelContent;\n\n    // Show error if present\n    if (error) {\n      return [\n        {\n          type: 'text',\n          name: 'ERROR',\n          text: error,\n        },\n      ];\n    }\n\n    // Handle write_file tool specifically\n    if (type === 'file' && toolArguments && typeof toolArguments === 'object') {\n      if (toolArguments.path && (toolArguments.content || typeof source === 'string')) {\n        return [\n          {\n            type: 'file_result',\n            name: 'FILE_RESULT',\n            path: toolArguments.path,\n            content: toolArguments.content || source,\n          },\n        ];\n      }\n    }\n\n    // Handle browser_vision_control type specifically\n    if (type === 'browser_vision_control') {\n      // 如果这是环境增强，包含原始截图数据\n      const environmentImage = Array.isArray(activePanelContent.originalContent)\n        ? extractImageUrl(activePanelContent.originalContent)\n        : null;\n\n      // Create browser_control part for the specialized renderer\n      return [\n        {\n          type: 'browser_control',\n          name: 'BROWSER_CONTROL',\n          toolCallId: activePanelContent.toolCallId,\n          thought: toolArguments?.thought || '',\n          step: toolArguments?.step || '',\n          action: toolArguments?.action || '',\n          status: source?.status || 'unknown',\n          environmentImage: environmentImage, // 传递环境图像\n        },\n      ];\n    }\n\n    // Handle array of content parts from environment_input\n    if (Array.isArray(source) && source.some((part) => part.type === 'image_url')) {\n      const imagePart = source.find((part) => part.type === 'image_url');\n      if (imagePart && imagePart.image_url && imagePart.image_url.url) {\n        const imgSrc = imagePart.image_url.url;\n        if (imgSrc.startsWith('data:image/')) {\n          const [mimeTypePrefix, base64Data] = imgSrc.split(',');\n          const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];\n          return [\n            {\n              type: 'image',\n              imageData: base64Data,\n              mimeType,\n              name: activePanelContent.title,\n            },\n          ];\n        }\n      }\n    }\n\n    // Based on tool type, convert to standardized format\n    switch (type) {\n      case 'image':\n        // Image content\n        if (typeof source === 'string' && source.startsWith('data:image/')) {\n          const [mimeTypePrefix, base64Data] = source.split(',');\n          const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];\n\n          return [\n            {\n              type: 'image',\n              imageData: base64Data,\n              mimeType,\n              name: activePanelContent.title,\n            },\n          ];\n        }\n        return [\n          {\n            type: 'text',\n            text: 'Image could not be displayed',\n          },\n        ];\n\n      case 'search':\n        // Search results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // Handle new multimodal format\n          const resultsItem = source.find((item) => item.name === 'RESULTS');\n          const queryItem = source.find((item) => item.name === 'QUERY');\n\n          if (resultsItem && resultsItem.text) {\n            // Parse results text into separate result items\n            const resultBlocks = resultsItem.text.split('---').filter(Boolean);\n            const parsedResults = resultBlocks.map((block) => {\n              const lines = block.trim().split('\\n');\n              const titleLine = lines[0] || '';\n              const urlLine = lines[1] || '';\n              const snippet = lines.slice(2).join('\\n');\n\n              const title = titleLine.replace(/^\\[\\d+\\]\\s*/, '').trim();\n              const url = urlLine.replace(/^URL:\\s*/, '').trim();\n\n              return { title, url, snippet };\n            });\n\n            // Return only the search_result part, removing the redundant text query part\n            return [\n              {\n                type: 'search_result',\n                name: 'SEARCH_RESULTS',\n                results: parsedResults,\n                query: queryItem?.text,\n              },\n            ];\n          }\n        }\n\n        // Handle old format\n        if (source && typeof source === 'object' && source.results) {\n          return [\n            {\n              type: 'search_result',\n              name: 'SEARCH_RESULTS',\n              results: source.results,\n              query: source.query,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'command':\n        // Command results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // New multimodal format\n          const commandItem = source.find((item) => item.name === 'COMMAND');\n          const stdoutItem = source.find((item) => item.name === 'STDOUT');\n          const stderrItem = source.find((item) => item.name === 'STDERR');\n\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: commandItem?.text || toolArguments?.command,\n              stdout: stdoutItem?.text || '',\n              stderr: stderrItem?.text || '',\n              exitCode: source.find((item) => item.name === 'EXIT_CODE')?.value,\n            },\n          ];\n        }\n\n        // Old format\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: source.command || toolArguments?.command,\n              stdout: source.output || source.stdout || '',\n              stderr: source.stderr || '',\n              exitCode: source.exitCode,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'browser':\n        return [\n          {\n            type: 'json',\n            name: title || 'BROWSER_DATA',\n            data: source,\n          },\n        ];\n\n      case 'file':\n        // File results\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'text',\n              name: 'FILE_PATH',\n              text: `File: ${source.path || 'Unknown file'}`,\n            },\n            {\n              type: 'text',\n              name: 'FILE_CONTENT',\n              text: source.content || 'No content available',\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      default:\n        // Default handling for unknown types\n        if (typeof source === 'object') {\n          return [\n            {\n              type: 'json',\n              name: 'JSON_DATA',\n              data: source,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n    }\n  };\n\n  // 辅助函数：从文本内容中提取URL\n  const extractUrlFromContent = (content: string): string => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return '';\n  };\n\n  // 辅助函数：从环境内容中提取图片URL\n  const extractImageUrl = (content: any[]): string | null => {\n    const imgPart = content.find(\n      (part) => part && part.type === 'image_url' && part.image_url && part.image_url.url,\n    );\n    return imgPart ? imgPart.image_url.url : null;\n  };\n\n  // Handle tool result content action\n  const handleContentAction = (action: string, data: any) => {\n    if (action === 'zoom' && data.src) {\n      // Show zoomed image in modal\n      setZoomedImage({ src: data.src, alt: data.alt });\n    }\n  };\n\n  // Handle back navigation\n  const handleBack = () => {\n    setActivePanelContent(null);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\"\n    >\n      {/* Header with tool info */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleBack}\n            className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={18} />\n          </motion.button>\n\n          <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden relative\">\n            {/* 使用特殊图标替代 final_answer 工具图标 */}\n            {activePanelContent.toolCallId?.startsWith('final-answer') ? (\n              <>\n                <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20\"></div>\n                <div className=\"relative z-10\">\n                  <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={20} />\n                </div>\n              </>\n            ) : (\n              <>\n                <div\n                  className={`absolute inset-0 ${\n                    activePanelContent?.type === 'search'\n                      ? 'bg-gradient-to-br from-blue-400/20 to-indigo-500/10 dark:from-blue-600/30 dark:to-indigo-500/20'\n                      : activePanelContent?.type === 'browser'\n                        ? 'bg-gradient-to-br from-purple-400/20 to-pink-500/10 dark:from-purple-600/30 dark:to-pink-500/20'\n                        : activePanelContent?.type === 'command'\n                          ? 'bg-gradient-to-br from-green-400/20 to-emerald-500/10 dark:from-green-600/30 dark:to-emerald-500/20'\n                          : activePanelContent?.type === 'file'\n                            ? 'bg-gradient-to-br from-yellow-400/20 to-amber-500/10 dark:from-yellow-600/30 dark:to-amber-500/20'\n                            : activePanelContent?.type === 'image'\n                              ? 'bg-gradient-to-br from-red-400/20 to-rose-500/10 dark:from-red-600/30 dark:to-rose-500/20'\n                              : activePanelContent?.type === 'browser_vision_control'\n                                ? 'bg-gradient-to-br from-cyan-400/20 to-teal-500/10 dark:from-cyan-600/30 dark:to-teal-500/20'\n                                : 'bg-gradient-to-br from-gray-400/20 to-gray-500/10 dark:from-gray-500/30 dark:to-gray-600/20'\n                  }`}\n                ></div>\n                <div className=\"relative z-10\">\n                  {getToolIcon(activePanelContent?.type || 'other')}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {activePanelContent.title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {formatTimestamp(activePanelContent.timestamp)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"flex-1 overflow-auto p-6\">\n        <ToolResultRenderer content={getStandardizedContent()} onAction={handleContentAction} />\n      </div>\n\n      {/* Image Zoom Modal */}\n      <AnimatePresence>\n        {zoomedImage && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 p-4 backdrop-blur-sm\"\n            onClick={() => setZoomedImage(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n              className=\"relative max-w-[95vw] max-h-[95vh]\"\n            >\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setZoomedImage(null);\n                }}\n                className=\"absolute -top-2 -right-2 p-2 rounded-full bg-gray-900/90 text-white hover:bg-gray-800 shadow-lg\"\n                aria-label=\"Close\"\n              >\n                <FiX size={24} />\n              </button>\n              <img\n                src={zoomedImage.src}\n                alt={zoomedImage.alt || 'Zoomed image'}\n                className=\"max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl\"\n              />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { useSession } from '@/main/hooks/useSession';\nimport { WorkspaceContent } from './WorkspaceContent';\nimport { WorkspaceDetail } from './WorkspaceDetail';\nimport { PlanView } from './PlanView';\nimport { useReplay } from '@/main/hooks/useReplay';\nimport { TimelineSlider } from '@/standalone/replay/TimelineSlider';\nimport { ReplayControls } from '@/standalone/replay/ReplayControls';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport './Workspace.css';\n\n/**\n * WorkspacePanel Component - Container for workspace content\n */\nexport const WorkspacePanel: React.FC = () => {\n  const { activeSessionId, activePanelContent, setActivePanelContent } = useSession();\n  const { replayState } = useReplay();\n\n  // 检查是否在查看计划，同时确保只有在 Pro 模式下才允许查看计划\n  const isViewingPlan = activePanelContent?.type === 'plan';\n  const isReplayActive = replayState.isActive;\n\n  if (!activeSessionId) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center p-8 max-w-md\">\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-sm border border-gray-200/50 dark:border-gray-700/30\"\n          >\n            <svg\n              className=\"w-10 h-10 text-gray-400 dark:text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n          </motion.div>\n          <motion.h3\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n            className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n          <motion.p\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            className=\"text-gray-600 dark:text-gray-400\"\n          >\n            Create or select a session to view detailed information and tool results in this\n            workspace.\n          </motion.p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-gray-50/80 dark:bg-gray-900/30\">\n      {/* Main content area */}\n      <div className=\"flex-1 overflow-hidden\">\n        {isViewingPlan ? (\n          <PlanView onBack={() => setActivePanelContent(null)} />\n        ) : activePanelContent ? (\n          <WorkspaceDetail />\n        ) : (\n          <WorkspaceContent />\n        )}\n      </div>\n\n      {/* Refined replay controls with modern styling */}\n      <AnimatePresence>\n        {isReplayActive && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.4, ease: [0.19, 1, 0.22, 1] }}\n            className=\"p-5 border-t border-gray-100/40 dark:border-gray-700/20 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm\"\n          >\n            {/* Timeline slider */}\n            <TimelineSlider />\n\n            {/* Controls centered below the timeline */}\n            <div className=\"flex justify-center mt-4\">\n              <ReplayControls />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiEye, FiMousePointer, FiType, FiChevronsRight, FiImage } from 'react-icons/fi';\nimport { useSession } from '@/main/hooks/useSession';\nimport { BrowserShell } from './BrowserShell';\n\ninterface BrowserControlRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Specialized renderer for browser_vision_control tool results\n *\n * This renderer displays:\n * 1. The screenshot from the environment input\n * 2. A mouse cursor overlay showing the action point\n * 3. The thought process of the agent\n * 4. The step being performed\n * 5. The specific action taken\n *\n * Design improvements:\n * - Shows screenshot at the top for better visual context\n * - Displays enhanced mouse cursor with artistic animations\n * - Uses browser shell wrapper for consistent styling\n * - Applies smooth transitions for mouse movements\n * - Features visually engaging click animations\n */\nexport const BrowserControlRenderer: React.FC<BrowserControlRendererProps> = ({\n  part,\n  onAction,\n}) => {\n  const { activeSessionId, messages, toolResults, replayState } = useSession();\n  const [relatedImage, setRelatedImage] = useState<string | null>(null);\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\n  const [mousePosition, setMousePosition] = useState<{ x: number; y: number } | null>(null);\n  const [previousMousePosition, setPreviousMousePosition] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  // Extract the visual operation details from the part\n  const { thought, step, action, status, toolCallId, environmentImage } = part;\n\n  // Get coordinates directly from tool result instead of parsing action string\n  useEffect(() => {\n    if (!activeSessionId || !toolCallId) return;\n\n    // Find the matching tool result for this tool call\n    const sessionResults = toolResults[activeSessionId] || [];\n    const matchingResult = sessionResults.find((result) => result.toolCallId === toolCallId);\n\n    if (matchingResult && matchingResult.content && matchingResult.content.result) {\n      const { startX, startY } = matchingResult.content.result;\n\n      // Save previous position before updating\n      if (mousePosition) {\n        setPreviousMousePosition(mousePosition);\n      }\n\n      // Set new position if coordinates are valid\n      if (typeof startX === 'number' && typeof startY === 'number') {\n        setMousePosition({\n          x: startX,\n          y: startY,\n        });\n      }\n    }\n  }, [activeSessionId, toolCallId, toolResults]);\n\n  // 如果提供了环境图像，直接使用\n  useEffect(() => {\n    if (environmentImage) {\n      setRelatedImage(environmentImage);\n    }\n  }, [environmentImage]);\n\n  // Find the most recent environment input (screenshot) before this operation\n  useEffect(() => {\n    if (!activeSessionId) return;\n\n    const sessionMessages = messages[activeSessionId] || [];\n\n    if (!toolCallId) return;\n\n    // 获取当前工具调用在消息中的索引\n    const currentToolCallIndex = sessionMessages.findIndex((msg) =>\n      msg.toolCalls?.some((tc) => tc.id === toolCallId),\n    );\n\n    if (currentToolCallIndex === -1) return;\n\n    // 查找距离当前工具调用最近的环境输入\n    let foundImage = false;\n\n    // 向前搜索环境输入，找到最近的截图\n    for (let i = currentToolCallIndex; i >= 0; i--) {\n      const msg = sessionMessages[i];\n      if (msg.role === 'environment' && Array.isArray(msg.content)) {\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          foundImage = true;\n          break;\n        }\n      }\n    }\n\n    // 如果在当前工具调用之前没有找到图片，则搜索所有环境消息作为回退\n    if (!foundImage) {\n      console.warn(\n        `[BrowserControlRenderer] Could not find preceding screenshot for toolCallId: ${toolCallId}. Falling back to search all environment messages.`,\n      );\n      const envMessages = sessionMessages.filter(\n        (msg) => msg.role === 'environment' && Array.isArray(msg.content),\n      );\n\n      // 从后往前找，找到最新的截图\n      for (let i = envMessages.length - 1; i >= 0; i--) {\n        const msg = envMessages[i];\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          break; // 找到最新的就停止\n        }\n      }\n    }\n  }, [activeSessionId, messages, toolCallId]);\n\n  // Handler to get image dimensions when loaded\n  const handleImageLoad = () => {\n    if (imageRef.current) {\n      setImageSize({\n        width: imageRef.current.naturalWidth,\n        height: imageRef.current.naturalHeight,\n      });\n    }\n  };\n\n  // If no valid data, show a placeholder\n  if (!thought && !step && !action) {\n    return <div className=\"text-gray-500 italic\">Browser control details unavailable</div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Screenshot section - moved to the top */}\n      {relatedImage && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          {/* ... 保留其他代码 ... */}\n\n          <BrowserShell className=\"mb-4\">\n            <div className=\"relative\">\n              <img\n                ref={imageRef}\n                src={relatedImage}\n                alt=\"Browser Screenshot\"\n                className=\"w-full h-auto object-contain\"\n                onLoad={handleImageLoad}\n              />\n\n              {/* Enhanced mouse cursor overlay */}\n              {mousePosition && imageSize && (\n                <motion.div\n                  className=\"absolute pointer-events-none\"\n                  initial={\n                    previousMousePosition\n                      ? {\n                          left: `${(previousMousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(previousMousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                      : {\n                          left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                  }\n                  animate={{\n                    left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                    top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                  }}\n                  transition={{ duration: 0.5, ease: [0.16, 1, 0.3, 1] }}\n                  style={{\n                    zIndex: 10,\n                  }}\n                >\n                  <div className=\"relative\">\n                    {/* Enhanced cursor icon with shadow effect */}\n                    <svg\n                      width=\"36\"\n                      height=\"36\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      style={{\n                        filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))',\n\n                        transform: 'translate(0px, 2px)',\n                      }}\n                    >\n                      <defs>\n                        <linearGradient id=\"cursorGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                          <stop offset=\"0%\" stopColor=\"white\" />\n                          <stop offset=\"100%\" stopColor=\"#f5f5f5\" />\n                        </linearGradient>\n                      </defs>\n                      <path\n                        d=\"M5 3L19 12L12 13L9 20L5 3Z\"\n                        fill=\"url(#cursorGradient)\"\n                        stroke=\"#000000\"\n                        strokeWidth=\"1.5\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n\n                    {/* Artistic pulse effect for click actions */}\n                    {action && action.includes('click') && (\n                      <>\n                        {/* Multiple layered ripple effects */}\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.8, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2.5 }}\n                          transition={{\n                            duration: 1.5,\n                            ease: 'easeOut',\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-8px',\n                            left: '-8px',\n                            width: '24px',\n                            height: '24px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.6) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.3)',\n                          }}\n                        />\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.9, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2 }}\n                          transition={{\n                            duration: 1.2,\n                            ease: 'easeOut',\n                            delay: 0.2,\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-6px',\n                            left: '-6px',\n                            width: '20px',\n                            height: '20px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.8) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.5)',\n                          }}\n                        />\n                        {/* Central highlight dot */}\n                        <motion.div\n                          className=\"absolute rounded-full bg-white\"\n                          initial={{ opacity: 1, scale: 0.5 }}\n                          animate={{ opacity: 0.8, scale: 1 }}\n                          transition={{\n                            duration: 0.7,\n                            repeat: Infinity,\n                            repeatType: 'reverse',\n                          }}\n                          style={{\n                            top: '2px',\n                            left: '2px',\n                            width: '4px',\n                            height: '4px',\n                            boxShadow: '0 0 10px 2px rgba(255,255,255,0.7)',\n                          }}\n                        />\n                      </>\n                    )}\n                  </div>\n                </motion.div>\n              )}\n            </div>\n          </BrowserShell>\n        </motion.div>\n      )}\n\n      {/* Visual operation details card */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiMousePointer className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">GUI Agent Operation</div>\n          {status && (\n            <div\n              className={`ml-auto text-xs font-medium px-2 py-0.5 rounded-full ${\n                status === 'success'\n                  ? 'bg-green-100/80 dark:bg-green-900/20 text-green-700 dark:text-green-400'\n                  : 'bg-red-100/80 dark:bg-red-900/20 text-red-700 dark:text-red-400'\n              }`}\n            >\n              {status === 'success' ? 'Success' : 'Failed'}\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-4 space-y-3\">\n          {/* Thought process */}\n          {thought && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiEye className=\"mr-2 text-accent-500/70 dark:text-accent-400/70\" size={14} />\n                Thought\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-accent-100 dark:border-accent-900/30\">\n                {thought}\n              </div>\n            </div>\n          )}\n\n          {/* Step */}\n          {step && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiChevronsRight\n                  className=\"mr-2 text-primary-500/70 dark:text-primary-400/70\"\n                  size={14}\n                />\n                Action\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-primary-100 dark:border-primary-900/30\">\n                {step}\n              </div>\n            </div>\n          )}\n\n          {/* Action command */}\n          {action && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiType className=\"mr-2 text-gray-500/70 dark:text-gray-400/70\" size={14} />\n                Action Command\n              </div>\n              <div className=\"bg-gray-50 dark:bg-gray-800/90 font-mono text-xs p-2 rounded-md border border-gray-100/50 dark:border-gray-700/30 overflow-x-auto\">\n                {action}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { FiMonitor, FiExternalLink, FiGlobe, FiBookmark, FiCopy, FiCheck } from 'react-icons/fi';\nimport { BrowserShell } from './BrowserShell';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\n\ninterface BrowserResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders browser navigation and page content results with improved UI\n *\n * Design improvements:\n * - Enhanced browser shell with realistic browser chrome\n * - Better visual hierarchy and content spacing\n * - Quick action buttons for URL interaction\n * - Proper content formatting with support for different content types\n * - Smooth animations for state changes\n */\nexport const BrowserResultRenderer: React.FC<BrowserResultRendererProps> = ({ part }) => {\n  const { url, content, title, contentType } = part;\n  const [copied, setCopied] = useState(false);\n\n  const displayTitle = title || url?.split('/').pop() || 'Browser Result';\n\n  if (!url && !content) {\n    return <div className=\"text-gray-500 italic\">Browser result is empty</div>;\n  }\n\n  const copyUrl = () => {\n    if (url) {\n      navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Extract URL from text content if it's in the format \"Navigated to URL\"\n  const extractUrlFromContent = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return url || '';\n  };\n\n  // Extract content from text after URL line\n  const extractContentFromText = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      return lines.slice(1).join('\\n');\n    }\n    return content;\n  };\n\n  const extractedUrl = extractUrlFromContent();\n  const extractedContent = extractContentFromText();\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"mb-4\">\n        {/* URL actions bar */}\n        {extractedUrl && (\n          <div className=\"mb-4 flex items-center\">\n            <div className=\"flex-1 p-3 bg-gray-50 dark:bg-gray-800/80 rounded-lg text-sm border border-gray-100/30 dark:border-gray-700/20 flex items-center overflow-hidden\">\n              <FiGlobe className=\"flex-shrink-0 text-gray-400 dark:text-gray-500 mr-2\" size={16} />\n              <span className=\"truncate text-gray-700 dark:text-gray-300 mr-2\">{extractedUrl}</span>\n            </div>\n            <div className=\"flex ml-2 gap-2\">\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={copyUrl}\n                className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n                title=\"Copy URL\"\n              >\n                {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n              </motion.button>\n              <motion.a\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                href={extractedUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-lg bg-purple-50 dark:bg-purple-900/20 text-purple-600 dark:text-purple-400 hover:bg-purple-100 dark:hover:bg-purple-800/30 transition-colors border border-purple-200/50 dark:border-purple-800/30\"\n                title=\"Open in new tab\"\n              >\n                <FiExternalLink size={18} />\n              </motion.a>\n            </div>\n          </div>\n        )}\n\n        {/* Content with enhanced browser shell */}\n        <BrowserShell title={displayTitle} url={extractedUrl}>\n          <div className=\"bg-white dark:bg-gray-800 px-5 min-h-[200px] max-h-[70vh] overflow-auto border-t border-gray-100/30 dark:border-gray-700/20\">\n            {contentType === 'text' || typeof extractedContent === 'string' ? (\n              <div className=\"prose dark:prose-invert prose-sm max-w-none py-4\">\n                <MarkdownRenderer content={typeof extractedContent === 'string' ? extractedContent : ''} />\n              </div>\n            ) : (\n              <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n                {JSON.stringify(extractedContent, null, 2)}\n              </pre>\n            )}\n          </div>\n        </BrowserShell>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  FiRefreshCw,\n  FiArrowLeft,\n  FiArrowRight,\n  FiHome,\n  FiLock,\n  FiX,\n  FiPlus,\n  FiGlobe,\n} from 'react-icons/fi';\n\ninterface BrowserShellProps {\n  children: React.ReactNode;\n  title?: string;\n  url?: string;\n  className?: string;\n}\n\n/**\n * BrowserShell - A component that mimics a browser window with improved visuals\n *\n * Design improvements:\n * - Modern browser chrome styling with authentic address bar\n * - Refined control buttons with hover effects\n * - Subtle shadows and borders for enhanced depth perception\n * - Realistic URL formatting with https indicator\n * - Tab-like interface for better visual fidelity\n */\nexport const BrowserShell: React.FC<BrowserShellProps> = ({\n  children,\n  title = 'Browser',\n  url = '',\n  className = '',\n}) => {\n  // Format URL for display\n  const displayUrl = url || '';\n  const isSecure = displayUrl.startsWith('https://');\n\n  // Extract domain for tab display\n  const getDomain = (url: string) => {\n    try {\n      if (url.startsWith('http')) {\n        const domain = new URL(url).hostname;\n        return domain || title;\n      }\n    } catch (e) {}\n    return title;\n  };\n\n  const domain = getDomain(displayUrl);\n\n  return (\n    <motion.div\n      className={`bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${className}`}\n      initial={{ opacity: 0.9, y: 5 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n    >\n      {/* Browser toolbar with improved design */}\n      <div className=\"bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-800/90 dark:to-gray-800 border-b border-gray-200/80 dark:border-gray-700/40 shadow-sm\">\n        {/* Address bar with controls */}\n        <div className=\"flex items-center p-3\">\n          {/* Control buttons with enhanced styling */}\n          <div className=\"flex space-x-1.5 mr-3\">\n            <div className=\"w-3 h-3 rounded-full bg-red-400 dark:bg-red-500 border border-red-500/20 dark:border-red-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-yellow-400 dark:bg-yellow-500 border border-yellow-500/20 dark:border-yellow-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-green-400 dark:bg-green-500 border border-green-500/20 dark:border-green-400/20 shadow-sm\" />\n          </div>\n\n          {/* URL bar with secure indicator */}\n          <div className=\"flex-1 bg-white dark:bg-gray-700 rounded-md flex items-center px-3 py-1.5 text-xs text-gray-700 dark:text-gray-200 border border-gray-300/30 dark:border-gray-600/40 group hover:border-gray-400/30 dark:hover:border-gray-500/30 transition-colors shadow-inner\">\n            <div className=\"flex items-center w-full\">\n              <div className=\"flex items-center mr-2\">\n                {isSecure ? (\n                  <FiLock className=\"mr-1.5 text-green-500 dark:text-green-400\" size={12} />\n                ) : (\n                  <FiGlobe className=\"mr-1.5 text-gray-400 dark:text-gray-500\" size={12} />\n                )}\n              </div>\n              <span className=\"truncate font-mono flex-1\">{displayUrl}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"overflow-auto max-h-[70vh]\">{children}</div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { FiTerminal, FiFile } from 'react-icons/fi';\n\ninterface CommandResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders command execution results with command, stdout, and stderr\n */\nexport const CommandResultRenderer: React.FC<CommandResultRendererProps> = ({ part }) => {\n  const { command, stdout, stderr, exitCode } = part;\n\n  if (!command && !stdout && !stderr) {\n    return <div className=\"text-gray-500 italic\">Command result is empty</div>;\n  }\n\n  // Style the code blocks based on success/failure\n  const isError = exitCode !== 0 && exitCode !== undefined;\n\n  return (\n    <div className=\"space-y-4\">\n      {command && (\n        <div className=\"mb-4\">\n          <div className=\"flex items-center mb-3\">\n            <FiTerminal className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n            <h3 className=\"text-base font-medium text-gray-800 dark:text-gray-200\">Command</h3>\n          </div>\n\n          <div className=\"p-3 bg-gray-800 text-gray-100 rounded-xl font-mono text-sm mb-6 overflow-x-auto border border-gray-700/50\">\n            {command}\n          </div>\n        </div>\n      )}\n\n      {(stdout || stderr) && (\n        <div>\n          <div className=\"flex items-center mb-3\">\n            <FiFile className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n            <h3 className=\"text-base font-medium text-gray-800 dark:text-gray-200\">\n              Output\n              {exitCode !== undefined && (\n                <span className={`ml-2 text-xs ${isError ? 'text-red-500' : 'text-green-500'}`}>\n                  (exit code: {exitCode})\n                </span>\n              )}\n            </h3>\n          </div>\n\n          <div className=\"p-3 bg-gray-800 text-gray-100 rounded-xl font-mono text-sm overflow-auto max-h-[50vh] border border-gray-700/50\">\n            {stdout && <pre className=\"whitespace-pre-wrap\">{stdout}</pre>}\n\n            {stderr && (\n              <>\n                {stdout && <div className=\"border-t border-gray-700/50 my-2 pt-2\"></div>}\n                <div className=\"text-xs text-red-500 mt-2 mb-1\">Error:</div>\n                <pre className=\"text-red-400 whitespace-pre-wrap\">{stderr}</pre>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiCode, FiDownload, FiExternalLink, FiCopy, FiCheck } from 'react-icons/fi';\nimport { ToolResultContentPart } from '..//types';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface DeliverableRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * DeliverableRenderer - Specialized component for rendering deliverable content\n * such as reports, code artifacts, and other final products\n *\n * Features:\n * - Categorizes deliverables by type (code, document, data)\n * - Provides download and copy functionality\n * - Offers appropriate preview for different content types\n * - Visual design consistent with other workspace renderers\n */\nexport const DeliverableRenderer: React.FC<DeliverableRendererProps> = ({ part, onAction }) => {\n  const { title, text, data, name } = part;\n  const [copied, setCopied] = React.useState(false);\n  \n  // Determine deliverable type based on available data\n  const getDeliverableType = () => {\n    if (!part) return 'unknown';\n    \n    // Check extensions if name exists\n    if (name) {\n      if (/\\.(js|ts|jsx|tsx|py|java|c|cpp|php|html|css|json)$/i.test(name)) return 'code';\n      if (/\\.(md|txt|docx|pdf|rtf)$/i.test(name)) return 'document';\n      if (/\\.(csv|xlsx|xls|xml)$/i.test(name)) return 'data';\n    }\n    \n    // Check title\n    if (title) {\n      if (title.toLowerCase().includes('report')) return 'document';\n      if (title.toLowerCase().includes('code')) return 'code';\n      if (title.toLowerCase().includes('data')) return 'data';\n    }\n    \n    // Default\n    return 'document';\n  };\n  \n  const deliverableType = getDeliverableType();\n  const content = text || (typeof data === 'string' ? data : JSON.stringify(data, null, 2));\n  \n  if (!content) {\n    return <div className=\"text-gray-500 italic\">No deliverable content available</div>;\n  }\n  \n  // Handle copy to clipboard\n  const handleCopy = () => {\n    navigator.clipboard.writeText(content);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  \n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name || title || 'deliverable';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      {/* Deliverable header with metadata */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/50 dark:border-gray-700/30\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 rounded-xl flex items-center justify-center mr-3 border border-gray-200/50 dark:border-gray-700/30 shadow-sm \n            bg-gradient-to-br \n            from-amber-50 to-amber-100 dark:from-amber-900/20 dark:to-amber-800/20 \n            text-amber-500 dark:text-amber-400\">\n            {deliverableType === 'code' ? (\n              <FiCode size={18} />\n            ) : (\n              <FiFileText size={18} />\n            )}\n          </div>\n          <div>\n            <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n              {title || name || 'Deliverable'}\n            </h3>\n            <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n              <span className=\"mr-2\">{deliverableType === 'code' ? 'Code artifact' : 'Document'}</span>\n              {name && <span className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full\">{name}</span>}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n          </motion.button>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Download file\"\n          >\n            <FiDownload size={18} />\n          </motion.button>\n        </div>\n      </div>\n      \n      {/* Content preview with appropriate rendering */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiFileText className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={16} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">Content Preview</div>\n        </div>\n        \n        <div className=\"p-4 max-h-[70vh] overflow-auto\">\n          {deliverableType === 'code' ? (\n            <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n              {content}\n            </pre>\n          ) : (\n            <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n              <MarkdownRenderer content={content} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { ToolResultContentPart } from '..//types';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiCode, FiEye, FiDownload } from 'react-icons/fi';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface FileResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders file operation results with preview capabilities\n * \n * Features:\n * - Content preview with syntax highlighting\n * - Special handling for HTML files with preview mode\n * - File download functionality\n * - Clean interface with visual file type indicators\n */\nexport const FileResultRenderer: React.FC<FileResultRendererProps> = ({ part, onAction }) => {\n  const { path, content } = part;\n  const [previewMode, setPreviewMode] = useState<'code' | 'preview'>('code');\n  \n  if (!path) {\n    return <div className=\"text-gray-500 italic\">File path missing</div>;\n  }\n\n  // Determine file extension\n  const extension = path.split('.').pop()?.toLowerCase() || '';\n  const isHtml = extension === 'html' || extension === 'htm';\n  const isImage = ['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp'].includes(extension);\n  const isText = ['txt', 'md', 'js', 'jsx', 'ts', 'tsx', 'css', 'json', 'yaml', 'yml', 'html', 'htm', 'xml'].includes(extension);\n  \n  // Determine icon and color based on file type\n  const getFileIcon = () => {\n    if (isHtml) return <FiCode size={18} className=\"text-orange-500 dark:text-orange-400\" />;\n    if (isImage) return <FiEye size={18} className=\"text-blue-500 dark:text-blue-400\" />;\n    return <FiFileText size={18} className=\"text-gray-600 dark:text-gray-400\" />;\n  };\n\n  // Create downloadable content\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: isHtml ? 'text/html' : 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = path.split('/').pop() || 'file';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Format file size\n  const formatBytes = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  \n  const approximateSize = content ? formatBytes(content.length) : 'Unknown size';\n\n  return (\n    <div className=\"space-y-4\">\n      {/* File info header */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/50 dark:border-gray-700/30\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 rounded-xl bg-gray-100/80 dark:bg-gray-700/80 flex items-center justify-center mr-3 border border-gray-200/50 dark:border-gray-700/30\">\n            {getFileIcon()}\n          </div>\n          <div>\n            <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n              {path.split('/').pop()}\n            </h3>\n            <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n              <span className=\"mr-3\">{path}</span>\n              <span className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full\">\n                {approximateSize}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleDownload}\n          className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n          title=\"Download file\"\n        >\n          <FiDownload size={18} />\n        </motion.button>\n      </div>\n\n      {/* Content preview section */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 overflow-hidden\">\n        {/* Toggle buttons for HTML files */}\n        {isHtml && (\n          <div className=\"flex border-b border-gray-100/60 dark:border-gray-700/30\">\n            <button\n              className={`flex-1 px-4 py-3 text-sm font-medium ${\n                previewMode === 'code'\n                  ? 'bg-gray-100/80 dark:bg-gray-700/80 text-gray-800 dark:text-gray-200'\n                  : 'text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n              }`}\n              onClick={() => setPreviewMode('code')}\n            >\n              <div className=\"flex items-center justify-center\">\n                <FiCode className=\"mr-2\" size={16} />\n                Source Code\n              </div>\n            </button>\n            <button\n              className={`flex-1 px-4 py-3 text-sm font-medium ${\n                previewMode === 'preview'\n                  ? 'bg-gray-100/80 dark:bg-gray-700/80 text-gray-800 dark:text-gray-200'\n                  : 'text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n              }`}\n              onClick={() => setPreviewMode('preview')}\n            >\n              <div className=\"flex items-center justify-center\">\n                <FiEye className=\"mr-2\" size={16} />\n                Preview\n              </div>\n            </button>\n          </div>\n        )}\n\n        {/* Content display */}\n        <div className=\"p-4\">\n          {isHtml && previewMode === 'preview' ? (\n            <div className=\"border border-gray-200/50 dark:border-gray-700/30 rounded-lg overflow-hidden bg-white dark:bg-gray-900/30\">\n              <div className=\"px-3 py-2 bg-gray-100/80 dark:bg-gray-700/80 border-b border-gray-200/50 dark:border-gray-700/30 text-xs font-medium text-gray-700 dark:text-gray-300\">\n                Preview\n              </div>\n              <div className=\"p-4 max-h-[70vh] overflow-auto\">\n                <iframe\n                  srcDoc={content}\n                  className=\"w-full border-0 min-h-[400px]\"\n                  title=\"HTML Preview\"\n                  sandbox=\"allow-scripts allow-same-origin\"\n                />\n              </div>\n            </div>\n          ) : isImage ? (\n            <div className=\"text-center\">\n              <img\n                src={`data:image/${extension};base64,${content}`}\n                alt={path}\n                className=\"max-h-[70vh] max-w-full mx-auto border border-gray-200/50 dark:border-gray-700/30 rounded-lg\"\n              />\n            </div>\n          ) : (\n            <div className=\"max-h-[70vh] overflow-auto\">\n              {isText ? (\n                <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n                  <MarkdownRenderer\n                    content={`\\`\\`\\`${extension === 'md' ? 'markdown' : extension}\\n${content}\\n\\`\\`\\``}\n                  />\n                </div>\n              ) : (\n                <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20\">\n                  {content}\n                </pre>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport {\n  FiCheck,\n  FiX,\n  FiAlertCircle,\n  FiInfo,\n  FiRefreshCw,\n  FiGlobe,\n  FiNavigation,\n  FiMousePointer,\n  FiLink,\n  FiArrowRight,\n  FiCornerUpRight,\n  FiLayers,\n} from 'react-icons/fi';\nimport { ToolResultContentPart } from '..//types';\n\ninterface GenericResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * GenericResultRenderer - 智能分析并渲染任意格式的工具结果\n *\n * 特点:\n * - 自动识别常见的状态模式（成功/失败/信息）\n * - 提取并突出显示关键信息\n * - 优雅处理各种数据结构\n * - 美观一致的卡片式布局\n * - 丝滑的动画过渡效果\n * - 针对不同操作类型的特殊可视化处理\n */\nexport const GenericResultRenderer: React.FC<GenericResultRendererProps> = ({ part }) => {\n  const content = part.text || part.data || {};\n  const [showDetails, setShowDetails] = useState(false);\n  const [animateSuccess, setAnimateSuccess] = useState(false);\n\n  // 尝试将字符串内容解析为JSON\n  let parsedContent = content;\n  if (typeof content === 'string') {\n    try {\n      parsedContent = JSON.parse(content);\n    } catch (e) {\n      // 不是有效的JSON，保持字符串格式\n      parsedContent = content;\n    }\n  }\n\n  // 智能检测结果类型\n  const resultInfo = analyzeResult(parsedContent, part.name);\n\n  console.log('resultInfo', resultInfo);\n\n  // 触发成功动画\n  useEffect(() => {\n    if (resultInfo.type === 'success') {\n      setAnimateSuccess(true);\n      const timer = setTimeout(() => setAnimateSuccess(false), 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [resultInfo.type]);\n\n  // 添加对导航类操作的特殊处理\n  const isNavigationOperation =\n    part.name?.includes('navigate') || (typeof parsedContent === 'object' && parsedContent?.url);\n\n  console.log('isNavigationOperation', isNavigationOperation);\n\n  // 检测内容是否为 Markdown\n  const isPossibleMarkdown = (text: string): boolean => {\n    // 检查常见的 Markdown 语法特征\n    const markdownPatterns = [\n      /^#+\\s+.+$/m, // 标题\n      /\\[.+\\]\\(.+\\)/, // 链接\n      /\\*\\*.+\\*\\*/, // 粗体\n      /\\*.+\\*/, // 斜体\n      /```[\\s\\S]*```/, // 代码块\n      /^\\s*-\\s+.+$/m, // 无序列表\n      /^\\s*\\d+\\.\\s+.+$/m, // 有序列表\n      />\\s+.+/, // 引用块\n      /!\\[.+\\]\\(.+\\)/, // 图片\n      /^---$/m, // 分隔线\n      /^\\|.+\\|$/m, // 表格\n    ];\n\n    // 如果满足至少两个 Markdown 特征，或者内容较长并包含一个特征，认为是 Markdown\n    const matchCount = markdownPatterns.filter((pattern) => pattern.test(text)).length;\n    return matchCount >= 2 || (text.length > 500 && matchCount >= 1);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3, ease: [0.16, 1, 0.3, 1] }}\n      className=\"w-full\"\n    >\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden w-full transform transition-all duration-300 hover:shadow-md\">\n        {/* 状态头部 */}\n        <div\n          className={`py-4 px-5 flex items-center justify-between border-b ${getHeaderClasses(resultInfo.type)}`}\n        >\n          <div className=\"flex items-center\">\n            <div className=\"mr-3 relative\">\n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={resultInfo.type}\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  exit={{ opacity: 0, scale: 0.8 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {getStatusIcon(resultInfo.type, resultInfo.operation)}\n                </motion.div>\n              </AnimatePresence>\n\n              {/* 成功动画效果 */}\n              {animateSuccess && resultInfo.type === 'success' && (\n                <motion.div\n                  initial={{ scale: 0.5, opacity: 0.8 }}\n                  animate={{ scale: 1.5, opacity: 0 }}\n                  transition={{ duration: 1.2, ease: 'easeOut' }}\n                  className=\"absolute inset-0 rounded-full bg-green-500 dark:bg-green-400 z-0\"\n                />\n              )}\n            </div>\n            <div>\n              <motion.span\n                className=\"font-medium\"\n                initial={{ opacity: 0.8 }}\n                animate={{ opacity: 1 }}\n              >\n                {part.name || resultInfo.title}\n              </motion.span>\n              {resultInfo.operation && (\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {getOperationDescription(resultInfo.operation, resultInfo)}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 添加URL显示（适用于浏览器工具） */}\n          {resultInfo.url && (\n            <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors group\">\n              <FiLink size={12} className=\"mr-1 group-hover:text-accent-500\" />\n              <a\n                href={resultInfo.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"max-w-[200px] truncate hover:underline transition-all\"\n              >\n                {resultInfo.url}\n              </a>\n            </div>\n          )}\n        </div>\n\n        {/* 内容区域 */}\n        <div className=\"p-5 relative\">\n          {/* 主要消息区 */}\n          <AnimatePresence mode=\"wait\">\n            {resultInfo.message ? (\n              <motion.div\n                key=\"message\"\n                initial={{ opacity: 0, y: 5 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: 0.1 }}\n                className=\"text-gray-700 dark:text-gray-300 mb-4\"\n              >\n                {typeof resultInfo.message === 'string' &&\n                isPossibleMarkdown(resultInfo.message) ? (\n                  <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n                    <MarkdownRenderer content={`\\`\\`\\`md\\n${resultInfo.message}\\n\\`\\`\\``} />\n                  </div>\n                ) : (\n                  resultInfo.message\n                )}\n              </motion.div>\n            ) : null}\n          </AnimatePresence>\n\n          {/* 针对导航类操作的特殊处理 */}\n          {isNavigationOperation && resultInfo.type === 'success' && (\n            <motion.div\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              className=\"mb-4\"\n            >\n              <div className=\"flex items-center mt-1\">\n                <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                  <FiCornerUpRight className=\"text-accent-500 dark:text-accent-400\" size={16} />\n                </div>\n                <div className=\"ml-3\">\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">导航至</div>\n                  <div className=\"font-medium text-accent-600 dark:text-accent-400 flex items-center\">\n                    {resultInfo.url}\n                  </div>\n                </div>\n              </div>\n\n              {/* 导航动画 */}\n              <div className=\"my-5 px-3\">\n                <div className=\"relative h-0.5 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden\">\n                  <motion.div\n                    initial={{ width: 0, x: 0 }}\n                    animate={{ width: '100%', x: ['0%', '100%'] }}\n                    transition={{\n                      duration: 1.5,\n                      width: { duration: 0 },\n                      x: { duration: 1.5, ease: 'easeInOut' },\n                    }}\n                    className=\"absolute top-0 left-0 h-full bg-accent-500 dark:bg-accent-400 rounded-full\"\n                    style={{ width: '30%' }}\n                  />\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* 详细信息切换按钮 - 只在有额外信息时显示 */}\n          {resultInfo.details && Object.keys(resultInfo.details).length > 0 && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.3, delay: 0.3 }}\n              className=\"mt-2 mb-3\"\n            >\n              <button\n                onClick={() => setShowDetails(!showDetails)}\n                className=\"text-xs flex items-center text-gray-500 dark:text-gray-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors\"\n              >\n                <motion.div\n                  animate={{ rotate: showDetails ? 90 : 0 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <FiArrowRight size={12} className=\"mr-1.5\" />\n                </motion.div>\n                {showDetails ? '隐藏详情' : '查看详情'}\n              </button>\n            </motion.div>\n          )}\n\n          {/* 详细信息区 - 只在有额外信息时显示 */}\n          <AnimatePresence>\n            {showDetails && resultInfo.details && Object.keys(resultInfo.details).length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"overflow-hidden\"\n              >\n                <div className=\"mt-3 pt-3 border-t border-gray-100 dark:border-gray-700/30\">\n                  <div className=\"grid gap-2\">\n                    {Object.entries(resultInfo.details).map(([key, value]) => (\n                      <motion.div\n                        key={key}\n                        initial={{ opacity: 0, y: 5 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"flex items-start\"\n                      >\n                        <div className=\"text-xs font-medium text-gray-500 dark:text-gray-400 w-24 flex-shrink-0\">\n                          {formatKey(key)}:\n                        </div>\n                        <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                          {formatValue(value)}\n                        </div>\n                      </motion.div>\n                    ))}\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* 空状态处理 - 美化版 */}\n          {!resultInfo.message &&\n            !resultInfo.url &&\n            (!resultInfo.details || Object.keys(resultInfo.details).length === 0) && (\n              <div className=\"flex flex-col items-center justify-center py-4\">\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{\n                    duration: 0.5,\n                    delay: 0.2,\n                    type: 'spring',\n                    stiffness: 100,\n                  }}\n                  className=\"flex flex-col items-center\"\n                >\n                  {resultInfo.type === 'success' ? (\n                    <>\n                      <div className=\"w-12 h-12 mb-3 rounded-full bg-green-50 dark:bg-green-900/20 flex items-center justify-center text-green-500 dark:text-green-400\">\n                        <motion.div\n                          animate={{\n                            scale: [1, 1.15, 1],\n                          }}\n                          transition={{\n                            duration: 1,\n                            repeat: Infinity,\n                            repeatType: 'reverse',\n                            repeatDelay: 1,\n                          }}\n                        >\n                          <FiCheck size={24} />\n                        </motion.div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                          The operation completed successfully\n                        </div>\n                        {resultInfo.operation && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {getOperationDescription(resultInfo.operation, resultInfo)}\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div className=\"w-12 h-12 mb-3 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center text-gray-400 dark:text-gray-500\">\n                        <FiInfo size={24} />\n                      </div>\n                      <div className=\"text-center text-gray-500 dark:text-gray-400\">\n                        {resultInfo.type === 'empty' ? '无可用内容' : '操作已完成'}\n                      </div>\n                    </>\n                  )}\n                </motion.div>\n              </div>\n            )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\n/**\n * 分析工具结果并提取关键信息\n */\nfunction analyzeResult(\n  content: any,\n  toolName?: string,\n): {\n  type: 'success' | 'error' | 'info' | 'empty';\n  title: string;\n  message: string | null;\n  details: Record<string, any>;\n  url?: string;\n  operation?: string; // 添加操作类型\n} {\n  // 默认值\n  const result = {\n    type: 'info' as const,\n    title: 'Operation Result',\n    message: null,\n    details: {} as Record<string, any>,\n  };\n\n  // 尝试从工具名称中推断操作类型\n  let operation = '';\n  if (toolName) {\n    if (toolName.includes('navigate')) operation = 'navigate';\n    else if (toolName.includes('click')) operation = 'click';\n    else if (toolName.includes('type')) operation = 'type';\n    else if (toolName.includes('scroll')) operation = 'scroll';\n    else if (toolName.includes('browser')) operation = 'browser';\n  }\n\n  // 处理空内容\n  if (!content || (typeof content === 'object' && Object.keys(content).length === 0)) {\n    return { ...result, type: 'empty', title: 'Empty Result', operation };\n  }\n\n  // 处理字符串内容\n  if (typeof content === 'string') {\n    // 检测是否是导航成功消息\n    if (content.includes('Navigated to ')) {\n      const url = content.replace('Navigated to ', '').trim();\n      return {\n        ...result,\n        type: 'success',\n        title: 'Navigation Successful',\n        message: null,\n        details: { url },\n        url,\n        operation: 'navigate',\n      };\n    }\n    return { ...result, message: content, operation };\n  }\n\n  // 处理对象内容\n  if (typeof content === 'object') {\n    // 特别处理导航相关\n    if (content.url) {\n      operation = operation || 'navigate';\n      result.url = content.url;\n    }\n\n    // 检测状态字段\n    if ('status' in content) {\n      const status = String(content.status).toLowerCase();\n      if (status === 'success' || status === 'ok' || status === 'completed') {\n        result.type = 'success';\n        result.title = 'Success';\n      } else if (status === 'error' || status === 'fail' || status === 'failed') {\n        result.type = 'error';\n        result.title = 'Error';\n      }\n    }\n\n    // 检测消息字段\n    if ('message' in content) {\n      result.message = String(content.message);\n    } else if ('error' in content) {\n      result.message = String(content.error);\n      result.type = 'error';\n      result.title = 'Error';\n    } else if ('msg' in content) {\n      result.message = String(content.msg);\n    } else if ('content' in content && typeof content.content === 'string') {\n      result.message = content.content;\n    }\n\n    // 提取标题\n    if ('title' in content && typeof content.title === 'string' && content.title.trim()) {\n      result.title = content.title;\n    } else if (result.message && result.message.length < 50) {\n      // 如果消息很短，可以用作标题\n      result.title = result.message;\n      result.message = null;\n    }\n\n    // 特别处理URL (用于浏览器工具结果)\n    let url: string | undefined = undefined;\n    if ('url' in content && typeof content.url === 'string') {\n      url = content.url;\n    }\n\n    // 收集其他重要字段作为详情\n    for (const [key, value] of Object.entries(content)) {\n      // 跳过已处理的字段\n      if (['status', 'message', 'error', 'msg', 'title', 'url'].includes(key)) continue;\n\n      // 特殊处理分页信息\n      if (key === 'pagination' && typeof value === 'object') {\n        for (const [pKey, pValue] of Object.entries(value)) {\n          result.details[`pagination.${pKey}`] = pValue;\n        }\n        continue;\n      }\n\n      // 优先展示这些重要字段\n      const importantFields = ['name', 'description', 'type', 'value', 'data'];\n      if (importantFields.includes(key)) {\n        result.details = { [key]: value, ...result.details };\n      } else {\n        // 添加到详情中\n        result.details[key] = value;\n      }\n    }\n\n    return { ...result, url, operation };\n  }\n\n  return { ...result, operation };\n}\n\n/**\n * 获取状态图标\n */\nfunction getStatusIcon(type: string, operation?: string) {\n  // 先根据操作类型选择图标\n  if (operation) {\n    switch (operation) {\n      case 'navigate':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-accent-50 dark:bg-accent-900/20 text-accent-500 dark:text-accent-400\">\n            <FiNavigation size={16} />\n          </div>\n        );\n      case 'click':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-purple-50 dark:bg-purple-900/20 text-purple-500 dark:text-purple-400\">\n            <FiMousePointer size={16} />\n          </div>\n        );\n      case 'browser':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n            <FiGlobe size={16} />\n          </div>\n        );\n    }\n  }\n\n  // 回退到基于状态类型的图标\n  switch (type) {\n    case 'success':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-green-50 dark:bg-green-900/20 text-green-500 dark:text-green-400\">\n          <FiCheck size={16} />\n        </div>\n      );\n    case 'error':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-red-50 dark:bg-red-900/20 text-red-500 dark:text-red-400\">\n          <FiX size={16} />\n        </div>\n      );\n    case 'empty':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gray-100 dark:bg-gray-700 text-gray-400 dark:text-gray-500\">\n          <FiLayers size={16} />\n        </div>\n      );\n    case 'info':\n    default:\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n          <FiInfo size={16} />\n        </div>\n      );\n  }\n}\n\n/**\n * 根据操作类型生成描述\n */\nfunction getOperationDescription(operation: string, resultInfo: any): string {\n  switch (operation) {\n    case 'navigate':\n      return resultInfo.url ? `导航至 ${resultInfo.url}` : '页面导航';\n    case 'click':\n      return '点击元素';\n    case 'type':\n      return '输入文本';\n    case 'scroll':\n      return '滚动页面';\n    case 'browser':\n      return '浏览器操作';\n    default:\n      return '操作已完成';\n  }\n}\n\n/**\n * 获取头部样式类\n */\nfunction getHeaderClasses(type: string): string {\n  switch (type) {\n    case 'success':\n      return 'border-green-100/50 dark:border-green-800/30 bg-green-50/50 dark:bg-green-900/20';\n    case 'error':\n      return 'border-red-100/50 dark:border-red-800/30 bg-red-50/50 dark:bg-red-900/20';\n    case 'empty':\n      return 'border-gray-100/50 dark:border-gray-700/30 bg-gray-50/50 dark:bg-gray-800/50';\n    case 'info':\n    default:\n      return 'border-blue-100/50 dark:border-blue-800/30 bg-blue-50/50 dark:bg-blue-900/20';\n  }\n}\n\n/**\n * 格式化键名\n */\nfunction formatKey(key: string): string {\n  return key\n    .replace(/([A-Z])/g, ' $1') // 在大写字母前插入空格\n    .replace(/^./, (str) => str.toUpperCase()) // 首字母大写\n    .replace(/[._]/g, ' '); // 将下划线和点替换为空格\n}\n\n/**\n * 格式化值显示\n */\nfunction formatValue(value: any): React.ReactNode {\n  if (value === null || value === undefined) {\n    return <span className=\"text-gray-400 dark:text-gray-500 italic\">None</span>;\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return <span className=\"text-gray-400 dark:text-gray-500 italic\">Empty array</span>;\n    }\n\n    if (\n      value.length <= 3 &&\n      value.every((item) => typeof item === 'string' || typeof item === 'number')\n    ) {\n      return value.join(', ');\n    }\n\n    return (\n      <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n        {JSON.stringify(value, null, 2)}\n      </pre>\n    );\n  }\n\n  if (typeof value === 'object') {\n    try {\n      return (\n        <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n          {JSON.stringify(value, null, 2)}\n        </pre>\n      );\n    } catch (e) {\n      return String(value);\n    }\n  }\n\n  // 检测URL并使其可点击\n  if (typeof value === 'string' && (value.startsWith('http://') || value.startsWith('https://'))) {\n    return (\n      <a\n        href={value}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-accent-600 dark:text-accent-400 hover:underline\"\n      >\n        {value}\n      </a>\n    );\n  }\n\n  return String(value);\n}\n","import React from 'react';\nimport { ToolResultContentPart } from '..//types';\nimport { motion } from 'framer-motion';\nimport { FiDownload, FiZoomIn } from 'react-icons/fi';\nimport { BrowserShell } from './BrowserShell';\n\ninterface ImageRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders image content with zoom and download actions\n */\nexport const ImageRenderer: React.FC<ImageRendererProps> = ({ part, onAction }) => {\n  const { imageData, mimeType = 'image/png', name } = part;\n\n  if (!imageData) {\n    return <div className=\"text-gray-500 italic\">Image data missing</div>;\n  }\n\n  const imgSrc = `data:${mimeType};base64,${imageData}`;\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = imgSrc;\n    link.download = name || 'image';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleZoom = () => {\n    if (onAction) {\n      onAction('zoom', { src: imgSrc, alt: name });\n    }\n  };\n\n  const isScreenshot =\n    name?.toLowerCase().includes('screenshot') || name?.toLowerCase().includes('browser');\n\n  const actionButtons = (\n    <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-2\">\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleZoom}\n        className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n        title=\"Zoom\"\n      >\n        <FiZoomIn size={16} />\n      </motion.button>\n\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleDownload}\n        className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n        title=\"Download\"\n      >\n        <FiDownload size={16} />\n      </motion.button>\n    </div>\n  );\n\n  if (isScreenshot) {\n    return (\n      <div className=\"relative group\">\n        <BrowserShell title={name || 'Browser Screenshot'}>\n          <img src={imgSrc} alt={name || 'Image'} className=\"w-full h-auto object-contain\" />\n        </BrowserShell>\n        {actionButtons}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative group\">\n      <motion.div\n        whileHover={{ scale: 1.01 }}\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-2 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n      >\n        <div className=\"relative\">\n          <img\n            src={imgSrc}\n            alt={name || 'Image'}\n            className=\"max-h-[70vh] object-contain rounded-lg mx-auto\"\n          />\n\n          {actionButtons}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '..//types';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink } from 'react-icons/fi';\n\ninterface LinkRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders link content with external icon\n */\nexport const LinkRenderer: React.FC<LinkRendererProps> = ({ part }) => {\n  const { url, title } = part;\n\n  if (!url) {\n    return <div className=\"text-gray-500 italic\">Link URL missing</div>;\n  }\n\n  return (\n    <motion.a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      whileHover={{ scale: 1.01, x: 2 }}\n      className=\"flex items-center gap-2 p-3 bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 text-accent-600 dark:text-accent-400 hover:text-accent-700 dark:hover:text-accent-300 shadow-sm group\"\n    >\n      <FiExternalLink\n        className=\"flex-shrink-0 text-gray-400 group-hover:text-accent-500 transition-colors\"\n        size={18}\n      />\n\n      <div className=\"flex-1 truncate\">\n        <div className=\"font-medium\">{title || url}</div>\n        {title && <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{url}</div>}\n      </div>\n\n      <div className=\"flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity\">\n        <FiExternalLink size={14} className=\"text-gray-400\" />\n      </div>\n    </motion.a>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCheck, FiClock, FiLoader, FiTarget, FiCheckCircle, FiArrowRight } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { AgentEventStream } from '@/common/types';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: AgentEventStream.PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator\n * - Supports keyframe navigation for plan history\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // 计算进度百分比\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n\n  // 如果没有计划，显示空状态\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-24 h-24 rounded-3xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center mb-6 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n        >\n          <FiTarget size={40} className=\"text-gray-400 dark:text-gray-500\" />\n        </motion.div>\n        <motion.h3\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n        >\n          No Plan Generated\n        </motion.h3>\n        <motion.p\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"text-gray-600 dark:text-gray-400 max-w-md\"\n        >\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </motion.p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-8 h-full flex flex-col\">\n      {/* 标题和计划摘要 */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4 }}\n        className=\"mb-8\"\n      >\n        <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n          {isComplete ? (\n            <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-4 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheckCircle size={20} />\n            </div>\n          ) : (\n            <motion.div\n              animate={{ scale: [1, 1.05, 1] }}\n              transition={{ duration: 2.5, repeat: Infinity }}\n              className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center mr-4 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30\"\n            >\n              <FiTarget size={20} />\n            </motion.div>\n          )}\n          Execution Plan\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 ml-14\">\n          {isComplete\n            ? 'All steps have been completed successfully.'\n            : 'The agent is executing this plan to complete your task.'}\n        </p>\n      </motion.div>\n\n      {/* 关键帧时间轴 (如果有关键帧) */}\n      {keyframes && keyframes.length > 1 && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.1 }}\n          className=\"mb-8\"\n        >\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Plan Timeline\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full border border-gray-200/50 dark:border-gray-700/30\">\n              {currentKeyframeIndex !== undefined &&\n                keyframes[currentKeyframeIndex] &&\n                formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n            </div>\n          </div>\n          <div className=\"relative h-12 bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            <div className=\"absolute inset-0 flex\">\n              {keyframes.map((keyframe, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\n                  className={`flex-1 cursor-pointer transition-all duration-200 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 ${\n                    index === currentKeyframeIndex\n                      ? 'bg-gradient-to-b from-gray-100/80 to-gray-50/80 dark:from-gray-700/50 dark:to-gray-800/50 border-b-2 border-accent-500 dark:border-accent-400'\n                      : ''\n                  }`}\n                  onClick={() => onKeyframeChange && onKeyframeChange(index)}\n                >\n                  <div className=\"h-full flex flex-col items-center justify-center\">\n                    <div\n                      className={`w-3 h-3 rounded-full mb-1 ${\n                        index === currentKeyframeIndex\n                          ? 'bg-accent-500 dark:bg-accent-400 ring-2 ring-accent-200 dark:ring-accent-700/30 ring-opacity-60'\n                          : 'bg-gray-300 dark:bg-gray-600'\n                      }`}\n                    />\n                    <div className=\"text-[0.65rem] text-gray-500 dark:text-gray-400\">\n                      {formatTimestamp(keyframe.timestamp, true)}\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* 进度指示器 */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4, delay: 0.2 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex justify-between items-center mb-3\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Progress</span>\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n            {steps.filter((step) => step.done).length}/{steps.length} steps\n          </span>\n        </div>\n        <div className=\"h-3 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden shadow-inner\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progressPercentage}%` }}\n            transition={{ duration: 0.7, ease: 'easeOut' }}\n            className={`h-full ${\n              isComplete\n                ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n            }`}\n          />\n        </div>\n      </motion.div>\n\n      {/* 步骤列表 */}\n      <div className=\"flex-1 overflow-auto pr-2 workspace-scrollbar\">\n        <motion.div\n          className=\"space-y-4\"\n          variants={{\n            visible: { transition: { staggerChildren: 0.07 } },\n          }}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {steps.map((step, index) => (\n            <motion.div\n              key={index}\n              variants={{\n                hidden: { opacity: 0, y: 20 },\n                visible: {\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.4, ease: [0.19, 1, 0.22, 1] },\n                },\n              }}\n              className=\"relative\"\n            >\n              {/* 连接线 */}\n              {index < steps.length - 1 && (\n                <div className=\"absolute left-6 w-0.5 top-12 bottom-0 bg-gradient-to-b from-gray-200 to-gray-100 dark:from-gray-700 dark:to-gray-600\" />\n              )}\n\n              <div className=\"flex items-start gap-4\">\n                <div\n                  className={`flex-shrink-0 w-12 h-12 rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm ${\n                    step.done\n                      ? 'bg-gradient-to-br from-green-400 to-green-500 dark:from-green-500 dark:to-green-400 text-white'\n                      : index === steps.filter((s) => s.done).length\n                        ? 'bg-gradient-to-br from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400 text-white'\n                        : 'bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-600 text-gray-500 dark:text-gray-400'\n                  }`}\n                >\n                  {step.done ? (\n                    <FiCheck size={22} />\n                  ) : index === steps.filter((s) => s.done).length ? (\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 2.5, repeat: Infinity, ease: 'linear' }}\n                    >\n                      <FiLoader size={22} />\n                    </motion.div>\n                  ) : (\n                    <FiClock size={20} />\n                  )}\n                </div>\n\n                <div className=\"flex-1\">\n                  <div\n                    className={`bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${\n                      step.done\n                        ? 'border-l-4 border-l-green-500 dark:border-l-green-400'\n                        : index === steps.filter((s) => s.done).length\n                          ? 'border-l-4 border-l-accent-500 dark:border-l-accent-400 animate-pulse'\n                          : ''\n                    }`}\n                  >\n                    <div\n                      className={`text-sm leading-relaxed ${\n                        step.done\n                          ? 'text-gray-800 dark:text-gray-200'\n                          : index === steps.filter((s) => s.done).length\n                            ? 'text-gray-800 dark:text-gray-200'\n                            : 'text-gray-500 dark:text-gray-400'\n                      }`}\n                    >\n                      {step.content}\n                    </div>\n\n                    {/* 步骤状态指示器 */}\n                    <div className=\"flex justify-between items-center mt-3 text-xs\">\n                      <div\n                        className={`flex items-center ${\n                          step.done\n                            ? 'text-green-600 dark:text-green-400'\n                            : index === steps.filter((s) => s.done).length\n                              ? 'text-accent-600 dark:text-accent-400'\n                              : 'text-gray-500 dark:text-gray-400'\n                        }`}\n                      >\n                        {step.done ? (\n                          <>\n                            <FiCheckCircle size={12} className=\"mr-1\" />\n                            <span>Completed</span>\n                          </>\n                        ) : index === steps.filter((s) => s.done).length ? (\n                          <>\n                            <FiLoader size={12} className=\"mr-1 animate-spin\" />\n                            <span>In progress</span>\n                          </>\n                        ) : (\n                          <>\n                            <FiClock size={12} className=\"mr-1\" />\n                            <span>Pending</span>\n                          </>\n                        )}\n                      </div>\n                      <div className=\"text-gray-400 dark:text-gray-500\">Step {index + 1}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n\n      {/* 计划总结 - 在底部显示 */}\n      {isComplete && summary && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.3 }}\n          className=\"mt-8 pt-6 border-t border-gray-200/70 dark:border-gray-700/40\"\n        >\n          <div className=\"flex items-center mb-3\">\n            <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheck size={16} />\n            </div>\n            <div className=\"font-medium text-gray-800 dark:text-gray-200\">Plan Summary</div>\n          </div>\n          <div className=\"text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 p-5 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            {summary}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nimport { FiDownload, FiBookOpen, FiLoader, FiShare2, FiCopy, FiCheck } from 'react-icons/fi';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface ResearchReportRendererProps {\n  content: string;\n  title?: string;\n  isStreaming?: boolean;\n}\n\n/**\n * Research Report Renderer - Displays a detailed research report with proper formatting\n *\n * Features:\n * - Elegant markdown rendering with document styling\n * - Download capability for saving reports\n * - Animated indicators for streaming content\n * - Smooth transitions for content updates\n * - Auto-scrolling during streaming updates\n */\nexport const ResearchReportRenderer: React.FC<ResearchReportRendererProps> = ({\n  content,\n  title = 'Research Report',\n  isStreaming = false,\n}) => {\n  const [scrollToBottom, setScrollToBottom] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  // 处理内容格式化，确保始终是字符串\n  const formattedContent = React.useMemo(() => {\n    if (typeof content === 'string') {\n      return content;\n    }\n\n    // 如果不是字符串，尝试转换为 JSON 字符串\n    try {\n      return JSON.stringify(content, null, 2);\n    } catch (e) {\n      return String(content);\n    }\n  }, [content]);\n\n  // Auto-scroll to bottom when streaming content\n  useEffect(() => {\n    if (isStreaming && scrollToBottom && contentRef.current) {\n      contentRef.current.scrollTop = contentRef.current.scrollHeight;\n    }\n  }, [content, isStreaming, scrollToBottom]);\n\n  // Handle content scroll\n  const handleScroll = () => {\n    if (!contentRef.current) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = contentRef.current;\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n\n    setScrollToBottom(isNearBottom);\n  };\n\n  // Handle report download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title.replace(/[^\\w\\s-]/g, '')}.md`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle copy content\n  const handleCopy = () => {\n    navigator.clipboard.writeText(formattedContent);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\">\n      {/* Report header */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center border border-accent-100/50 dark:border-accent-800/30 text-accent-600 dark:text-accent-400 shadow-sm\">\n            <FiBookOpen size={18} />\n          </div>\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center\">\n              {isStreaming ? (\n                <>\n                  <FiLoader className=\"mr-1.5 animate-spin\" size={10} />\n                  Generating report...\n                </>\n              ) : (\n                'Research Report'\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={20} className=\"text-green-500\" /> : <FiCopy size={20} />}\n          </motion.button>\n          \n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Download Report\"\n          >\n            <FiDownload size={20} />\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Report content */}\n      <div\n        ref={contentRef}\n        className=\"flex-1 overflow-auto p-8 workspace-scrollbar\"\n        onScroll={handleScroll}\n      >\n        <div className=\"max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm overflow-hidden\">\n          <div className=\"p-8\">\n            <div className=\"research-report prose prose-slate lg:prose-lg dark:prose-invert max-w-none\">\n              <MarkdownRenderer content={formattedContent} />\n            </div>\n\n            {/* Loading indicator for streaming content */}\n            {isStreaming && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.5 }}\n                className=\"flex items-center justify-center py-6 mt-4 text-accent-500 dark:text-accent-400\"\n              >\n                <div className=\"flex items-center gap-3 px-4 py-2 bg-accent-50/70 dark:bg-accent-900/20 rounded-full border border-accent-100/60 dark:border-accent-800/30\">\n                  <FiLoader className=\"animate-spin\" size={16} />\n                  <span className=\"text-sm font-medium\">Generating report...</span>\n                </div>\n              </motion.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink, FiSearch, FiInfo, FiGlobe } from 'react-icons/fi';\n\ninterface SearchResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders search results with refined visual design\n * \n * Design improvements:\n * - Clean, minimalist card layout with subtle animations\n * - Consistent typography with proper hierarchy\n * - Refined spacing and subtle borders\n * - Simplified URL display\n * - Elegant interaction feedback\n */\nexport const SearchResultRenderer: React.FC<SearchResultRendererProps> = ({ part }) => {\n  const { results, query } = part;\n\n  if (!results || !Array.isArray(results)) {\n    return <div className=\"text-gray-500 italic\">Search results missing</div>;\n  }\n\n  return (\n    <div className=\"space-y-5\">\n      {/* Search query section with minimal styling */}\n      {query && (\n        <div className=\"mb-5\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-10 h-10 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/50 flex items-center justify-center mr-4 text-gray-600 dark:text-gray-400\">\n              <FiSearch size={20} />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-medium text-gray-800 dark:text-gray-200\">Search Results</h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">{results.length} results found for your query</p>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl px-4 py-3 text-sm text-gray-800 dark:text-gray-200 border border-gray-200/70 dark:border-gray-700/50\">\n            <div className=\"flex items-center\">\n              <FiSearch className=\"text-gray-500 dark:text-gray-400 mr-2\" size={14} />\n              <span>{query}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No results state with simplified design */}\n      {results.length === 0 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-5 text-center border border-gray-200/70 dark:border-gray-700/50\">\n          <div className=\"w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center mx-auto mb-3\">\n            <FiInfo className=\"text-gray-400\" size={24} />\n          </div>\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">No search results found</h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 max-w-md mx-auto\">\n            Try using different search terms or broaden your query.\n          </p>\n        </div>\n      )}\n\n      {/* Results list with refined card design */}\n      <div className=\"space-y-4\">\n        {results.map((result, index) => (\n          <motion.div \n            key={index} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: index * 0.05 }}\n            whileHover={{ y: -2 }} \n            className=\"group\"\n          >\n            {/* Simplified result card with minimal styling */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-gray-700/50 overflow-hidden transition-all duration-200 hover:border-gray-300/70 dark:hover:border-gray-600/50\">\n              <div className=\"p-4\">\n                {/* Title and link with improved layout */}\n                <div className=\"flex items-start\">\n                  <div className=\"min-w-0 flex-1\">\n                    {/* Title with subtle external link icon */}\n                    <a\n                      href={result.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"group/link\"\n                    >\n                      <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors\">\n                        <span className=\"mr-2\">{index + 1}. {result.title}</span>\n                        <FiExternalLink\n                          className=\"text-gray-400 dark:text-gray-500 opacity-0 group-hover/link:opacity-100 transition-opacity duration-200\"\n                          size={14}\n                        />\n                      </h3>\n                    </a>\n\n                    {/* URL with simplified display */}\n                    <div className=\"mb-3\">\n                      <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                        <FiGlobe size={12} className=\"mr-1.5\" />\n                        <span className=\"truncate\">{result.url}</span>\n                      </div>\n                    </div>\n\n                    {/* Snippet with clean typography */}\n                    <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-300 leading-relaxed\">\n                      {result.snippet}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport { BrowserShell } from './BrowserShell';\n\ninterface TextRendererProps {\n  part: ToolResultContentPart & { showAsRawMarkdown?: boolean };\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders text content with Markdown support\n *\n * Improvements:\n * - Support for displaying raw markdown content\n * - Uses browser shell for browser-related content\n * - Better syntax highlighting for code blocks\n */\nexport const TextRenderer: React.FC<TextRendererProps> = ({ part, onAction }) => {\n  if (!part.text) {\n    return <div className=\"text-gray-500 italic\">Empty text content</div>;\n  }\n\n  // Determine if content is browser-related\n  const isBrowserContent = part.name?.toLowerCase().includes('browser') || false;\n\n  // Check if this is a browser_get_markdown result that should display raw markdown\n  const isMarkdownResult =\n    part.showAsRawMarkdown ||\n    part.name?.toLowerCase().includes('markdown') ||\n    part.name?.toLowerCase().includes('browser_get_markdown');\n\n  // if (part.name?.toLowerCase().includes('browser_navigate')) {\n  //   return <BrowserShell title={part.name || 'Browser Content'}>{part.text}</BrowserShell>;\n  // }\n\n  // Handle \"other\" type events - wrap in code block if needed\n  const isOtherType = part.name === 'other' || part.type === 'other';\n  if (isOtherType || isMarkdownResult) {\n    // Wrap in markdown code block to preserve formatting\n    const content = `\\`\\`\\`md\\n${part.text}\\n\\`\\`\\``;\n    return (\n      <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n        <MarkdownRenderer content={content} />\n      </div>\n    );\n  }\n\n  // Determine if content contains markdown syntax\n  const hasMarkdown = /[*#\\[\\]_`~]/.test(part.text);\n\n  // Render browser content in a browser shell\n  if (isBrowserContent) {\n    return (\n      <BrowserShell title={part.name || 'Browser Content'}>\n        <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n          <MarkdownRenderer content={part.text} />\n        </div>\n      </BrowserShell>\n    );\n  }\n\n  // Render standard content\n  return (\n    <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n      {hasMarkdown ? (\n        <MarkdownRenderer content={part.text} />\n      ) : (\n        <div className=\"whitespace-pre-wrap\">{part.text}</div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { TextRenderer } from './TextRenderer';\nimport { ImageRenderer } from './ImageRenderer';\nimport { LinkRenderer } from './LinkRenderer';\nimport { SearchResultRenderer } from './SearchResultRenderer';\nimport { CommandResultRenderer } from './CommandResultRenderer';\nimport { BrowserResultRenderer } from './BrowserResultRenderer';\nimport { BrowserControlRenderer } from './BrowserControlRenderer';\nimport { PlanViewerRenderer } from './PlanViewerRenderer';\nimport { ResearchReportRenderer } from './ResearchReportRenderer';\nimport { FileResultRenderer } from './FileResultRenderer';\nimport { GenericResultRenderer } from './GenericResultRenderer';\nimport { DeliverableRenderer } from './DeliverableRenderer';\nimport { ToolResultContentPart } from '../types';\n\n/**\n * Registry of content part renderers\n * Maps content types to their renderer components\n *\n * Design pattern: Component Registry pattern - allows dynamic registration of\n * renderers for different content types without modifying the core renderer\n */\nconst CONTENT_RENDERERS: Record<\n  string,\n  React.FC<{ part: ToolResultContentPart; onAction?: (action: string, data: any) => void }>\n> = {\n  text: TextRenderer,\n  image: ImageRenderer,\n  link: LinkRenderer,\n  search_result: SearchResultRenderer,\n  command_result: CommandResultRenderer,\n  browser_result: BrowserResultRenderer,\n  browser_control: BrowserControlRenderer,\n  plan: PlanViewerRenderer,\n  research_report: ResearchReportRenderer,\n  file_result: FileResultRenderer,\n  json: GenericResultRenderer,\n  deliverable: DeliverableRenderer, // Add new deliverable renderer\n};\n\ninterface ToolResultRendererProps {\n  /**\n   * Array of content parts to render\n   */\n  content: ToolResultContentPart[];\n\n  /**\n   * Optional handler for interactive actions\n   */\n  onAction?: (action: string, data: any) => void;\n\n  /**\n   * Optional className for the container\n   */\n  className?: string;\n}\n\n/**\n * Renders tool result content parts using the appropriate renderer for each part\n *\n * This component acts as a router that delegates rendering to specialized components\n * based on the content type, making it easily extensible to new content types.\n *\n * Improvements:\n * - Special handling for browser_get_markdown content\n * - Uses browser shell for browser-related tool results\n * - Consistent styling across all tool result types\n * - Intelligent generic renderer for unknown formats\n */\nexport const ToolResultRenderer: React.FC<ToolResultRendererProps> = ({\n  content,\n  onAction,\n  className = '',\n}) => {\n  if (!content || content.length === 0) {\n    return (\n      <div className=\"p-4 text-gray-500 dark:text-gray-400 text-sm italic\">\n        No content to display\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {content.map((part, index) => {\n        // 特殊处理: 如果是 json 类型的部分，使用智能渲染器\n        if (part.type === 'json') {\n          return (\n            <div key={`json-${part.name || ''}-${index}`} className=\"tool-result-part\">\n              <GenericResultRenderer part={part} onAction={onAction} />\n            </div>\n          );\n        }\n\n        // 正常渲染其他类型\n        const Renderer = CONTENT_RENDERERS[part.type] || TextRenderer;\n\n        return (\n          <div key={`${part.type}-${part.name || ''}-${index}`} className=\"tool-result-part\">\n            <Renderer part={part} onAction={onAction} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\n/**\n * Register a custom renderer for a specific content type\n * This allows extending the system with new renderers without modifying this file\n */\nexport function registerRenderer(\n  contentType: string,\n  renderer: React.FC<{\n    part: ToolResultContentPart;\n    onAction?: (action: string, data: any) => void;\n  }>,\n): void {\n  CONTENT_RENDERERS[contentType] = renderer;\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;AASA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;;;;;AAGA;AAAA;;AAEA;;;;;AAGA;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;AAEA;AAAA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AA5CA;;AACA;AAGA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;;AAEA;AAWA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAIA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAMA;AAAA;;AAVA;;;;;;;;;;;;;;;;;AAgBA;AArHA;;AAUA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;AAOA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAKA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;;;;;AAYA;A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A;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;;;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAIA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAhWA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAgVA;;AA9UA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAKA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAaA;AAZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AAEA;;AAEA;AAAA;;;;;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AAIA;;AACA;AACA;;;;;;AAgBA;AAAA;AACA;;;;;;;;;;;;;AAMA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAtaA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AACA;AACA;A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;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAEA;;;;;;;;;;;;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;AAAA;;;;;;;AAEA;AAAA;AACA;;;;;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AACA;AACA;;;;;;;;;;;;;AAMA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AAnTA;AAAA;AAqTA;;AAEA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAGA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/nBA;AAEA;AACA;AACA;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAE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"}