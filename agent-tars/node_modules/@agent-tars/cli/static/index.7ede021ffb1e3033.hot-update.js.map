{"version":3,"file":"index.7ede021ffb1e3033.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/ChatPanel.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/ChatPanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/ImagePreview.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/MessageInput.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/ResearchReportEntry.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749656718953\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749656718937\n        var cssReload = require(\"../../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useRef, useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAtomValue } from 'jotai';\nimport { FiChevronDown, FiInfo, FiWifiOff, FiRefreshCw } from 'react-icons/fi';\n\nimport { useSession } from '../../hooks/useSession';\nimport { MessageGroup } from './Message/components/MessageGroup';\nimport { MessageInput } from './MessageInput';\nimport { offlineModeAtom } from '../../state/atoms/ui';\nimport { groupedMessagesAtom, messagesAtom } from '../../state/atoms/message';\nimport { replayStateAtom } from '../../state/atoms/replay';\nimport { useReplayMode } from '../../context/ReplayModeContext';\nimport { ResearchReportEntry } from './ResearchReportEntry';\nimport { apiService } from '@/v2/services/apiService';\nimport { useLocation } from 'react-router-dom';\n\nimport './ChatPanel.css';\n\n/**\n * ChatPanel Component - Main chat interface\n *\n * Design principles:\n * - Clean, distraction-free message display area with ample whitespace\n * - Elegant loading indicators and status messages with subtle animations\n * - Visually distinct message bubbles with refined spacing\n * - Clear visual hierarchy through typography and subtle borders\n */\nexport const ChatPanel: React.FC = () => {\n  const { activeSessionId, isProcessing, connectionStatus, checkServerStatus } = useSession();\n  const groupedMessages = useAtomValue(groupedMessagesAtom);\n  const allMessages = useAtomValue(messagesAtom);\n  const replayState = useAtomValue(replayStateAtom);\n  const isReplayMode = useReplayMode();\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  \n  // 使用当前会话的消息\n  const activeMessages = activeSessionId ? groupedMessages[activeSessionId] || [] : [];\n\n  // 滚动按钮显示逻辑\n  useEffect(() => {\n    const checkScroll = () => {\n      const container = messagesContainerRef.current;\n      if (!container) return;\n      \n      const { scrollTop, scrollHeight, clientHeight } = container;\n      const atBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 20;\n      setShowScrollButton(!atBottom);\n    };\n\n    const container = messagesContainerRef.current;\n    if (container) {\n      container.addEventListener('scroll', checkScroll);\n      return () => container.removeEventListener('scroll', checkScroll);\n    }\n  }, []);\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (!messagesEndRef.current || !messagesContainerRef.current) return;\n    \n    const container = messagesContainerRef.current;\n    const { scrollTop, scrollHeight, clientHeight } = container;\n    const isAtBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 30;\n    \n    const shouldAutoScroll = \n      isAtBottom || \n      (activeMessages.length > 0 && \n       activeMessages[activeMessages.length - 1].messages[0]?.role === 'user');\n    \n    if (shouldAutoScroll) {\n      setTimeout(() => {\n        container.scrollTo({ top: container.scrollHeight, behavior: 'smooth' });\n      }, 100);\n    }\n  }, [activeMessages]);\n\n  const scrollToBottom = () => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTo({\n        top: messagesContainerRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // 查找研究报告\n  const findResearchReport = () => {\n    if (!activeSessionId || !allMessages[activeSessionId]) return null;\n\n    const sessionMessages = allMessages[activeSessionId];\n    return [...sessionMessages]\n      .reverse()\n      .find(\n        (msg) =>\n          (msg.role === 'final_answer' || msg.role === 'assistant') &&\n          msg.isDeepResearch === true &&\n          msg.title,\n      );\n  };\n\n  const researchReport = findResearchReport();\n\n  // 渲染断线通知\n  const renderOfflineBanner = () => {\n    if (connectionStatus.connected || !activeSessionId || isReplayMode) return null;\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-4 px-4 py-3 bg-red-50/30 dark:bg-red-900/15 text-red-700 dark:text-red-300 rounded-xl shadow-sm\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <div className=\"font-medium flex items-center\">\n              <FiWifiOff className=\"mr-2 text-red-500 dark:text-red-400\" />\n              Viewing in offline mode\n            </div>\n            <div className=\"text-sm mt-1\">\n              You can view previous messages but cannot send new ones until reconnected.\n            </div>\n          </div>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => checkServerStatus()}\n            className=\"ml-3 px-3 py-1.5 bg-red-100/70 dark:bg-red-800/30 hover:bg-red-200/70 \n            dark:hover:bg-red-700/40 rounded-lg text-sm font-medium transition-colors \n            flex items-center border border-red-200/30 dark:border-red-700/30\"\n          >\n            <FiRefreshCw\n              className={`mr-1.5 ${connectionStatus.reconnecting ? 'animate-spin' : ''}`}\n              size={14}\n            />\n            {connectionStatus.reconnecting ? 'Reconnecting...' : 'Reconnect'}\n          </motion.button>\n        </div>\n      </motion.div>\n    );\n  };\n\n  // 渲染加载指示器\n  const renderLoadingIndicator = () => {\n    if (!isProcessing) return null;\n    const hasMessages = activeSessionId && activeMessages.length > 0;\n    if (!hasMessages) return null;\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"flex items-center gap-2 p-3 bg-white dark:bg-gray-800 rounded-2xl mb-4 \n        border border-gray-100/40 dark:border-gray-700/20 shadow-sm\"\n      >\n        <div className=\"w-6 h-6 rounded-full bg-gray-50 dark:bg-gray-700 flex \n        items-center justify-center border border-gray-100/40 dark:border-gray-700/40\">\n          <div className=\"w-3 h-3 rounded-full bg-indigo-500 animate-pulse\" />\n        </div>\n        <span className=\"text-sm text-gray-600 dark:text-gray-300\">Agent TARS is thinking...</span>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-full relative\">\n      {!activeSessionId ? (\n        <EmptyState />\n      ) : (\n        <>\n          {/* 消息列表区域 */}\n          <div\n            ref={messagesContainerRef}\n            className=\"flex-1 overflow-y-auto px-4 py-5 overflow-x-hidden min-h-0 chat-scrollbar relative\"\n          >\n            {renderOfflineBanner()}\n\n            {activeMessages.length === 0 ? (\n              <EmptyConversation \n                replayState={replayState} \n                cancelAutoPlay={() => {}} // 这里应该传入实际的取消函数\n              />\n            ) : (\n              <div className=\"space-y-5 pb-2\">\n                {activeMessages.map((group, index) => (\n                  <MessageGroup\n                    key={`group-${index}-${group.messages[0].id}`}\n                    messages={group.messages}\n                    isThinking={\n                      isProcessing && \n                      !replayState.isActive && \n                      index === activeMessages.length - 1\n                    }\n                  />\n                ))}\n              </div>\n            )}\n\n            {renderLoadingIndicator()}\n            <div ref={messagesEndRef} />\n\n            {/* 滚动到底部按钮 */}\n            <AnimatePresence>\n              {showScrollButton && activeMessages.length > 1 && (\n                <motion.button\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: 10 }}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={scrollToBottom}\n                  className=\"absolute bottom-2 right-2 w-10 h-10 rounded-full bg-white dark:bg-gray-800\n                  shadow-md border border-gray-100/40 dark:border-gray-700/20 flex items-center \n                  justify-center text-gray-500 dark:text-gray-400 hover:text-indigo-500 \n                  dark:hover:text-indigo-400 transition-colors\"\n                >\n                  <FiChevronDown size={20} />\n                </motion.button>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* 输入区域 */}\n          {!isReplayMode && (\n            <div className=\"px-4 pb-4 pt-2\">\n              {/* 研究报告入口 */}\n              {researchReport && !isProcessing && (\n                <div className=\"mb-4\">\n                  <ResearchReportEntry\n                    title={researchReport.title || 'Research Report'}\n                    timestamp={researchReport.timestamp}\n                    content={\n                      typeof researchReport.content === 'string' ? researchReport.content : ''\n                    }\n                  />\n                </div>\n              )}\n\n              <MessageInput\n                isDisabled={\n                  !activeSessionId || isProcessing || !connectionStatus.connected || isReplayMode\n                }\n                onReconnect={checkServerStatus}\n                connectionStatus={connectionStatus}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\n// 空状态组件\nconst EmptyState = () => (\n  <div className=\"flex items-center justify-center flex-1\">\n    <div className=\"text-center p-6 max-w-md\">\n      <div className=\"w-16 h-16 bg-white dark:bg-gray-800 rounded-xl flex items-center \n      justify-center mx-auto mb-6 text-gray-400 dark:text-gray-500 border border-gray-100/50 \n      dark:border-gray-700/20 shadow-sm\">\n        <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 13.8214 2.48697 15.5291 3.33782 17L2.5 21.5L7 20.6622C8.47087 21.513 10.1786 22 12 22Z\" \n            stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n      </div>\n      <h2 className=\"text-xl font-display font-bold mb-3 text-gray-800 dark:text-gray-200\">\n        Welcome to Agent TARS\n      </h2>\n      <p className=\"text-gray-600 dark:text-gray-400 mb-5 text-sm leading-relaxed\">\n        Create a new chat session to get started with the AI assistant.\n      </p>\n      <div className=\"flex items-center p-4 bg-white dark:bg-gray-800 rounded-xl mb-3 text-gray-600 \n      dark:text-gray-400 text-sm border border-gray-100/40 dark:border-gray-700/20 shadow-sm\">\n        <FiInfo className=\"mr-3 text-gray-400 flex-shrink-0\" />\n        <span>\n          TARS can help with tasks involving web search, browsing, and file operations.\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\n// 空会话状态组件\nconst EmptyConversation = ({ replayState, cancelAutoPlay }) => (\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    transition={{ duration: 0.3 }}\n    className=\"flex items-center justify-center h-full\"\n  >\n    <div className=\"text-center p-6 max-w-md\">\n      <h3 className=\"text-lg font-display font-medium mb-2\">\n        {replayState.isActive ? 'Replay starting...' : 'Start a conversation'}\n      </h3>\n      {replayState.isActive && replayState.autoPlayCountdown !== null ? (\n        <div className=\"mt-2\">\n          <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\n            Auto-play in {replayState.autoPlayCountdown} seconds...\n          </p>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={cancelAutoPlay}\n            className=\"px-3 py-1.5 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 \n            dark:text-gray-300 rounded-lg border border-gray-200/50 dark:border-gray-700/30 \n            flex items-center mx-auto\"\n          >\n            <svg className=\"mr-1.5\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" \n              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            Cancel auto-play\n          </motion.button>\n        </div>\n      ) : (\n        <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n          {replayState.isActive\n            ? 'Please wait while the replay loads or press play to begin'\n            : 'Ask Agent TARS a question or provide a command to begin.'}\n        </p>\n      )}\n    </div>\n  </motion.div>\n);\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiX, FiMaximize, FiImage } from 'react-icons/fi';\nimport { Dialog } from '@headlessui/react';\nimport { ChatCompletionContentPart } from '@multimodal/agent-interface';\n\ninterface ImagePreviewProps {\n  image: ChatCompletionContentPart;\n  onRemove: () => void;\n}\n\n/**\n * ImagePreview Component - Elegant thumbnail with zoom functionality\n *\n * Design principles:\n * - Clean, minimalist thumbnail design\n * - Smooth hover and interaction effects\n * - Full-screen zoom with elegant transitions\n * - Accessible remove functionality\n */\nexport const ImagePreview: React.FC<ImagePreviewProps> = ({ image, onRemove }) => {\n  const [isZoomed, setIsZoomed] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  if (image.type !== 'image_url' || !image.image_url) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Thumbnail container with overflow margin for remove button */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.9 }}\n        className=\"relative group cursor-pointer p-1.5\"\n        transition={{ duration: 0.2 }}\n      >\n        {/* Image thumbnail */}\n        <div className=\"relative w-24 h-24 rounded-lg overflow-hidden bg-gray-50 dark:bg-gray-800 \n        border border-gray-200 dark:border-gray-700 hover:border-indigo-300 \n        dark:hover:border-indigo-600 transition-all duration-200\">\n          <img\n            src={image.image_url.url}\n            alt=\"Image preview\"\n            className=\"w-full h-full object-cover transition-transform duration-200 \n            group-hover:scale-105\"\n            onClick={() => setIsZoomed(true)}\n            onLoad={() => setImageLoaded(true)}\n          />\n\n          {/* Loading state */}\n          {!imageLoaded && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-gray-800\">\n              <FiImage className=\"text-gray-400 dark:text-gray-500\" size={20} />\n            </div>\n          )}\n\n          {/* Hover overlay */}\n          <div className=\"absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 \n          transition-opacity duration-200 flex items-center justify-center\">\n            <FiMaximize className=\"text-white\" size={18} />\n          </div>\n        </div>\n\n        {/* Remove button - positioned absolutely */}\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={(e) => {\n            e.stopPropagation();\n            onRemove();\n          }}\n          className=\"absolute -top-1 -right-1 bg-red-500 hover:bg-red-600 text-white \n          rounded-full p-1 opacity-0 group-hover:opacity-100 transition-all duration-200 \n          shadow border border-white dark:border-gray-800 z-10\"\n          title=\"Remove image\"\n          aria-label=\"Remove image\"\n        >\n          <FiX size={12} />\n        </motion.button>\n      </motion.div>\n\n      {/* Zoom modal */}\n      <Dialog \n        open={isZoomed} \n        onClose={() => setIsZoomed(false)} \n        className=\"relative z-[9999]\"\n      >\n        {/* Background overlay */}\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" \n          aria-hidden=\"true\" \n        />\n\n        {/* Modal content */}\n        <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n          <Dialog.Panel className=\"relative max-w-[90vw] max-h-[90vh] outline-none\">\n            {/* Close button */}\n            <motion.button\n              whileHover={{ scale: 1.1, backgroundColor: 'rgba(255, 255, 255, 0.2)' }}\n              whileTap={{ scale: 0.9 }}\n              onClick={() => setIsZoomed(false)}\n              className=\"absolute -top-10 right-0 bg-white/10 hover:bg-white/20 text-white \n              rounded-full p-2 transition-colors z-10\"\n              aria-label=\"Close image preview\"\n            >\n              <FiX size={24} />\n            </motion.button>\n\n            {/* Zoomed image */}\n            <motion.img\n              src={image.image_url.url}\n              alt=\"Preview\"\n              className=\"max-w-full max-h-[85vh] object-contain rounded-lg shadow-2xl\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.9 }}\n              transition={{ type: 'spring', duration: 0.3 }}\n            />\n          </Dialog.Panel>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiSend, FiX, FiRefreshCw, FiImage, FiLoader } from 'react-icons/fi';\nimport { useSession } from '../../hooks/useSession';\nimport { usePlan } from '../../hooks/usePlan';\nimport { ConnectionStatus } from '../../types';\nimport { useLocation } from 'react-router-dom';\nimport { usePro } from '@/v2/hooks/usePro';\nimport { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport { ImagePreview } from './ImagePreview';\n\ninterface MessageInputProps {\n  isDisabled?: boolean;\n  onReconnect?: () => void;\n  connectionStatus?: ConnectionStatus;\n  initialQuery?: string;\n}\n\n/**\n * MessageInput Component - Elegant input area for sending messages\n *\n * Design principles:\n * - Clean, intuitive interface with clear visual feedback\n * - Seamless image attachment and preview\n * - Responsive design with smooth animations\n * - Accessible keyboard shortcuts and status indicators\n */\nexport const MessageInput: React.FC<MessageInputProps> = ({\n  isDisabled = false,\n  onReconnect,\n  connectionStatus,\n}) => {\n  const [input, setInput] = useState('');\n  const [isAborting, setIsAborting] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState<ChatCompletionContentPart[]>([]);\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const location = useLocation();\n\n  const {\n    sendMessage,\n    isProcessing,\n    abortQuery,\n    activeSessionId,\n    checkSessionStatus,\n    setActivePanelContent,\n  } = useSession();\n\n  const isProMode = usePro();\n  const { currentPlan } = usePlan(activeSessionId);\n\n  // Process query from URL parameters on component mount\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get('q');\n\n    if (query && !isProcessing && activeSessionId) {\n      setInput(query);\n\n      const submitQuery = async () => {\n        try {\n          await sendMessage(query);\n          setInput('');\n        } catch (error) {\n          console.error('Failed to send message:', error);\n        }\n      };\n\n      submitQuery();\n    }\n  }, [location.search, activeSessionId, isProcessing, sendMessage]);\n\n  // Session status polling\n  useEffect(() => {\n    if (activeSessionId && connectionStatus?.connected) {\n      checkSessionStatus(activeSessionId);\n      \n      const intervalId = setInterval(() => {\n        checkSessionStatus(activeSessionId);\n      }, 2000);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [activeSessionId, connectionStatus?.connected, checkSessionStatus]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if ((!input.trim() && uploadedImages.length === 0) || isDisabled) return;\n\n    // Save message content before clearing input\n    const messageToSend = input.trim();\n    setInput('');\n\n    // Build multimodal content if there are images\n    const messageContent =\n      uploadedImages.length > 0\n        ? [\n            ...uploadedImages,\n            ...(messageToSend\n              ? [{ type: 'text', text: messageToSend } as ChatCompletionContentPart]\n              : []),\n          ]\n        : messageToSend;\n\n    // Clear uploaded images\n    setUploadedImages([]);\n\n    // Reset textarea height\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n    }\n\n    try {\n      await sendMessage(messageContent);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    // Send on Ctrl+Enter\n    if (e.key === 'Enter' && e.ctrlKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  const handleAbort = async () => {\n    if (!isProcessing) return;\n\n    setIsAborting(true);\n    try {\n      await abortQuery();\n    } catch (error) {\n      console.error('Failed to abort:', error);\n    } finally {\n      setIsAborting(false);\n    }\n  };\n\n  // Adjust textarea height based on content\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.target;\n    setInput(target.value);\n\n    // Reset height to recalculate proper scrollHeight\n    target.style.height = 'auto';\n    // Set to scrollHeight but max 200px\n    target.style.height = `${Math.min(target.scrollHeight, 200)}px`;\n  };\n\n  // Auto-focus input when available\n  useEffect(() => {\n    if (!isDisabled && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isDisabled]);\n\n  // File upload handlers\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files || files.length === 0) return;\n\n    Array.from(files).forEach((file) => {\n      if (!file.type.startsWith('image/')) return;\n\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        if (event.target?.result) {\n          const newImage: ChatCompletionContentPart = {\n            type: 'image_url',\n            image_url: {\n              url: event.target.result as string,\n              detail: 'auto',\n            },\n          };\n          setUploadedImages((prev) => [...prev, newImage]);\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n\n    // Reset input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  // Handle pasting images\n  const handlePaste = (e: React.ClipboardEvent) => {\n    if (isDisabled || isProcessing) return;\n\n    const items = e.clipboardData?.items;\n    if (!items) return;\n\n    let hasProcessedImage = false;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      \n      if (item.type.indexOf('image') !== -1) {\n        hasProcessedImage = true;\n        \n        const blob = item.getAsFile();\n        if (!blob) continue;\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          if (event.target?.result) {\n            const newImage: ChatCompletionContentPart = {\n              type: 'image_url',\n              image_url: {\n                url: event.target.result as string,\n                detail: 'auto',\n              },\n            };\n            setUploadedImages((prev) => [...prev, newImage]);\n          }\n        };\n        reader.readAsDataURL(blob);\n      }\n    }\n\n    if (hasProcessedImage) {\n      console.log('Processed pasted image(s)');\n    }\n  };\n\n  // Remove an image from the uploaded images list\n  const handleRemoveImage = (index: number) => {\n    setUploadedImages((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  // Plan button component\n  const PlanButton = () => {\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0) {\n      return null;\n    }\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.button\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.8 }}\n        whileTap={{ scale: 0.9 }}\n        whileHover={{ scale: 1.05, y: -2 }}\n        onClick={() =>\n          setActivePanelContent({\n            type: 'plan',\n            source: null,\n            title: 'Task Plan',\n            timestamp: Date.now(),\n          })\n        }\n        className=\"flex items-center gap-1 px-3 py-1 text-xs font-medium rounded-full \n        bg-white/90 dark:bg-gray-800/90 text-gray-600 dark:text-gray-300 \n        border border-gray-200/50 dark:border-gray-700/30 hover:bg-white \n        hover:border-gray-300/50 dark:hover:bg-gray-700/50 dark:hover:border-gray-600/50 \n        transition-all duration-200 shadow-sm\"\n      >\n        <svg\n          width=\"12\"\n          height=\"12\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke={isComplete ? \"#10B981\" : \"#6366F1\"}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className={isComplete ? \"\" : \"animate-pulse\"}\n        >\n          <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\" />\n          <path d=\"M9 9h6\" />\n          <path d=\"M9 13h6\" />\n          <path d=\"M9 17h6\" />\n        </svg>\n        \n        View Plan\n        <span\n          className={`ml-1 px-1.5 py-0.5 rounded-full ${\n            isComplete\n              ? 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400'\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n          } text-[10px]`}\n        >\n          {completedSteps}/{totalSteps}\n        </span>\n      </motion.button>\n    );\n  };\n\n  const getPlaceholderText = () => {\n    if (connectionStatus && !connectionStatus.connected) {\n      return 'Server disconnected...';\n    }\n    \n    if (isProcessing) {\n      return 'Agent TARS is thinking...';\n    }\n    \n    return 'Ask Agent TARS something... (Ctrl+Enter to send)';\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"relative\">\n      {/* Plan button */}\n      {isProMode && currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0 && (\n        <div className=\"flex justify-center mb-3\">\n          <PlanButton />\n        </div>\n      )}\n\n      {/* Image preview area */}\n      {uploadedImages.length > 0 && (\n        <div className=\"mb-3 flex flex-wrap gap-2\">\n          {uploadedImages.map((image, index) => (\n            <ImagePreview key={index} image={image} onRemove={() => handleRemoveImage(index)} />\n          ))}\n        </div>\n      )}\n\n      {/* Input container with elegant styling */}\n      <div\n        className={`relative overflow-hidden rounded-2xl transition-all duration-300 ${\n          isFocused ? 'shadow-md ring-2 ring-indigo-100 dark:ring-indigo-900/30' : ''\n        }`}\n      >\n        <div\n          className={`relative bg-white dark:bg-gray-800 rounded-2xl border ${\n            isFocused \n              ? 'border-indigo-200 dark:border-indigo-800/30' \n              : 'border-gray-200/70 dark:border-gray-700/30'\n          } transition-all duration-200 ${isDisabled ? 'opacity-90' : ''}`}\n        >\n          <textarea\n            ref={inputRef}\n            value={input}\n            onChange={handleInput}\n            onKeyDown={handleKeyDown}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onPaste={handlePaste}\n            placeholder={getPlaceholderText()}\n            disabled={isDisabled}\n            className=\"w-full px-4 pt-4 pb-10 focus:outline-none resize-none min-h-[90px] \n            max-h-[200px] bg-transparent text-gray-800 dark:text-gray-200 text-sm leading-relaxed\"\n            rows={2}\n          />\n\n          {/* File upload button */}\n          <div className=\"absolute left-3 bottom-2 flex items-center gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              type=\"button\"\n              onClick={handleFileUpload}\n              disabled={isDisabled || isProcessing}\n              className={`p-2 rounded-full transition-colors ${\n                isDisabled || isProcessing\n                  ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                  : 'text-gray-400 hover:text-indigo-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'\n              }`}\n              title=\"Attach image (or paste directly)\"\n            >\n              <FiImage size={18} />\n            </motion.button>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n              accept=\"image/*\"\n              multiple\n              className=\"hidden\"\n              disabled={isDisabled || isProcessing}\n            />\n          </div>\n\n          {/* Action buttons with animations */}\n          <AnimatePresence mode=\"wait\">\n            {connectionStatus && !connectionStatus.connected ? (\n              <motion.button\n                key=\"reconnect\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"button\"\n                onClick={onReconnect}\n                className=\"absolute right-3 bottom-2 p-2 rounded-full text-gray-500 \n                hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400 \n                transition-all duration-200\"\n                title=\"Try to reconnect\"\n              >\n                <FiRefreshCw\n                  size={20}\n                  className={connectionStatus.reconnecting ? 'animate-spin' : ''}\n                />\n              </motion.button>\n            ) : isProcessing ? (\n              <motion.button\n                key=\"abort\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"button\"\n                onClick={handleAbort}\n                disabled={isAborting}\n                className={`absolute right-3 bottom-2 p-2 rounded-full ${\n                  isAborting\n                    ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                    : 'text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'\n                } transition-all duration-200`}\n                title=\"Abort current operation\"\n              >\n                {isAborting ? <FiLoader className=\"animate-spin\" size={20} /> : <FiX size={20} />}\n              </motion.button>\n            ) : (\n              <motion.button\n                key=\"send\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"submit\"\n                disabled={(!input.trim() && uploadedImages.length === 0) || isDisabled}\n                className={`absolute right-3 bottom-2 p-2.5 rounded-full ${\n                  (!input.trim() && uploadedImages.length === 0) || isDisabled\n                    ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed'\n                    : 'bg-indigo-500 dark:bg-indigo-600 text-white shadow-sm hover:bg-indigo-600 dark:hover:bg-indigo-500 transition-colors'\n                } transition-all duration-200`}\n              >\n                <FiSend size={18} />\n              </motion.button>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n\n      {/* Status text below input */}\n      <div className=\"flex justify-center mt-2 text-xs\">\n        {connectionStatus && !connectionStatus.connected ? (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            animate={{ opacity: 1 }}\n            className=\"text-red-500 dark:text-red-400 flex items-center font-medium\"\n          >\n            {connectionStatus.reconnecting\n              ? 'Attempting to reconnect...'\n              : 'Server disconnected. Click the button to reconnect.'}\n          </motion.span>\n        ) : isProcessing ? (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            whileHover={{ opacity: 1 }}\n            className=\"text-indigo-500 dark:text-indigo-400 flex items-center\"\n          >\n            <div className=\"flex items-center mr-2\">\n              <div className=\"thinking-dot\"></div>\n              <div className=\"thinking-dot\"></div>\n              <div className=\"thinking-dot\"></div>\n            </div>\n            Agent is processing your request...\n          </motion.span>\n        ) : (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            whileHover={{ opacity: 1 }}\n            className=\"text-gray-500 dark:text-gray-400 transition-opacity\"\n          >\n            Use Ctrl+Enter to quickly send • You can also paste images directly\n          </motion.span>\n        )}\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiBookOpen, FiClock, FiChevronRight } from 'react-icons/fi';\nimport { useSession } from '../../hooks/useSession';\nimport { formatTimestamp } from '../../utils/formatters';\n\ninterface ResearchReportEntryProps {\n  title: string;\n  timestamp: number;\n  content: string;\n}\n\n/**\n * ResearchReportEntry - Elegant entry point for accessing research reports\n *\n * Design principles:\n * - Clean, card-based design with clear hierarchy\n * - Subtle animations to enhance user experience\n * - Clear visual indication of clickable content\n * - Consistent with application's design language\n */\nexport const ResearchReportEntry: React.FC<ResearchReportEntryProps> = ({\n  title,\n  timestamp,\n  content,\n}) => {\n  const { setActivePanelContent } = useSession();\n\n  const handleOpenReport = () => {\n    setActivePanelContent({\n      type: 'research_report',\n      source: content,\n      title: title || 'Research Report',\n      timestamp,\n    });\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ y: -2 }}\n      whileTap={{ scale: 0.99 }}\n      onClick={handleOpenReport}\n      className=\"p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 \n      dark:border-gray-700/30 cursor-pointer group shadow-sm hover:shadow-md transition-all duration-200\"\n    >\n      <div className=\"flex items-center\">\n        <div className=\"w-10 h-10 rounded-lg bg-indigo-50 dark:bg-indigo-900/20 flex \n        items-center justify-center mr-3 text-indigo-500 dark:text-indigo-400 \n        border border-indigo-100/40 dark:border-indigo-800/30\">\n          <FiBookOpen size={20} />\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-medium text-gray-800 dark:text-gray-200 truncate\">\n            {title || 'Research Report'}\n          </div>\n\n          <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\n            <FiClock className=\"mr-1.5\" size={12} />\n            <span>{formatTimestamp(timestamp)}</span>\n            <span className=\"mx-1.5\">•</span>\n            <span className=\"font-medium text-indigo-600 dark:text-indigo-400\">\n              Research Report\n            </span>\n          </div>\n        </div>\n\n        <div className=\"ml-2 text-gray-400 dark:text-gray-500 group-hover:text-indigo-500 \n        dark:group-hover:text-indigo-400 transition-colors\">\n          <motion.div\n            animate={{ x: [0, 3, 0] }}\n            transition={{\n              duration: 1.5,\n              repeat: Infinity,\n              repeatType: \"loop\",\n              ease: \"easeInOut\",\n              repeatDelay: 2,\n            }}\n          >\n            <FiChevronRight size={20} />\n          </motion.div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AATA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAQA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;;AACA;;AACA;AAAA;;AACA;AAAA;;;;;;AAAA;;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAIA;AACA;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAGA;AAAA;AAEA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAEA;AACA;AACA;;;;AAGA;;AAEA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;;;;;AAGA;AAAA;AACA;AAGA;AACA;AAFA;;;;;;;;;;AAYA;AACA;AAAA;;;;;;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAOA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;AAQA;AAlOA;;AACA;AACA;AACA;AACA;AACA;;;AALA;AAoOA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;AAGA;AAAA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AApBA;AA4BA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;;AACA;AAAA;AACA;;;;;;AAEA;AACA;;AACA;AAAA;;AAAA;AACA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;AACA;;;;;;;;;;;;AAKA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7RA;AACA;AACA;AACA;AAQA;;;;;;;;AAQA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;AAGA;AAAA;;AAGA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AAKA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAIA;AAAA;AACA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AA5GA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AASA;;;;;;;;AAQA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAFA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA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"}