{"version":3,"file":"index.cc054d69f706dfbd.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ThinkingAnimation.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749702648704\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface ThinkingAnimationProps {\n  size?: 'small' | 'medium' | 'large';\n  text?: string;\n  className?: string;\n}\n\n/**\n * 内容加载动画组件\n *\n * 设计特点:\n * - 简洁的加载条设计\n * - 动态长度变化的加载指示器\n * - 提供清晰的视觉反馈\n * - 支持可自定义大小\n */\nexport const ThinkingAnimation: React.FC<ThinkingAnimationProps> = ({\n  size = 'medium',\n  text = 'Agent TARS is running',\n  className = '',\n}) => {\n  // 根据尺寸设置参数\n  const containerClass =\n    size === 'small' ? 'max-w-[180px]' : size === 'medium' ? 'max-w-[240px]' : 'max-w-[300px]';\n  const textClass = size === 'small' ? 'text-xs' : size === 'medium' ? 'text-sm' : 'text-base';\n\n  // 加载条数量和配置\n  const loaderBars = [\n    { width: '100%', delay: 0 },\n    { width: '80%', delay: 0.2 },\n    { width: '60%', delay: 0.4 },\n  ];\n\n  return (\n    <div className={`${containerClass} ${className}`}>\n      {/* 加载文本 */}\n      <div className={`${textClass} text-gray-700 dark:text-gray-400 font-medium mb-3`}>{text}</div>\n\n      {/* 加载条动画 */}\n      <div className=\"space-y-2\">\n        {loaderBars.map((bar, index) => (\n          <motion.div\n            key={`loader-bar-${index}`}\n            className=\"h-2 bg-gray-200 dark:bg-gray-700/40 rounded-full overflow-hidden\"\n          >\n            <motion.div\n              className=\"h-full bg-gradient-to-r from-gray-300 to-gray-400 dark:from-gray-600/40 dark:to-gray-500/40 rounded-full\"\n              initial={{ width: '0%' }}\n              animate={{\n                width: bar.width,\n                transition: {\n                  duration: 1.2,\n                  delay: bar.delay,\n                  repeat: Infinity,\n                  repeatType: 'reverse',\n                  ease: 'easeInOut',\n                },\n              }}\n            />\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvBA;AACA;AAQA;;;;;;;;AAQA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAfA;;;;;;;;;;;;;;;;AAsBA;AAhDA"}