{"version":3,"file":"index.4bdbde51bfd37c11.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/index.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1748908953335\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport classNames from 'classnames';\nimport ChatSession from './ChatSession';\nimport ToolBar from './ToolBar';\nimport { useReplayMode } from '../../context/ReplayModeContext';\n\ninterface SidebarProps {\n  isCollapsed: boolean;\n  onToggleCollapse: () => void;\n}\n\n/**\n * Sidebar Component - 应用侧边栏\n * 由两部分组成：ChatSession（可折叠）和 ToolBar（始终可见）\n * 在 Replay 模式下只显示 ToolBar\n */\nexport const Sidebar: React.FC<SidebarProps> = ({ isCollapsed, onToggleCollapse }) => {\n  const isReplayMode = useReplayMode();\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"flex flex-col h-full bg-transparent border-r border-gray-100/40 dark:border-gray-700/20\">\n      {/* 应用标题/Logo */}\n      <div className=\"p-4 flex items-center\">\n        <div\n          className=\"text-lg font-bold text-gray-900 dark:text-gray-100 flex items-center cursor-pointer\"\n          onClick={() => navigate('/')}\n        >\n          <div className=\"w-8 h-8 rounded-2xl bg-gray-900 dark:bg-gray-100 flex items-center justify-center text-white dark:text-gray-900 font-bold mr-2 text-sm\">\n            A\n          </div>\n          <span>Agent TARS</span>\n        </div>\n      </div>\n\n      {/* 主体内容区 */}\n      <div className=\"flex-1 flex flex-col min-h-0\">\n        {/* 只在非 Replay 模式下显示 ChatSession */}\n        {!isReplayMode && (\n          <div className=\"flex-1 flex\">\n            {/* 完全折叠状态：显示展开按钮 */}\n            {isCollapsed && (\n              <div className=\"p-2\">\n                <button\n                  onClick={onToggleCollapse}\n                  className=\"p-2 text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-colors\"\n                >\n                  <FiChevronRight size={16} />\n                </button>\n              </div>\n            )}\n            \n            {/* 展开状态：显示 ChatSession */}\n            {!isCollapsed && (\n              <div className=\"flex-1\">\n                <ChatSession \n                  isCollapsed={isCollapsed} \n                  onToggleCollapse={onToggleCollapse} \n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* ToolBar 始终可见 */}\n      <ToolBar />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AACA;AACA;AAOA;;;;AAIA;AACA;;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;;;;;;;;;;;;;;;;;AAKA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AASA;;;;;;;;;;;AAGA;AArDA;;AACA;AACA;;;AAFA"}