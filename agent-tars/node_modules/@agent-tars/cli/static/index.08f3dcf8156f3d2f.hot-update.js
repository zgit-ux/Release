"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749632684630
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/v2/components/Workspace/WorkspaceDetail.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  WorkspaceDetail: () => (WorkspaceDetail)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var _hooks_useTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/hooks/useTool.tsx");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var _utils_formatters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/v2/utils/formatters.ts");
/* ESM import */var _renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/v2/components/Workspace/renderers/ToolResultRenderer.tsx");
/* ESM import */var _renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/v2/components/Workspace/renderers/ResearchReportRenderer.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();








/**
 * WorkspaceDetail Component - Displays details of a single tool result or report
 */ const WorkspaceDetail = ()=>{
    var _activePanelContent_toolCallId, _activePanelContent_toolCallId1;
    _s();
    const { activePanelContent } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    const { getToolIcon } = (0,_hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool)();
    if (!activePanelContent) {
        return null;
    }
    // 特殊处理 final_answer 类型或研究报告内容
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report' || activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer')) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: typeof activePanelContent.source === 'string' ? activePanelContent.source : JSON.stringify(activePanelContent.source, null, 2),
            title: activePanelContent.title || 'Research Report',
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
            lineNumber: 27,
            columnNumber: 7
        }, undefined);
    }
    // 特殊处理研究报告内容
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report') {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: activePanelContent.source,
            title: activePanelContent.title,
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
            lineNumber: 42,
            columnNumber: 7
        }, undefined);
    }
    // Convert legacy format content to standardized tool result parts
    const getStandardizedContent = ()=>{
        const { type, source, title, error, arguments: toolArguments } = activePanelContent;
        // Show error if present
        if (error) {
            return [
                {
                    type: 'text',
                    name: 'ERROR',
                    text: error
                }
            ];
        }
        // Handle write_file tool specifically
        if (type === 'file' && toolArguments && typeof toolArguments === 'object') {
            if (toolArguments.path && (toolArguments.content || typeof source === 'string')) {
                return [
                    {
                        type: 'file_result',
                        name: 'FILE_RESULT',
                        path: toolArguments.path,
                        content: toolArguments.content || source
                    }
                ];
            }
        }
        // Handle browser_vision_control type specifically
        if (type === 'browser_vision_control') {
            // 如果这是环境增强，包含原始截图数据
            const environmentImage = Array.isArray(activePanelContent.originalContent) ? extractImageUrl(activePanelContent.originalContent) : null;
            // Create browser_control part for the specialized renderer
            return [
                {
                    type: 'browser_control',
                    name: 'BROWSER_CONTROL',
                    toolCallId: activePanelContent.toolCallId,
                    thought: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.thought) || '',
                    step: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.step) || '',
                    action: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.action) || '',
                    status: (source === null || source === void 0 ? void 0 : source.status) || 'unknown',
                    environmentImage: environmentImage
                }
            ];
        }
        // Handle array of content parts from environment_input
        if (Array.isArray(source) && source.some((part)=>part.type === 'image_url')) {
            const imagePart = source.find((part)=>part.type === 'image_url');
            if (imagePart && imagePart.image_url && imagePart.image_url.url) {
                const imgSrc = imagePart.image_url.url;
                if (imgSrc.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = imgSrc.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
            }
        }
        // Based on tool type, convert to standardized format
        switch(type){
            case 'image':
                // Image content
                if (typeof source === 'string' && source.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = source.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: 'Image could not be displayed'
                    }
                ];
            case 'search':
                // Search results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    // Handle new multimodal format
                    const resultsItem = source.find((item)=>item.name === 'RESULTS');
                    const queryItem = source.find((item)=>item.name === 'QUERY');
                    if (resultsItem && resultsItem.text) {
                        // Parse results text into separate result items
                        const resultBlocks = resultsItem.text.split('---').filter(Boolean);
                        const parsedResults = resultBlocks.map((block)=>{
                            const lines = block.trim().split('\n');
                            const titleLine = lines[0] || '';
                            const urlLine = lines[1] || '';
                            const snippet = lines.slice(2).join('\n');
                            const title = titleLine.replace(/^\[\d+\]\s*/, '').trim();
                            const url = urlLine.replace(/^URL:\s*/, '').trim();
                            return {
                                title,
                                url,
                                snippet
                            };
                        });
                        // Return only the search_result part, removing the redundant text query part
                        return [
                            {
                                type: 'search_result',
                                name: 'SEARCH_RESULTS',
                                results: parsedResults,
                                query: queryItem === null || queryItem === void 0 ? void 0 : queryItem.text
                            }
                        ];
                    }
                }
                // Handle old format
                if (source && typeof source === 'object' && source.results) {
                    return [
                        {
                            type: 'search_result',
                            name: 'SEARCH_RESULTS',
                            results: source.results,
                            query: source.query
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'command':
                // Command results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    var _source_find;
                    // New multimodal format
                    const commandItem = source.find((item)=>item.name === 'COMMAND');
                    const stdoutItem = source.find((item)=>item.name === 'STDOUT');
                    const stderrItem = source.find((item)=>item.name === 'STDERR');
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: (commandItem === null || commandItem === void 0 ? void 0 : commandItem.text) || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: (stdoutItem === null || stdoutItem === void 0 ? void 0 : stdoutItem.text) || '',
                            stderr: (stderrItem === null || stderrItem === void 0 ? void 0 : stderrItem.text) || '',
                            exitCode: (_source_find = source.find((item)=>item.name === 'EXIT_CODE')) === null || _source_find === void 0 ? void 0 : _source_find.value
                        }
                    ];
                }
                // Old format
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: source.command || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: source.output || source.stdout || '',
                            stderr: source.stderr || '',
                            exitCode: source.exitCode
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'browser':
                const toolName = (title === null || title === void 0 ? void 0 : title.toLowerCase()) || '';
                // 判断是否该使用 GenericResultRenderer 处理的浏览器工具
                // 1. 检查是否为结构化数据（对象或数组）
                // 2. 识别特定的浏览器工具
                if (// 复杂的JSON对象或数组，更适合用GenericResultRenderer处理
                typeof source === 'object' && source !== null && !Array.isArray(source) && Object.keys(source).length > 2 || // 特定的浏览器工具名称判断
                toolName.includes('extract') || toolName.includes('analyze') || toolName.includes('get_metadata') || toolName.includes('json')) {
                    return [
                        {
                            type: 'json',
                            name: title || 'BROWSER_DATA',
                            data: source
                        }
                    ];
                }
                if (toolName.includes('navigate')) {
                    let textContent = '';
                    if (typeof source === 'string') {
                        textContent = source;
                    } else if (Array.isArray(source)) {
                        textContent = source.filter((p)=>p.type === 'text').map((p)=>p.text).join('\n');
                    } else if (typeof source === 'object' && source !== null) {
                        textContent = source.content || source.text || JSON.stringify(source, null, 2);
                    }
                    return [
                        {
                            type: 'text',
                            name: title,
                            text: textContent,
                            showAsRawMarkdown: true
                        }
                    ];
                }
                // Browser results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    // 处理数组格式的浏览器结果
                    const contentText = source.filter((item)=>item.type === 'text').map((item)=>item.text).join('\n');
                    return [
                        {
                            type: 'browser_result',
                            name: 'BROWSER_RESULT',
                            url: extractUrlFromContent(contentText),
                            content: contentText,
                            title: 'Browser Navigation',
                            contentType: 'text'
                        }
                    ];
                }
                // Old format or direct string content
                return [
                    {
                        type: 'browser_result',
                        name: 'BROWSER_RESULT',
                        url: typeof source === 'object' && source.url ? source.url : '',
                        content: typeof source === 'object' ? source.content || source.text || JSON.stringify(source, null, 2) : typeof source === 'string' ? source : JSON.stringify(source, null, 2),
                        contentType: 'text',
                        title: 'Browser Navigation'
                    }
                ];
            case 'file':
                // File results
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'text',
                            name: 'FILE_PATH',
                            text: `File: ${source.path || 'Unknown file'}`
                        },
                        {
                            type: 'text',
                            name: 'FILE_CONTENT',
                            text: source.content || 'No content available'
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            default:
                // Default handling for unknown types
                if (typeof source === 'object') {
                    return [
                        {
                            type: 'json',
                            name: 'JSON_DATA',
                            data: source
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
        }
    };
    // 辅助函数：从文本内容中提取URL
    const extractUrlFromContent = (content)=>{
        if (typeof content === 'string' && content.includes('Navigated to ')) {
            const lines = content.split('\n');
            const firstLine = lines[0] || '';
            return firstLine.replace('Navigated to ', '').trim();
        }
        return '';
    };
    // 辅助函数：从环境内容中提取图片URL
    const extractImageUrl = (content)=>{
        const imgPart = content.find((part)=>part && part.type === 'image_url' && part.image_url && part.image_url.url);
        return imgPart ? imgPart.image_url.url : null;
    };
    // Handle tool result content action
    const handleContentAction = (action, data)=>{
        if (action === 'zoom' && data.src) {
            // Here you could open a modal with the zoomed image
            console.log('Zoom image:', data.src);
        }
    };
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {
        initial: {
            opacity: 0
        },
        animate: {
            opacity: 1
        },
        exit: {
            opacity: 0
        },
        className: "h-full flex flex-col",
        children: [
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex items-center justify-between p-4 border-b border-gray-100/40 dark:border-gray-700/20",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "flex items-center",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "w-10 h-10 mr-3 rounded-xl flex items-center justify-center relative overflow-hidden",
                            children: [
                                ((_activePanelContent_toolCallId = activePanelContent.toolCallId) === null || _activePanelContent_toolCallId === void 0 ? void 0 : _activePanelContent_toolCallId.startsWith('final-answer')) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "absolute inset-0 bg-gradient-to-br from-accent-400 to-accent-500 opacity-20"
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 410,
                                    columnNumber: 15
                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: `absolute inset-0 opacity-20 ${(activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'search' ? 'bg-gradient-to-br from-blue-400 to-indigo-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser' ? 'bg-gradient-to-br from-purple-400 to-pink-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'command' ? 'bg-gradient-to-br from-green-400 to-emerald-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'file' ? 'bg-gradient-to-br from-yellow-400 to-amber-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'image' ? 'bg-gradient-to-br from-red-400 to-rose-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser_vision_control' ? 'bg-gradient-to-br from-cyan-400 to-teal-500' : 'bg-gradient-to-br from-gray-400 to-gray-500'}`
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 412,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "relative z-10",
                                    children: ((_activePanelContent_toolCallId1 = activePanelContent.toolCallId) === null || _activePanelContent_toolCallId1 === void 0 ? void 0 : _activePanelContent_toolCallId1.startsWith('final-answer')) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiBookOpen, {
                                        className: "text-accent-600 dark:text-accent-400",
                                        size: 20
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                        lineNumber: 432,
                                        columnNumber: 17
                                    }, undefined) : getToolIcon((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) || 'other')
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 430,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                            lineNumber: 407,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("h2", {
                                    className: "font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight",
                                    children: activePanelContent.title
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 440,
                                    columnNumber: 13
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "text-xs text-gray-500 dark:text-gray-400",
                                    children: (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_4__.formatTimestamp)(activePanelContent.timestamp)
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 443,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                            lineNumber: 439,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                    lineNumber: 406,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                lineNumber: 405,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex-1 overflow-auto bg-gray-50/50 dark:bg-gray-900/30 p-6",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__.ToolResultRenderer, {
                    content: getStandardizedContent(),
                    onAction: handleContentAction
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                    lineNumber: 452,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                lineNumber: 451,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
        lineNumber: 398,
        columnNumber: 5
    }, undefined);
};
_s(WorkspaceDetail, "FnODKEDpPzVTjxZTg5pezU0youY=", false, function() {
    return [
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession,
        _hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool
    ];
});
_c = WorkspaceDetail;
var _c;
$RefreshReg$(_c, "WorkspaceDetail");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/v2/components/Workspace/renderers/GenericResultRenderer.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  GenericResultRenderer: () => (GenericResultRenderer)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");




/**
 * GenericResultRenderer - 智能分析并渲染任意格式的工具结果
 *
 * 特点:
 * - 自动识别常见的状态模式（成功/失败/信息）
 * - 提取并突出显示关键信息
 * - 优雅处理各种数据结构
 * - 美观一致的卡片式布局
 */ const GenericResultRenderer = (param)=>{
    let { part } = param;
    const content = part.text || part.data || {};
    // 尝试将字符串内容解析为JSON
    let parsedContent = content;
    if (typeof content === 'string') {
        try {
            parsedContent = JSON.parse(content);
        } catch (e) {
            // 不是有效的JSON，保持字符串格式
            parsedContent = content;
        }
    }
    // 智能检测结果类型
    const resultInfo = analyzeResult(parsedContent);
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_2__.motion.div, {
        initial: {
            opacity: 0,
            y: 10
        },
        animate: {
            opacity: 1,
            y: 0
        },
        transition: {
            duration: 0.3
        },
        className: "flex items-center justify-center p-4",
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden max-w-xl w-full",
            children: [
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: `py-4 px-5 flex items-center justify-between border-b ${getHeaderClasses(resultInfo.type)}`,
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "flex items-center",
                            children: [
                                getStatusIcon(resultInfo.type),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                                    className: "font-medium ml-2",
                                    children: part.name || resultInfo.title
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                    lineNumber: 51,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                            lineNumber: 49,
                            columnNumber: 11
                        }, undefined),
                        resultInfo.url && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "text-xs flex items-center text-gray-500 dark:text-gray-400",
                            children: [
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_3__.FiGlobe, {
                                    size: 12,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                    lineNumber: 57,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                                    className: "max-w-[200px] truncate",
                                    children: resultInfo.url
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                    lineNumber: 58,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                            lineNumber: 56,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                    lineNumber: 46,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "p-5",
                    children: [
                        resultInfo.message && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "text-gray-700 dark:text-gray-300 mb-4",
                            children: resultInfo.message
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                            lineNumber: 67,
                            columnNumber: 13
                        }, undefined),
                        resultInfo.details && Object.keys(resultInfo.details).length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "mt-3 pt-3 border-t border-gray-100 dark:border-gray-700/30",
                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "grid gap-2",
                                children: Object.entries(resultInfo.details).map((param)=>{
                                    let [key, value] = param;
                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "flex items-start",
                                        children: [
                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                                className: "text-xs font-medium text-gray-500 dark:text-gray-400 w-24 flex-shrink-0",
                                                children: [
                                                    formatKey(key),
                                                    ":"
                                                ]
                                            }, void 0, true, {
                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                                lineNumber: 76,
                                                columnNumber: 21
                                            }, undefined),
                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                                className: "text-sm text-gray-700 dark:text-gray-300",
                                                children: formatValue(value)
                                            }, void 0, false, {
                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                                lineNumber: 79,
                                                columnNumber: 21
                                            }, undefined)
                                        ]
                                    }, key, true, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                        lineNumber: 75,
                                        columnNumber: 19
                                    }, undefined);
                                })
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                                lineNumber: 73,
                                columnNumber: 15
                            }, undefined)
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                            lineNumber: 72,
                            columnNumber: 13
                        }, undefined),
                        !resultInfo.message && (!resultInfo.details || Object.keys(resultInfo.details).length === 0) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "text-center text-gray-500 dark:text-gray-400 py-2",
                            children: resultInfo.type === 'empty' ? 'No content available' : 'Operation completed'
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                            lineNumber: 91,
                            columnNumber: 15
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                    lineNumber: 64,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
            lineNumber: 44,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
        lineNumber: 38,
        columnNumber: 5
    }, undefined);
};
_c = GenericResultRenderer;
/**
 * 分析工具结果并提取关键信息
 */ function analyzeResult(content) {
    // 默认值
    const result = {
        type: 'info',
        title: 'Operation Result',
        message: null,
        details: {}
    };
    // 处理空内容
    if (!content || typeof content === 'object' && Object.keys(content).length === 0) {
        return {
            ...result,
            type: 'empty',
            title: 'Empty Result'
        };
    }
    // 处理字符串内容
    if (typeof content === 'string') {
        return {
            ...result,
            message: content
        };
    }
    // 处理对象内容
    if (typeof content === 'object') {
        // 检测状态字段
        if ('status' in content) {
            const status = String(content.status).toLowerCase();
            if (status === 'success' || status === 'ok' || status === 'completed') {
                result.type = 'success';
                result.title = 'Success';
            } else if (status === 'error' || status === 'fail' || status === 'failed') {
                result.type = 'error';
                result.title = 'Error';
            }
        }
        // 检测消息字段
        if ('message' in content) {
            result.message = String(content.message);
        } else if ('error' in content) {
            result.message = String(content.error);
            result.type = 'error';
            result.title = 'Error';
        } else if ('msg' in content) {
            result.message = String(content.msg);
        } else if ('content' in content && typeof content.content === 'string') {
            result.message = content.content;
        }
        // 提取标题
        if ('title' in content && typeof content.title === 'string' && content.title.trim()) {
            result.title = content.title;
        } else if (result.message && result.message.length < 50) {
            // 如果消息很短，可以用作标题
            result.title = result.message;
            result.message = null;
        }
        // 特别处理URL (用于浏览器工具结果)
        let url = undefined;
        if ('url' in content && typeof content.url === 'string') {
            url = content.url;
        }
        // 收集其他重要字段作为详情
        for (const [key, value] of Object.entries(content)){
            // 跳过已处理的字段
            if ([
                'status',
                'message',
                'error',
                'msg',
                'title',
                'url'
            ].includes(key)) continue;
            // 特殊处理分页信息
            if (key === 'pagination' && typeof value === 'object') {
                for (const [pKey, pValue] of Object.entries(value)){
                    result.details[`pagination.${pKey}`] = pValue;
                }
                continue;
            }
            // 优先展示这些重要字段
            const importantFields = [
                'name',
                'description',
                'type',
                'value',
                'data'
            ];
            if (importantFields.includes(key)) {
                result.details = {
                    [key]: value,
                    ...result.details
                };
            } else {
                // 添加到详情中
                result.details[key] = value;
            }
        }
        return {
            ...result,
            url
        };
    }
    return result;
}
/**
 * 获取状态图标
 */ function getStatusIcon(type) {
    switch(type){
        case 'success':
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_3__.FiCheck, {
                className: "text-green-500 dark:text-green-400",
                size: 18
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 206,
                columnNumber: 14
            }, this);
        case 'error':
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_3__.FiX, {
                className: "text-red-500 dark:text-red-400",
                size: 18
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 208,
                columnNumber: 14
            }, this);
        case 'empty':
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_3__.FiInfo, {
                className: "text-gray-400 dark:text-gray-500",
                size: 18
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 210,
                columnNumber: 14
            }, this);
        case 'info':
        default:
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_3__.FiInfo, {
                className: "text-blue-500 dark:text-blue-400",
                size: 18
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 213,
                columnNumber: 14
            }, this);
    }
}
/**
 * 获取头部样式类
 */ function getHeaderClasses(type) {
    switch(type){
        case 'success':
            return 'border-green-100/50 dark:border-green-800/30 bg-green-50/50 dark:bg-green-900/20';
        case 'error':
            return 'border-red-100/50 dark:border-red-800/30 bg-red-50/50 dark:bg-red-900/20';
        case 'empty':
            return 'border-gray-100/50 dark:border-gray-700/30 bg-gray-50/50 dark:bg-gray-800/50';
        case 'info':
        default:
            return 'border-blue-100/50 dark:border-blue-800/30 bg-blue-50/50 dark:bg-blue-900/20';
    }
}
/**
 * 格式化键名
 */ function formatKey(key) {
    return key.replace(/([A-Z])/g, ' $1') // 在大写字母前插入空格
    .replace(/^./, (str)=>str.toUpperCase()) // 首字母大写
    .replace(/[._]/g, ' '); // 将下划线和点替换为空格
}
/**
 * 格式化值显示
 */ function formatValue(value) {
    if (value === null || value === undefined) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
            className: "text-gray-400 dark:text-gray-500 italic",
            children: "None"
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
            lineNumber: 249,
            columnNumber: 12
        }, this);
    }
    if (typeof value === 'boolean') {
        return value ? 'Yes' : 'No';
    }
    if (Array.isArray(value)) {
        if (value.length === 0) {
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                className: "text-gray-400 dark:text-gray-500 italic",
                children: "Empty array"
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 258,
                columnNumber: 14
            }, this);
        }
        if (value.length <= 3 && value.every((item)=>typeof item === 'string' || typeof item === 'number')) {
            return value.join(', ');
        }
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("pre", {
            className: "text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded",
            children: JSON.stringify(value, null, 2)
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
            lineNumber: 266,
            columnNumber: 7
        }, this);
    }
    if (typeof value === 'object') {
        try {
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("pre", {
                className: "text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded",
                children: JSON.stringify(value, null, 2)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
                lineNumber: 275,
                columnNumber: 9
            }, this);
        } catch (e) {
            return String(value);
        }
    }
    // 检测URL并使其可点击
    if (typeof value === 'string' && (value.startsWith('http://') || value.startsWith('https://'))) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("a", {
            href: value,
            target: "_blank",
            rel: "noopener noreferrer",
            className: "text-accent-600 dark:text-accent-400 hover:underline",
            children: value
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/GenericResultRenderer.tsx",
            lineNumber: 287,
            columnNumber: 7
        }, this);
    }
    return String(value);
}
var _c;
$RefreshReg$(_c, "GenericResultRenderer");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("b7d5b07305eb3ea8")
})();

}
);
//# sourceMappingURL=index.08f3dcf8156f3d2f.hot-update.js.map