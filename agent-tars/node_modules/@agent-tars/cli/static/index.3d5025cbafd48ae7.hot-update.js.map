{"version":3,"file":"index.3d5025cbafd48ae7.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/SearchResultRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1750063755677\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiBookOpen, FiX, FiArrowLeft } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useTool } from '@/common/hooks/useTool';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { ToolResultRenderer } from './renderers/ToolResultRenderer';\nimport { ResearchReportRenderer } from './renderers/ResearchReportRenderer';\nimport { ToolResultContentPart } from './types';\nimport {\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n} from '@multimodal/agent-interface';\n\n/**\n * WorkspaceDetail Component - Displays details of a single tool result or report\n */\nexport const WorkspaceDetail: React.FC = () => {\n  const { activePanelContent, setActivePanelContent } = useSession();\n  const { getToolIcon } = useTool();\n  const [zoomedImage, setZoomedImage] = useState<{ src: string; alt?: string } | null>(null);\n\n  if (!activePanelContent) {\n    return null;\n  }\n\n  if (\n    activePanelContent?.type === 'research_report' ||\n    activePanelContent?.type === 'deliverable' ||\n    (activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer'))\n  ) {\n    return (\n      <ResearchReportRenderer\n        content={\n          typeof activePanelContent.source === 'string'\n            ? activePanelContent.source\n            : JSON.stringify(activePanelContent.source, null, 2)\n        }\n        title={activePanelContent.title || 'Research Report'}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // Convert legacy format content to standardized tool result parts\n  const getStandardizedContent = (): ToolResultContentPart[] => {\n    const { type, source, title, error, arguments: toolArguments } = activePanelContent;\n\n    // Show error if present\n    if (error) {\n      return [\n        {\n          type: 'text',\n          name: 'ERROR',\n          text: error,\n        },\n      ];\n    }\n\n    // Handle read_file and write_file tools specifically\n    if ((type === 'file' || type === 'read_file' || type === 'write_file') && toolArguments?.path) {\n      // Handle case where content is an array of content parts (modern format)\n      if (Array.isArray(source)) {\n        const textContent = source.find((part) => part.type === 'text');\n        if (textContent && textContent.text) {\n          return [\n            {\n              type: 'file_result',\n              name: 'FILE_RESULT',\n              path: toolArguments.path,\n              content: textContent.text,\n            },\n          ];\n        }\n      }\n\n      // Handle case where content is directly in source or toolArguments\n      const content = toolArguments.content || (typeof source === 'string' ? source : null);\n      if (content) {\n        return [\n          {\n            type: 'file_result',\n            name: 'FILE_RESULT',\n            path: toolArguments.path,\n\n            content: content,\n          },\n        ];\n      }\n    }\n\n    // Handle browser_vision_control type specifically\n    if (type === 'browser_vision_control') {\n      // 如果这是环境增强，包含原始截图数据\n      const environmentImage = Array.isArray(activePanelContent.originalContent)\n        ? extractImageUrl(activePanelContent.originalContent)\n        : null;\n\n      // Create browser_control part for the specialized renderer\n      return [\n        {\n          type: 'browser_control',\n          name: 'BROWSER_CONTROL',\n          toolCallId: activePanelContent.toolCallId,\n          thought: toolArguments?.thought || '',\n          step: toolArguments?.step || '',\n          action: toolArguments?.action || '',\n          status: source?.status || 'unknown',\n          environmentImage: environmentImage, // 传递环境图像\n        },\n      ];\n    }\n\n    // Handle array of content parts from environment_input\n    if (Array.isArray(source) && source.some((part) => part.type === 'image_url')) {\n      const imagePart = source.find((part) => part.type === 'image_url');\n      if (imagePart && imagePart.image_url && imagePart.image_url.url) {\n        const imgSrc = imagePart.image_url.url;\n        if (imgSrc.startsWith('data:image/')) {\n          const [mimeTypePrefix, base64Data] = imgSrc.split(',');\n          const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];\n          return [\n            {\n              type: 'image',\n              imageData: base64Data,\n              mimeType,\n              name: activePanelContent.title,\n            },\n          ];\n        }\n      }\n    }\n\n    // Based on tool type, convert to standardized format\n    switch (type) {\n      case 'image':\n        // Image content\n        if (typeof source === 'string' && source.startsWith('data:image/')) {\n          const [mimeTypePrefix, base64Data] = source.split(',');\n          const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];\n\n          return [\n            {\n              type: 'image',\n              imageData: base64Data,\n              mimeType,\n              name: activePanelContent.title,\n            },\n          ];\n        }\n        return [\n          {\n            type: 'text',\n            text: 'Image could not be displayed',\n          },\n        ];\n\n      case 'search':\n        // Search results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // Handle new multimodal format\n          const resultsItem = source.find((item) => item.name === 'RESULTS');\n          const queryItem = source.find((item) => item.name === 'QUERY');\n\n          if (resultsItem && resultsItem.text) {\n            // Parse results text into separate result items\n            const resultBlocks = resultsItem.text.split('---').filter(Boolean);\n            const parsedResults = resultBlocks.map((block) => {\n              const lines = block.trim().split('\\n');\n              const titleLine = lines[0] || '';\n              const urlLine = lines[1] || '';\n              const snippet = lines.slice(2).join('\\n');\n\n              const title = titleLine.replace(/^\\[\\d+\\]\\s*/, '').trim();\n              const url = urlLine.replace(/^URL:\\s*/, '').trim();\n\n              return { title, url, snippet };\n            });\n\n            // Return only the search_result part, removing the redundant text query part\n            return [\n              {\n                type: 'search_result',\n                name: 'SEARCH_RESULTS',\n                results: parsedResults,\n                query: queryItem?.text,\n              },\n            ];\n          }\n        }\n\n        // Handle old format\n        if (source && typeof source === 'object' && source.results) {\n          return [\n            {\n              type: 'search_result',\n              name: 'SEARCH_RESULTS',\n              results: source.results,\n              query: source.query,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'command':\n        // Command results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // New multimodal format\n          const commandItem = source.find((item) => item.name === 'COMMAND');\n          const stdoutItem = source.find((item) => item.name === 'STDOUT');\n          const stderrItem = source.find((item) => item.name === 'STDERR');\n\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: commandItem?.text || toolArguments?.command,\n              stdout: stdoutItem?.text || '',\n              stderr: stderrItem?.text || '',\n              exitCode: source.find((item) => item.name === 'EXIT_CODE')?.value,\n            },\n          ];\n        }\n\n        // Old format\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: source.command || toolArguments?.command,\n              stdout: source.output || source.stdout || '',\n              stderr: source.stderr || '',\n              exitCode: source.exitCode,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'browser':\n        return [\n          {\n            type: 'json',\n            name: title || 'BROWSER_DATA',\n            data: source,\n          },\n        ];\n\n      case 'file':\n\n      case 'read_file':\n      case 'write_file':\n        // Handle file operations in a more generic way\n        if (Array.isArray(source)) {\n          // Modern format with content parts array\n          const textContent = source.find((part) => part.type === 'text');\n          if (textContent && textContent.text) {\n            return [\n              {\n                type: 'file_result',\n                name: 'FILE_RESULT',\n                path: toolArguments?.path || 'Unknown file',\n                content: textContent.text,\n              },\n            ];\n          }\n        }\n\n        // Legacy format where source is an object\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'file_result',\n              name: 'FILE_RESULT',\n              path: source.path || toolArguments?.path || 'Unknown file',\n              content: source.content || 'No content available',\n            },\n          ];\n        }\n\n        // Handle case where source might be a direct string content\n        if (typeof source === 'string') {\n          return [\n            {\n              type: 'file_result',\n              name: 'FILE_RESULT',\n              path: toolArguments?.path || 'Unknown file',\n              content: source,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      default:\n        // Default handling for unknown types\n        if (typeof source === 'object') {\n          return [\n            {\n              type: 'json',\n              name: 'JSON_DATA',\n              data: source,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n    }\n  };\n\n  // 辅助函数：从环境内容中提取图片URL\n  const extractImageUrl = (content: ChatCompletionContentPart[]): string | null => {\n    const imgPart = content.find(\n      (part) => part && part.type === 'image_url' && part.image_url && part.image_url.url,\n    );\n    return imgPart ? (imgPart as ChatCompletionContentPartImage).image_url.url : null;\n  };\n\n  // Handle tool result content action\n  const handleContentAction = (action: string, data: any) => {\n    if (action === 'zoom' && data.src) {\n      // Show zoomed image in modal\n      setZoomedImage({ src: data.src, alt: data.alt });\n    }\n  };\n\n  // Handle back navigation\n  const handleBack = () => {\n    setActivePanelContent(null);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\"\n    >\n      {/* Header with tool info */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleBack}\n            className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={18} />\n          </motion.button>\n\n          <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden relative\">\n            {/* 使用特殊图标替代 final_answer 工具图标 */}\n            {activePanelContent.toolCallId?.startsWith('final-answer') ? (\n              <>\n                <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20\"></div>\n                <div className=\"relative z-10\">\n                  <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={20} />\n                </div>\n              </>\n            ) : (\n              <>\n                <div\n                  className={`absolute inset-0 ${\n                    activePanelContent?.type === 'search'\n                      ? 'bg-gradient-to-br from-blue-400/20 to-indigo-500/10 dark:from-blue-600/30 dark:to-indigo-500/20'\n                      : activePanelContent?.type === 'browser'\n                        ? 'bg-gradient-to-br from-purple-400/20 to-pink-500/10 dark:from-purple-600/30 dark:to-pink-500/20'\n                        : activePanelContent?.type === 'command'\n                          ? 'bg-gradient-to-br from-green-400/20 to-emerald-500/10 dark:from-green-600/30 dark:to-emerald-500/20'\n                          : activePanelContent?.type === 'file'\n                            ? 'bg-gradient-to-br from-yellow-400/20 to-amber-500/10 dark:from-yellow-600/30 dark:to-amber-500/20'\n                            : activePanelContent?.type === 'image'\n                              ? 'bg-gradient-to-br from-red-400/20 to-rose-500/10 dark:from-red-600/30 dark:to-rose-500/20'\n                              : activePanelContent?.type === 'browser_vision_control'\n                                ? 'bg-gradient-to-br from-cyan-400/20 to-teal-500/10 dark:from-cyan-600/30 dark:to-teal-500/20'\n                                : 'bg-gradient-to-br from-gray-400/20 to-gray-500/10 dark:from-gray-500/30 dark:to-gray-600/20'\n                  }`}\n                ></div>\n                <div className=\"relative z-10\">\n                  {getToolIcon(activePanelContent?.type || 'other')}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {activePanelContent.title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {formatTimestamp(activePanelContent.timestamp)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"flex-1 overflow-auto p-6\">\n        <ToolResultRenderer content={getStandardizedContent()} onAction={handleContentAction} />\n      </div>\n\n      {/* Image Zoom Modal */}\n      <AnimatePresence>\n        {zoomedImage && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 p-4 backdrop-blur-sm\"\n            onClick={() => setZoomedImage(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n              className=\"relative max-w-[95vw] max-h-[95vh]\"\n            >\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setZoomedImage(null);\n                }}\n                className=\"absolute -top-2 -right-2 p-2 rounded-full bg-gray-900/90 text-white hover:bg-gray-800 shadow-lg\"\n                aria-label=\"Close\"\n              >\n                <FiX size={24} />\n              </button>\n              <img\n                src={zoomedImage.src}\n                alt={zoomedImage.alt || 'Zoomed image'}\n                className=\"max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl\"\n              />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink, FiSearch, FiInfo, FiGlobe } from 'react-icons/fi';\n\ninterface SearchResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders search results with refined visual design\n * \n * Design improvements:\n * - Clean, minimalist card layout with subtle animations\n * - Consistent typography with proper hierarchy\n * - Refined spacing and subtle borders\n * - Simplified URL display\n * - Elegant interaction feedback\n */\nexport const SearchResultRenderer: React.FC<SearchResultRendererProps> = ({ part }) => {\n  const { results, query } = part;\n\n  if (!results || !Array.isArray(results)) {\n    return <div className=\"text-gray-500 italic\">Search results missing</div>;\n  }\n\n  return (\n    <div className=\"space-y-5\">\n      {/* Search query section with minimal styling */}\n      {query && (\n        <div className=\"mb-5\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-10 h-10 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/50 flex items-center justify-center mr-4 text-gray-600 dark:text-gray-400\">\n              <FiSearch size={20} />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-medium text-gray-800 dark:text-gray-200\">Search Results</h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">{results.length} results found for your query</p>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl px-4 py-3 text-sm text-gray-800 dark:text-gray-200 border border-gray-200/70 dark:border-gray-700/50\">\n            <div className=\"flex items-center\">\n              <FiSearch className=\"text-gray-500 dark:text-gray-400 mr-2\" size={14} />\n              <span>{query}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No results state with simplified design */}\n      {results.length === 0 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-5 text-center border border-gray-200/70 dark:border-gray-700/50\">\n          <div className=\"w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center mx-auto mb-3\">\n            <FiInfo className=\"text-gray-400\" size={24} />\n          </div>\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">No search results found</h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 max-w-md mx-auto\">\n            Try using different search terms or broaden your query.\n          </p>\n        </div>\n      )}\n\n      {/* Results list with refined card design */}\n      <div className=\"space-y-4\">\n        {results.map((result, index) => (\n          <motion.div \n            key={index} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: index * 0.05 }}\n            whileHover={{ y: -2 }} \n            className=\"group\"\n          >\n            {/* Simplified result card with minimal styling */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-gray-700/50 overflow-hidden transition-all duration-200 hover:border-gray-300/70 dark:hover:border-gray-600/50\">\n              <div className=\"p-4\">\n                {/* Title and link with improved layout */}\n                <div className=\"flex items-start\">\n                  <div className=\"min-w-0 flex-1\">\n                    {/* Title with subtle external link icon */}\n                    <a\n                      href={result.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"group/link\"\n                    >\n                      <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors\">\n                        <span className=\"mr-2\">{index + 1}. {result.title}</span>\n                        <FiExternalLink\n                          className=\"text-gray-400 dark:text-gray-500 opacity-0 group-hover/link:opacity-100 transition-opacity duration-200\"\n                          size={14}\n                        />\n                      </h3>\n                    </a>\n\n                    {/* URL with simplified display */}\n                    <div className=\"mb-3\">\n                      <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                        <FiGlobe size={12} className=\"mr-1.5\" />\n                        <span className=\"truncate\">{result.url}</span>\n                      </div>\n                    </div>\n\n                    {/* Snippet with clean typography */}\n                    <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-300 leading-relaxed\">\n                      {result.snippet}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;;AAEA;AAuWA;;AArWA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAEA;AAKA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAaA;AAZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AAEA;;AAEA;AAAA;;;;;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AAIA;;AACA;AACA;;;;;;AAgBA;AAAA;AACA;;;;;;;;;;;;;AAMA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AA7bA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AAOA;;;;;;;;;AASA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;AAEA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAOA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvCA;;;;;;;;;;;;;;;;AAkDA;AAlGA"}