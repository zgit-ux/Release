{"version":3,"file":"index.87c577b38f78e780.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749661062705\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { ToolResultContentPart } from '../../../types';\nimport { MarkdownRenderer } from '@/sdk/Markdown';\nimport { BrowserShell } from './BrowserShell';\n\ninterface TextRendererProps {\n  part: ToolResultContentPart & { showAsRawMarkdown?: boolean };\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders text content with Markdown support\n *\n * Improvements:\n * - Support for displaying raw markdown content\n * - Uses browser shell for browser-related content\n * - Better syntax highlighting for code blocks\n */\nexport const TextRenderer: React.FC<TextRendererProps> = ({ part, onAction }) => {\n  if (!part.text) {\n    return <div className=\"text-gray-500 italic\">Empty text content</div>;\n  }\n\n  // Determine if content is browser-related\n  const isBrowserContent = part.name?.toLowerCase().includes('browser') || false;\n\n  // Check if this is a browser_get_markdown result that should display raw markdown\n  const isMarkdownResult =\n    part.showAsRawMarkdown ||\n    part.name?.toLowerCase().includes('markdown') ||\n    part.name?.toLowerCase().includes('browser_get_markdown');\n\n  // if (part.name?.toLowerCase().includes('browser_navigate')) {\n  //   return <BrowserShell title={part.name || 'Browser Content'}>{part.text}</BrowserShell>;\n  // }\n\n  // Handle \"other\" type events - wrap in code block if needed\n  const isOtherType = part.name === 'other' || part.type === 'other';\n  if (isOtherType || isMarkdownResult) {\n    // Wrap in markdown code block to preserve formatting\n    const content = `\\`\\`\\`md\\n${part.text}\\n\\`\\`\\``;\n    return (\n      <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n        <MarkdownRenderer content={content} />\n      </div>\n    );\n  }\n\n  // Determine if content contains markdown syntax\n  const hasMarkdown = /[*#\\[\\]_`~]/.test(part.text);\n\n  // Render browser content in a browser shell\n  if (isBrowserContent) {\n    return (\n      <BrowserShell title={part.name || 'Browser Content'}>\n        <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n          <MarkdownRenderer content={part.text} />\n        </div>\n      </BrowserShell>\n    );\n  }\n\n  // Render standard content\n  return (\n    <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n      {hasMarkdown ? (\n        <MarkdownRenderer content={part.text} />\n      ) : (\n        <div className=\"whitespace-pre-wrap\">{part.text}</div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AAOA;;;;;;;AAOA;AACA;AAMA;AALA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;AAIA;AAtDA"}