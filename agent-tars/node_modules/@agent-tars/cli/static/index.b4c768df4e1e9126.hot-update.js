"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1748909856065
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/v2/components/Sidebar/BrowserControlToolbar.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  BrowserControlToolbar: () => (BrowserControlToolbar)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var _v2_services_apiService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/services/apiService.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();





/**
 * BrowserControlToolbar - Displays browser control information in the toolbar
 *
 * Design principles:
 * - Compact visualization of complex browser control data
 * - Unobtrusive presentation that adapts to the vertical toolbar
 * - Provides essential information at a glance
 * - Uses color coding to indicate different control modes
 */ const BrowserControlToolbar = ()=>{
    _s();
    const [browserMode, setBrowserMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');
    const [toolCount, setToolCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);
    const { activeSessionId, connectionStatus } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    // Fetch browser control info when active session changes
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (activeSessionId && connectionStatus.connected) {
            _v2_services_apiService__WEBPACK_IMPORTED_MODULE_3__.apiService.getBrowserControlInfo(activeSessionId).then((info)=>{
                setBrowserMode(info.mode);
                setToolCount(info.tools.length);
            }).catch((error)=>{
                console.error('Failed to get browser control info:', error);
            });
        }
    }, [
        activeSessionId,
        connectionStatus.connected
    ]);
    // Don't render if no active browser tools
    if (!toolCount) return null;
    // Get appropriate icon and color based on mode
    const getModeDetails = ()=>{
        switch(browserMode){
            case 'default':
                return {
                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiCpu, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
                        lineNumber: 44,
                        columnNumber: 17
                    }, undefined),
                    color: 'text-purple-500 dark:text-purple-400',
                    bgColor: 'bg-purple-100 dark:bg-purple-900/20',
                    borderColor: 'border-purple-200/40 dark:border-purple-800/30',
                    title: 'Hybrid Browser Control'
                };
            case 'browser-use-only':
                return {
                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiCode, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
                        lineNumber: 52,
                        columnNumber: 17
                    }, undefined),
                    color: 'text-blue-500 dark:text-blue-400',
                    bgColor: 'bg-blue-100 dark:bg-blue-900/20',
                    borderColor: 'border-blue-200/40 dark:border-blue-800/30',
                    title: 'DOM-based Browser Control'
                };
            case 'gui-agent-only':
                return {
                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiEye, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
                        lineNumber: 60,
                        columnNumber: 17
                    }, undefined),
                    color: 'text-green-500 dark:text-green-400',
                    bgColor: 'bg-green-100 dark:bg-green-900/20',
                    borderColor: 'border-green-200/40 dark:border-green-800/30',
                    title: 'Vision-based Browser Control'
                };
            default:
                return {
                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiMonitor, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
                        lineNumber: 68,
                        columnNumber: 17
                    }, undefined),
                    color: 'text-gray-500 dark:text-gray-400',
                    bgColor: 'bg-gray-100 dark:bg-gray-700/40',
                    borderColor: 'border-gray-200/40 dark:border-gray-700/30',
                    title: 'Browser Control'
                };
        }
    };
    const { icon, color, bgColor, borderColor, title } = getModeDetails();
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_5__.motion.div, {
        initial: {
            opacity: 0
        },
        animate: {
            opacity: 1
        },
        whileHover: {
            scale: 1.05
        },
        className: "mx-auto mb-4",
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: `w-10 h-10 rounded-xl flex items-center justify-center ${bgColor} ${color} border ${borderColor}`,
            title: `${title} (${toolCount} tools)`,
            children: icon
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
            lineNumber: 86,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Sidebar/BrowserControlToolbar.tsx",
        lineNumber: 80,
        columnNumber: 5
    }, undefined);
};
_s(BrowserControlToolbar, "ImTMTi01fI6bFujnn7V1CRQJ4DY=", false, function() {
    return [
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession
    ];
});
_c = BrowserControlToolbar;
var _c;
$RefreshReg$(_c, "BrowserControlToolbar");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("d81836e93bea9cb6")
})();

}
);
//# sourceMappingURL=index.b4c768df4e1e9126.hot-update.js.map