{"version":3,"file":"index.e7d700df454f0b79.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/state/actions/modelInfoAction.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749334969895\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import { atom } from 'jotai';\nimport { apiService } from '../../services/apiService';\nimport { modelInfoAtom } from '../atoms/ui';\n\n/**\n * Action to fetch and update model information\n */\nexport const fetchModelInfoAction = atom(null, async (get, set) => {\n  try {\n    const info = await apiService.getModelInfo();\n    set(modelInfoAtom, info);\n    return info;\n  } catch (error) {\n    console.error('Failed to fetch model info:', error);\n    return { provider: 'Unknown', model: 'Unknown' };\n  }\n});\n\n/**\n * Action to directly set model information (used in replay mode)\n */\nexport const setModelInfoAction = atom(\n  null,\n  (get, set, modelInfo: { provider: string; model: string }) => {\n    set(modelInfoAtom, modelInfo);\n  },\n);\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AAEA;AAIA;AACA"}