"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749544019425
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/v2/components/Workspace/renderers/TextRenderer.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  TextRenderer: () => (TextRenderer)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var _Markdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/components/Markdown/index.tsx");
/* ESM import */var _BrowserShell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/components/Workspace/renderers/BrowserShell.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");




/**
 * Renders text content with Markdown support
 *
 * Improvements:
 * - Support for displaying raw markdown content
 * - Uses browser shell for browser-related content
 * - Better syntax highlighting for code blocks
 */ const TextRenderer = (param)=>{
    let { part, onAction } = param;
    var _part_name, _part_name1, _part_name2;
    if (!part.text) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "text-gray-500 italic",
            children: "Empty text content"
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
            lineNumber: 21,
            columnNumber: 12
        }, undefined);
    }
    // Determine if content is browser-related
    const isBrowserContent = ((_part_name = part.name) === null || _part_name === void 0 ? void 0 : _part_name.toLowerCase().includes('browser')) || false;
    // Check if this is a browser_get_markdown result that should display raw markdown
    const isMarkdownResult = part.showAsRawMarkdown || ((_part_name1 = part.name) === null || _part_name1 === void 0 ? void 0 : _part_name1.toLowerCase().includes('markdown')) || ((_part_name2 = part.name) === null || _part_name2 === void 0 ? void 0 : _part_name2.toLowerCase().includes('browser_get_markdown'));
    // if (part.name?.toLowerCase().includes('browser_navigate')) {
    //   return <BrowserShell title={part.name || 'Browser Content'}>{part.text}</BrowserShell>;
    // }
    debugger;
    // Handle "other" type events - wrap in code block if needed
    const isOtherType = part.name === 'other' || part.type === 'other';
    if (isOtherType || isMarkdownResult) {
        // Wrap in markdown code block to preserve formatting
        const content = `\`\`\`md\n${part.text}\n\`\`\``;
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "prose dark:prose-invert prose-sm max-w-none",
            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Markdown__WEBPACK_IMPORTED_MODULE_2__.MarkdownRenderer, {
                content: content
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
                lineNumber: 46,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
            lineNumber: 45,
            columnNumber: 7
        }, undefined);
    }
    // Determine if content contains markdown syntax
    const hasMarkdown = /[*#\[\]_`~]/.test(part.text);
    // Render browser content in a browser shell
    if (isBrowserContent) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BrowserShell__WEBPACK_IMPORTED_MODULE_3__.BrowserShell, {
            title: part.name || 'Browser Content',
            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "prose dark:prose-invert prose-sm max-w-none",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Markdown__WEBPACK_IMPORTED_MODULE_2__.MarkdownRenderer, {
                    content: part.text
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
                    lineNumber: 59,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
                lineNumber: 58,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
            lineNumber: 57,
            columnNumber: 7
        }, undefined);
    }
    // Render standard content
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        className: "prose dark:prose-invert prose-sm max-w-none",
        children: hasMarkdown ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Markdown__WEBPACK_IMPORTED_MODULE_2__.MarkdownRenderer, {
            content: part.text
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
            lineNumber: 69,
            columnNumber: 9
        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "whitespace-pre-wrap",
            children: part.text
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
            lineNumber: 71,
            columnNumber: 9
        }, undefined)
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx",
        lineNumber: 67,
        columnNumber: 5
    }, undefined);
};
_c = TextRenderer;
var _c;
$RefreshReg$(_c, "TextRenderer");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("50b6baa2dc963abb")
})();

}
);
//# sourceMappingURL=index.01f8817eab31ef34.hot-update.js.map