{"version":3,"file":"static/js/index.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/code-editor/CodeEditor.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/markdown.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/syntax-highlight.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/Layout/Layout.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/ChatPanel.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/Message.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/MessageInput.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/Navbar.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/Workspace.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/constants/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/constants/toolTypes.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/useLayout.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/usePlan.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/useReplay.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/useReplayMode.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/useSession.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/hooks/useTool.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/services/apiService.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/services/socketService.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/actions/connectionActions.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/actions/eventProcessor.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/actions/sessionActions.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/message.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/plan.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/replay.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/session.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/tool.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/state/atoms/ui.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/utils/formatters.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/utils/markdown.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/common/utils/typeGuards.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/code-editor/CodeEditor.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/code-editor/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/dialog/ConfirmDialog.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/dialog/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/MarkdownRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/CodeBlock.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/Headings.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/Image.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/ImageModal.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/Links.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/Table.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/TextElements.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/components/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/hooks/useMarkdownComponents.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/sdk/markdown-renderer/utils/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/App.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/Layout/Shell.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/Layout/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/Router/SessionRouter.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/app/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/ChatPanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/ImagePreview.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ActionButton.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/MessageGroup.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/MessageTimestamp.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/MultimodalContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ReportFileEntry.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/SystemMessage.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ThinkingToggle.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ToggleButton.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/components/ToolCalls.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/hooks/useCopyToClipboard.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/Message/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/MessageInput.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/chat/ResearchReportEntry.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/home/HomePage.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/home/WelcomePage.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/Navbar.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/navbar/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/replay/ReplayControls.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/replay/TimelineSlider.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/ShareButton.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/ShareModal.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/share/shareService.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ChatSession.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/HighlightText.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/SessionItem.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/SessionSearch.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/SidebarContainer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/PlanView.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspaceDetail.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/WorkspacePanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/components/FullscreenModal.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/components/ImageModal.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/components/WorkspaceHeader.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserControlRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/BrowserShell.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/CommandResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/DeliverableRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ImageRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/LinkRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/PlanViewerRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ResearchReportRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ScriptResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/SearchResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/ToolResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/GenericResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/FileResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/ImageContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/JsonContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/MessageContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/OperationHeader.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/StatusIndicator.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/ToggleSwitch.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/components/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/generic/utils.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/extractors.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/handlers.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/index.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/standardizer.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/typeGuards.ts","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/utils/contentStandardizer/types.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956941375\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926837\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926836\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926834\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926802\n        var cssReload = require(\"../../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926798\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926837\n        var cssReload = require(\"../../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926836\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926565\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1751956926835\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","/**\n * Base API URL for server communication\n */\n\nexport const API_BASE_URL = window.AGENT_TARS_BASE_URL ?? 'http://localhost:3000';\n\n/**\n * Default API endpoints\n */\nexport const API_ENDPOINTS = {\n  SESSIONS: '/api/v1/sessions',\n  CREATE_SESSION: '/api/v1/sessions/create',\n  SESSION_DETAILS: '/api/v1/sessions/details',\n  SESSION_EVENTS: '/api/v1/sessions/events',\n  SESSION_STATUS: '/api/v1/sessions/status',\n  UPDATE_SESSION: '/api/v1/sessions/update',\n  DELETE_SESSION: '/api/v1/sessions/delete',\n  QUERY: '/api/v1/sessions/query',\n  QUERY_STREAM: '/api/v1/sessions/query/stream',\n  ABORT: '/api/v1/sessions/abort',\n  GENERATE_SUMMARY: '/api/v1/sessions/generate-summary',\n  HEALTH: '/api/v1/health',\n  BROWSER_CONTROL_INFO: '/api/v1/sessions/browser-control',\n\n  // Share endpoints\n  SHARE_CONFIG: '/api/v1/share/config',\n  SESSIONS_SHARE: '/api/v1/sessions/share',\n};\n\n/**\n * WebSocket events\n */\nexport const SOCKET_EVENTS = {\n  CONNECT: 'connect',\n  DISCONNECT: 'disconnect',\n  ERROR: 'error',\n  RECONNECT_ATTEMPT: 'reconnect_attempt',\n  RECONNECT_FAILED: 'reconnect_failed',\n  JOIN_SESSION: 'join-session',\n  AGENT_EVENT: 'agent-event',\n  AGENT_STATUS: 'agent-status',\n  PING: 'ping',\n  SEND_QUERY: 'send-query',\n  ABORT_QUERY: 'abort-query',\n};\n\n/**\n * Local storage keys\n */\nexport const STORAGE_KEYS = {\n  ACTIVE_SESSION: 'agent-tars-active-session',\n  THEME: 'agent-tars-theme',\n};\n\n/**\n * Message roles\n */\nexport const MESSAGE_ROLES = {\n  USER: 'user',\n  ASSISTANT: 'assistant',\n  SYSTEM: 'system',\n  TOOL: 'tool',\n} as const;\n\n/**\n * Connection settings\n */\nexport const CONNECTION_SETTINGS = {\n  HEARTBEAT_INTERVAL: 15000,\n  MAX_MISSED_HEARTBEATS: 2,\n  MAX_RECONNECT_ATTEMPTS: 5,\n  RECONNECTION_DELAY: 1000,\n  RECONNECTION_DELAY_MAX: 5000,\n};\n\nexport * from './toolTypes';\n","/**\n * Tool type constants and utilities\n * Central definition of all tool types to avoid duplication and magic strings\n */\n\n// Tool name constants derived from the actual tool registry\nexport const TOOL_NAMES = {\n  // General tools\n  WEB_SEARCH: 'web_search',\n\n  // Browser tools\n  BROWSER_VISION_CONTROL: 'browser_vision_control',\n  BROWSER_CLICK: 'browser_click',\n  BROWSER_CLOSE_TAB: 'browser_close_tab',\n  BROWSER_EVALUATE: 'browser_evaluate',\n  BROWSER_FORM_INPUT_FILL: 'browser_form_input_fill',\n  BROWSER_GET_CLICKABLE_ELEMENTS: 'browser_get_clickable_elements',\n  BROWSER_GET_MARKDOWN: 'browser_get_markdown',\n  BROWSER_GO_BACK: 'browser_go_back',\n  BROWSER_GO_FORWARD: 'browser_go_forward',\n  BROWSER_HOVER: 'browser_hover',\n  BROWSER_NAVIGATE: 'browser_navigate',\n  BROWSER_NEW_TAB: 'browser_new_tab',\n  BROWSER_PRESS_KEY: 'browser_press_key',\n  BROWSER_READ_LINKS: 'browser_read_links',\n  BROWSER_SCREENSHOT: 'browser_screenshot',\n  BROWSER_SCROLL: 'browser_scroll',\n  BROWSER_SELECT: 'browser_select',\n  BROWSER_SWITCH_TAB: 'browser_switch_tab',\n  BROWSER_TAB_LIST: 'browser_tab_list',\n\n  // Filesystem tools\n  CREATE_DIRECTORY: 'create_directory',\n  DIRECTORY_TREE: 'directory_tree',\n  EDIT_FILE: 'edit_file',\n  GET_FILE_INFO: 'get_file_info',\n  LIST_ALLOWED_DIRECTORIES: 'list_allowed_directories',\n  LIST_DIRECTORY: 'list_directory',\n  MOVE_FILE: 'move_file',\n  READ_FILE: 'read_file',\n  READ_MULTIPLE_FILES: 'read_multiple_files',\n  SEARCH_FILES: 'search_files',\n  WRITE_FILE: 'write_file',\n\n  // Command tools\n  RUN_COMMAND: 'run_command',\n  RUN_SCRIPT: 'run_script',\n} as const;\n\n// Tool name type derived from constants\nexport type ToolName = (typeof TOOL_NAMES)[keyof typeof TOOL_NAMES];\n\n// Tool category constants\nexport const TOOL_CATEGORIES = {\n  SEARCH: 'search',\n  BROWSER: 'browser',\n  COMMAND: 'command',\n  SCRIPT: 'script',\n  IMAGE: 'image',\n  FILE: 'file',\n  BROWSER_VISION_CONTROL: 'browser_vision_control',\n  OTHER: 'other',\n} as const;\n\n// Tool category type derived from constants\nexport type ToolCategory = (typeof TOOL_CATEGORIES)[keyof typeof TOOL_CATEGORIES];\n\n// Tool name to category mapping\nexport const TOOL_NAME_TO_CATEGORY_MAP: Record<ToolName, ToolCategory> = {\n  // General tools\n  [TOOL_NAMES.WEB_SEARCH]: TOOL_CATEGORIES.SEARCH,\n\n  // Browser tools\n  [TOOL_NAMES.BROWSER_VISION_CONTROL]: TOOL_CATEGORIES.BROWSER_VISION_CONTROL,\n  [TOOL_NAMES.BROWSER_CLICK]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_CLOSE_TAB]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_EVALUATE]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_FORM_INPUT_FILL]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_GET_CLICKABLE_ELEMENTS]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_GET_MARKDOWN]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_GO_BACK]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_GO_FORWARD]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_HOVER]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_NAVIGATE]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_NEW_TAB]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_PRESS_KEY]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_READ_LINKS]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_SCREENSHOT]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_SCROLL]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_SELECT]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_SWITCH_TAB]: TOOL_CATEGORIES.BROWSER,\n  [TOOL_NAMES.BROWSER_TAB_LIST]: TOOL_CATEGORIES.BROWSER,\n\n  // Filesystem tools\n  [TOOL_NAMES.CREATE_DIRECTORY]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.DIRECTORY_TREE]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.EDIT_FILE]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.GET_FILE_INFO]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.LIST_ALLOWED_DIRECTORIES]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.LIST_DIRECTORY]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.MOVE_FILE]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.READ_FILE]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.READ_MULTIPLE_FILES]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.SEARCH_FILES]: TOOL_CATEGORIES.FILE,\n  [TOOL_NAMES.WRITE_FILE]: TOOL_CATEGORIES.FILE,\n\n  // Command tools\n  [TOOL_NAMES.RUN_COMMAND]: TOOL_CATEGORIES.COMMAND,\n  [TOOL_NAMES.RUN_SCRIPT]: TOOL_CATEGORIES.SCRIPT,\n};\n\n// Helper function to get tool category from tool name\nexport function getToolCategory(toolName: string): ToolCategory {\n  // Check if it's a known tool name\n  if (toolName in TOOL_NAME_TO_CATEGORY_MAP) {\n    return TOOL_NAME_TO_CATEGORY_MAP[toolName as ToolName];\n  }\n\n  // Fallback to pattern matching for unknown tools\n  const lowerName = toolName.toLowerCase();\n\n  if (lowerName.includes('search')) return TOOL_CATEGORIES.SEARCH;\n  if (lowerName.includes('browser')) return TOOL_CATEGORIES.BROWSER;\n  if (lowerName.includes('command') || lowerName.includes('terminal'))\n    return TOOL_CATEGORIES.COMMAND;\n  if (lowerName.includes('script')) return TOOL_CATEGORIES.SCRIPT;\n  if (lowerName.includes('file') || lowerName.includes('directory')) return TOOL_CATEGORIES.FILE;\n\n  return TOOL_CATEGORIES.OTHER;\n}\n\n// Legacy compatibility - export as TOOL_TYPES for backward compatibility\nexport const TOOL_TYPES = TOOL_CATEGORIES;\n","import { useAtom } from 'jotai';\nimport { sidebarCollapsedAtom, workspacePanelCollapsedAtom } from '../state/atoms/ui';\n\n/**\n * Hook for layout management\n *\n * Provides:\n * - Sidebar state (collapsed/expanded)\n * - Workspace panel state (collapsed/expanded)\n * - Toggle functions for both\n */\nexport function useLayout() {\n  const [isSidebarCollapsed, setSidebarCollapsed] = useAtom(sidebarCollapsedAtom);\n  const [isWorkspacePanelCollapsed, setWorkspacePanelCollapsed] = useAtom(\n    workspacePanelCollapsedAtom,\n  );\n\n  const toggleSidebar = () => setSidebarCollapsed((prev) => !prev);\n  const toggleWorkspacePanel = () => setWorkspacePanelCollapsed((prev) => !prev);\n\n  return {\n    isSidebarCollapsed,\n    isWorkspacePanelCollapsed,\n    toggleSidebar,\n    toggleWorkspacePanel,\n  };\n}\n","import { useAtom } from 'jotai';\nimport { plansAtom, planUIStateAtom } from '../state/atoms/plan';\nimport { useEffect } from 'react';\n\n/**\n * Hook for plan management functionality\n *\n * Provides:\n * - Access to plan data for the active session\n * - UI state for plan display\n * - Toggle functions for plan visibility\n */\nexport function usePlan(sessionId: string | null) {\n  const [plans, setPlans] = useAtom(plansAtom);\n  const [planUIState, setPlanUIState] = useAtom(planUIStateAtom);\n\n  // Get plan for current session\n  const currentPlan = sessionId ? plans[sessionId] : undefined;\n\n  // Add debug logging to trace plan state\n  useEffect(() => {\n    if (sessionId) {\n      console.log(`[usePlan] Plan state for session ${sessionId}:`, currentPlan);\n    }\n  }, [sessionId, currentPlan]);\n\n  // Toggle plan visibility\n  const togglePlanVisibility = () => {\n    setPlanUIState((prev) => ({\n      ...prev,\n      isVisible: !prev.isVisible,\n    }));\n  };\n\n  // Show plan automatically when first created\n  const showPlanAutomatically = () => {\n    setPlanUIState((prev) => ({\n      ...prev,\n      isVisible: true,\n    }));\n  };\n\n  return {\n    currentPlan,\n    isPlanVisible: planUIState.isVisible,\n    togglePlanVisibility,\n    showPlanAutomatically,\n  };\n}\n","// /agent-tars-web-ui/src/v2/hooks/useReplay.ts\nimport { useAtom } from 'jotai';\nimport { useCallback, useEffect, useState } from 'react';\nimport { replayStateAtom } from '../state/atoms/replay';\nimport { useSession } from './useSession';\nimport { messagesAtom } from '../state/atoms/message';\nimport { toolResultsAtom } from '../state/atoms/tool';\nimport { processEventAction } from '../state/actions/eventProcessor';\nimport { useSetAtom } from 'jotai';\nimport { plansAtom } from '../state/atoms/plan';\n\n/**\n * Custom hook for managing replay functionality\n *\n * Provides:\n * - Control for playback (play, pause, jump, etc.)\n * - Event processing through the standard event processor\n * - Timeline calculations and positioning\n */\nexport function useReplay() {\n  const [replayState, setReplayState] = useAtom(replayStateAtom);\n  const { activeSessionId } = useSession();\n  const [playbackInterval, setPlaybackInterval] = useState<NodeJS.Timeout | null>(null);\n  const [, setMessages] = useAtom(messagesAtom);\n  const [, setToolResults] = useAtom(toolResultsAtom);\n  const [, setPlans] = useAtom(plansAtom);\n  const processEvent = useSetAtom(processEventAction);\n\n  /**\n   * 重置会话状态并处理事件至指定索引\n   */\n  const processEventsUpToIndex = useCallback(\n    (targetIndex: number) => {\n      if (!activeSessionId || !replayState.events.length || targetIndex < 0) return;\n\n      // 获取需要处理的事件\n      const eventsToProcess = replayState.events.slice(0, targetIndex + 1);\n\n      // 清空当前会话状态\n      setMessages((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setToolResults((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setPlans((prev) => ({\n        ...prev,\n        [activeSessionId]: {\n          steps: [],\n          isComplete: false,\n          summary: null,\n          hasGeneratedPlan: false,\n          keyframes: [],\n        },\n      }));\n\n      // 处理环境输入事件优先，确保图片资源先加载\n      const envEvents = eventsToProcess.filter((event) => event.type === 'environment_input');\n      const nonEnvEvents = eventsToProcess.filter((event) => event.type !== 'environment_input');\n\n      // 先处理环境输入事件\n      for (const event of envEvents) {\n        processEvent({ sessionId: activeSessionId, event });\n      }\n\n      // 然后处理其他事件\n      for (const event of nonEnvEvents) {\n        processEvent({ sessionId: activeSessionId, event });\n      }\n    },\n    [activeSessionId, replayState.events, setMessages, setToolResults, setPlans, processEvent],\n  );\n\n  /**\n   * 开始回放\n   */\n  const startReplay = useCallback(() => {\n    // 清除现有的定时器\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: false,\n    }));\n\n    // 设置定时器按间隔前进\n    const interval = setInterval(() => {\n      setReplayState((prev) => {\n        // 到达末尾时停止\n        if (prev.currentEventIndex >= prev.events.length - 1) {\n          clearInterval(interval);\n          return {\n            ...prev,\n            isPaused: true,\n            currentEventIndex: prev.events.length - 1,\n          };\n        }\n\n        // 前进到下一个事件\n        const nextIndex = prev.currentEventIndex + 1;\n\n        // 处理到新位置\n        if (activeSessionId) {\n          processEvent({\n            sessionId: activeSessionId,\n            event: prev.events[nextIndex],\n          });\n        }\n\n        return {\n          ...prev,\n          currentEventIndex: nextIndex,\n        };\n      });\n    }, 500 / replayState.playbackSpeed);\n\n    setPlaybackInterval(interval);\n  }, [activeSessionId, playbackInterval, processEvent, replayState.playbackSpeed, setReplayState]);\n\n  /**\n   * 暂停回放\n   */\n  const pauseReplay = useCallback(() => {\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n      setPlaybackInterval(null);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: true,\n    }));\n  }, [playbackInterval, setReplayState]);\n\n  /**\n   * 跳转到时间轴上的指定位置\n   */\n  const jumpToPosition = useCallback(\n    (position: number) => {\n      // 确保位置在有效范围内\n      const normalizedPosition = Math.max(0, Math.min(1, position));\n\n      if (replayState.events.length === 0 || !activeSessionId) return;\n\n      // 根据位置计算目标事件索引\n      const targetIndex = Math.floor(normalizedPosition * (replayState.events.length - 1));\n\n      // 暂停任何正在进行的回放\n      if (playbackInterval) {\n        clearInterval(playbackInterval);\n        setPlaybackInterval(null);\n      }\n\n      // 处理到新位置\n      processEventsUpToIndex(targetIndex);\n\n      setReplayState((prev) => ({\n        ...prev,\n        isPaused: true,\n        currentEventIndex: targetIndex,\n      }));\n    },\n    [\n      activeSessionId,\n      playbackInterval,\n      processEventsUpToIndex,\n      replayState.events.length,\n      setReplayState,\n    ],\n  );\n\n  /**\n   * 跳转到最终结果\n   */\n  const jumpToResult = useCallback(() => {\n    if (replayState.events.length === 0 || !activeSessionId) return;\n\n    const finalIndex = replayState.events.length - 1;\n\n    // 暂停任何正在进行的回放\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n      setPlaybackInterval(null);\n    }\n\n    // 处理到最终位置\n    processEventsUpToIndex(finalIndex);\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: true,\n      currentEventIndex: finalIndex,\n    }));\n  }, [\n    activeSessionId,\n    playbackInterval,\n    processEventsUpToIndex,\n    replayState.events.length,\n    setReplayState,\n  ]);\n\n  /**\n   * 重置回放到初始状态，允许从头开始播放\n   */\n  const resetReplay = useCallback(() => {\n    // 暂停任何正在进行的回放\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n      setPlaybackInterval(null);\n    }\n\n    // 处理到初始位置\n    processEventsUpToIndex(0);\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: true,\n      currentEventIndex: 0,\n    }));\n  }, [playbackInterval, processEventsUpToIndex, setReplayState]);\n\n  /**\n   * 设置播放速度\n   */\n  const setPlaybackSpeed = useCallback(\n    (speed: number) => {\n      setReplayState((prev) => ({\n        ...prev,\n        playbackSpeed: speed,\n      }));\n\n      // 如果正在播放，以新速度重启\n      if (!replayState.isPaused && playbackInterval) {\n        clearInterval(playbackInterval);\n        startReplay();\n      }\n    },\n    [playbackInterval, replayState.isPaused, setReplayState, startReplay],\n  );\n\n  /**\n   * 退出回放模式\n   */\n  const exitReplay = useCallback(() => {\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isActive: false,\n      isPaused: true,\n      currentEventIndex: -1,\n      events: [],\n      processedEvents: {},\n    }));\n  }, [playbackInterval, setReplayState]);\n\n  /**\n   * 获取当前事件\n   */\n  const getCurrentEvent = useCallback(() => {\n    if (\n      !replayState.isActive ||\n      replayState.currentEventIndex < 0 ||\n      replayState.currentEventIndex >= replayState.events.length\n    ) {\n      return null;\n    }\n\n    return replayState.events[replayState.currentEventIndex];\n  }, [replayState.currentEventIndex, replayState.events, replayState.isActive]);\n\n  /**\n   * 获取当前位置百分比 (0-100)\n   */\n  const getCurrentPosition = useCallback(() => {\n    if (!replayState.isActive || replayState.events.length <= 1) {\n      return 0;\n    }\n\n    return (replayState.currentEventIndex / (replayState.events.length - 1)) * 100;\n  }, [replayState.currentEventIndex, replayState.events.length, replayState.isActive]);\n\n  /**\n   * 获取当前所有事件\n   */\n  const getCurrentEvents = useCallback(() => {\n    if (!replayState.isActive || replayState.currentEventIndex < 0) {\n      return [];\n    }\n\n    return replayState.events.slice(0, replayState.currentEventIndex + 1);\n  }, [replayState.currentEventIndex, replayState.events, replayState.isActive]);\n\n  // 组件卸载时清理定时器\n  useEffect(() => {\n    return () => {\n      if (playbackInterval) {\n        clearInterval(playbackInterval);\n      }\n    };\n  }, [playbackInterval]);\n\n  // 回放模式初始化时：如果索引为-1，需要手动触发第一步，否则会显示为空白\n  useEffect(() => {\n    if (\n      replayState.isActive &&\n      replayState.currentEventIndex === -1 &&\n      replayState.events.length > 0 &&\n      replayState.autoPlayCountdown === null // 只在倒计时完成或取消后才初始化\n    ) {\n      // 如果启动回放后立即跳到第一个事件\n      processEventsUpToIndex(0);\n      setReplayState((prev) => ({\n        ...prev,\n        currentEventIndex: 0,\n      }));\n    }\n  }, [\n    replayState.isActive,\n    replayState.currentEventIndex,\n    replayState.events.length,\n    replayState.autoPlayCountdown, // 添加倒计时状态作为依赖\n    processEventsUpToIndex,\n    setReplayState,\n  ]);\n\n  /**\n   * 取消自动播放倒计时\n   */\n  const cancelAutoPlay = useCallback(() => {\n    setReplayState((prev) => ({\n      ...prev,\n      autoPlayCountdown: null,\n    }));\n  }, [setReplayState]);\n\n  // 添加对自动播放事件的监听\n  useEffect(() => {\n    const handleAutoStart = () => {\n      console.log('Auto-play event received, starting replay...');\n      startReplay();\n    };\n\n    // 添加事件监听器\n    window.addEventListener('replay-autostart', handleAutoStart);\n\n    // 清理函数\n    return () => {\n      window.removeEventListener('replay-autostart', handleAutoStart);\n    };\n  }, [startReplay]); // 依赖于startReplay函数\n\n  return {\n    // 状态\n    replayState,\n\n    // 操作方法\n    startReplay,\n    pauseReplay,\n    jumpToPosition,\n    jumpToResult,\n    setPlaybackSpeed,\n    exitReplay,\n    cancelAutoPlay,\n    resetReplay,\n\n    // 工具方法\n    getCurrentEvents,\n    getCurrentPosition,\n    getCurrentEvent,\n  };\n}\n","import React, { createContext, useContext, ReactNode, useEffect } from 'react';\nimport { atom, useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport { replayStateAtom } from '../state/atoms/replay';\nimport { activeSessionIdAtom, sessionsAtom } from '../state/atoms/session';\nimport { messagesAtom } from '../state/atoms/message';\nimport { connectionStatusAtom, modelInfoAtom } from '../state/atoms/ui';\n\n/**\n * ReplayModeContext - Global context for sharing replay mode state\n *\n * This context provides a centralized way to check if the application\n * is currently in replay mode, allowing components to adapt their behavior\n * without needing to directly access the replay state atom.\n */\ninterface ReplayModeContextType {\n  isReplayMode: boolean;\n}\n\nconst ReplayModeContext = createContext<ReplayModeContextType>({\n  isReplayMode: false,\n});\n\n/**\n * ReplayModeProvider - Provides replay mode state to the application and initializes replay data\n *\n * 1. Detects replay mode from window variables\n * 2. Initializes application state with replay data when in replay mode\n * 3. Prevents server communication in replay mode\n * 4. Provides the replay mode status to all child components\n */\nexport const ReplayModeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  // Access necessary atoms\n  const [replayState, setReplayState] = useAtom(replayStateAtom);\n  const [, setMessages] = useAtom(messagesAtom);\n  const [, setSessions] = useAtom(sessionsAtom);\n  const [, setActiveSessionId] = useAtom(activeSessionIdAtom);\n  const [, setConnectionStatus] = useAtom(connectionStatusAtom);\n\n  // Initialize replay mode if window variables are present\n  useEffect(() => {\n    // Check if in replay mode\n    if (window.AGENT_TARS_REPLAY_MODE && window.AGENT_TARS_EVENT_STREAM) {\n      // Get session data and event stream\n      const sessionData = window.AGENT_TARS_SESSION_DATA;\n      const events = window.AGENT_TARS_EVENT_STREAM;\n\n      console.log('[ReplayMode] Initializing replay mode with', events.length, 'events');\n\n      if (sessionData && sessionData.id) {\n        // Set connection status to \"offline\" to prevent health checks\n        setConnectionStatus({\n          connected: false, // Mark as disconnected to prevent API calls\n          lastConnected: null,\n          lastError: null,\n          reconnecting: false,\n        });\n\n        // Set sessions data\n        setSessions([sessionData]);\n\n        // When in replay mode, the session ID must be set immediately\n        setActiveSessionId(sessionData.id);\n\n        // Add debug logging\n        console.log('[ReplayMode] Active session set to:', sessionData.id);\n\n        // Initialize replay state with autoPlayCountdown\n        setReplayState({\n          isActive: true,\n          isPaused: true, // 始终从暂停状态开始\n          events: events,\n          currentEventIndex: -1,\n          startTimestamp: events.length > 0 ? events[0].timestamp : null,\n          endTimestamp: events.length > 0 ? events[events.length - 1].timestamp : null,\n          playbackSpeed: 1,\n          autoPlayCountdown: 2, // 设置2秒倒计时\n          visibleTimeWindow:\n            events.length > 0\n              ? {\n                  start: events[0].timestamp,\n                  end: events[events.length - 1].timestamp,\n                }\n              : null,\n          processedEvents: {},\n        });\n\n        // Initialize empty messages state\n        setMessages({\n          [sessionData.id]: [],\n        });\n\n        console.log('[ReplayMode] Replay mode initialized successfully');\n\n        // 启动倒计时\n        const countdownTimer = setInterval(() => {\n          setReplayState((prev) => {\n            // 如果倒计时结束或已被取消\n            if (prev.autoPlayCountdown === null || prev.autoPlayCountdown <= 0) {\n              clearInterval(countdownTimer);\n\n              // 只在倒计时完成时准备开始播放，但不直接改变isPaused状态\n              // 这样将由useReplay中的startReplay函数正确启动播放过程\n              if (prev.autoPlayCountdown === 0) {\n                // 设置一个延迟启动标记，在下一个useEffect中捕获并启动播放\n                setTimeout(() => {\n                  console.log('[ReplayMode] Auto-play countdown finished, starting replay...');\n                  // 触发一个事件通知播放开始\n                  window.dispatchEvent(new CustomEvent('replay-autostart'));\n                }, 0);\n              }\n\n              return {\n                ...prev,\n                autoPlayCountdown: null, // 只清除倒计时，不改变播放状态\n              };\n            }\n\n            // 继续倒计时\n            return {\n              ...prev,\n              autoPlayCountdown: prev.autoPlayCountdown - 1,\n            };\n          });\n        }, 1000);\n      } else {\n        console.error('[ReplayMode] Missing session data or session ID');\n      }\n    }\n  }, [setMessages, setSessions, setActiveSessionId, setReplayState, setConnectionStatus]);\n\n  // Check both the atom and global window variable for replay mode\n  const isReplayMode = replayState.isActive || !!window.AGENT_TARS_REPLAY_MODE;\n\n  return (\n    <ReplayModeContext.Provider\n      value={{\n        isReplayMode,\n      }}\n    >\n      {children}\n    </ReplayModeContext.Provider>\n  );\n};\n\n/**\n * useReplayMode - Hook to access replay mode state\n */\nexport const useReplayMode = (): boolean => {\n  const { isReplayMode } = useContext(ReplayModeContext);\n  return isReplayMode;\n};\n","import { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport { useLocation } from 'react-router-dom';\nimport { sessionsAtom, activeSessionIdAtom } from '../state/atoms/session';\nimport { messagesAtom, groupedMessagesAtom } from '../state/atoms/message';\nimport { toolResultsAtom } from '../state/atoms/tool';\nimport { plansAtom, planUIStateAtom } from '../state/atoms/plan';\nimport {\n  isProcessingAtom,\n  activePanelContentAtom,\n  connectionStatusAtom,\n  modelInfoAtom,\n} from '../state/atoms/ui';\nimport { replayStateAtom } from '../state/atoms/replay';\nimport {\n  loadSessionsAction,\n  createSessionAction,\n  setActiveSessionAction,\n  updateSessionAction,\n  deleteSessionAction,\n  sendMessageAction,\n  abortQueryAction,\n  checkSessionStatusAction,\n} from '../state/actions/sessionActions';\nimport {\n  initConnectionMonitoringAction,\n  checkConnectionStatusAction,\n} from '../state/actions/connectionActions';\nimport { socketService } from '../services/socketService';\n\nimport { useEffect, useCallback, useMemo } from 'react';\nimport { useReplayMode } from '../hooks/useReplayMode';\n\n/**\n * Hook for session management functionality\n */\nexport function useSession() {\n  // State\n  const [sessions, setSessions] = useAtom(sessionsAtom);\n  const [activeSessionId, setActiveSessionId] = useAtom(activeSessionIdAtom);\n  const messages = useAtomValue(messagesAtom);\n  const groupedMessages = useAtomValue(groupedMessagesAtom);\n  const toolResults = useAtomValue(toolResultsAtom);\n  const [isProcessing, setIsProcessing] = useAtom(isProcessingAtom);\n  const [activePanelContent, setActivePanelContent] = useAtom(activePanelContentAtom);\n  const [connectionStatus, setConnectionStatus] = useAtom(connectionStatusAtom);\n  const [plans, setPlans] = useAtom(plansAtom);\n  const setPlanUIState = useSetAtom(planUIStateAtom);\n  const [replayState, setReplayState] = useAtom(replayStateAtom);\n  const modelInfo = useAtomValue(modelInfoAtom);\n\n  // Check if we're in replay mode using the context hook\n  const isReplayMode = useReplayMode();\n\n  // Actions\n  const loadSessions = useSetAtom(loadSessionsAction);\n  const createSession = useSetAtom(createSessionAction);\n  const setActiveSession = useSetAtom(setActiveSessionAction);\n  const updateSessionMetadata = useSetAtom(updateSessionAction);\n  const deleteSession = useSetAtom(deleteSessionAction);\n  const sendMessage = useSetAtom(sendMessageAction);\n  const abortQuery = useSetAtom(abortQueryAction);\n  const initConnectionMonitoring = useSetAtom(initConnectionMonitoringAction);\n  const checkServerStatus = useSetAtom(checkConnectionStatusAction);\n  const checkSessionStatus = useSetAtom(checkSessionStatusAction);\n\n  // Get current location\n  const location = useLocation();\n\n  // 保留这个工具函数，但移除自动同步逻辑\n  const getSessionIdFromUrl = useCallback(() => {\n    const pathParts = location.pathname.split('/').filter(Boolean);\n    return pathParts.length > 0 ? pathParts[0] : null;\n  }, [location]);\n\n  // Periodic status checking for active session - 在回放模式下不检查状态\n  useEffect(() => {\n    if (!activeSessionId || !connectionStatus.connected || isReplayMode) return;\n\n    // Initial status check when session becomes active\n    checkSessionStatus(activeSessionId);\n  }, [activeSessionId, connectionStatus.connected, checkSessionStatus, isReplayMode]);\n\n  // Enhanced socket handler for session status sync - 在回放模式下不更新状态\n  const handleSessionStatusUpdate = useCallback(\n    (status: any) => {\n      if (status && typeof status.isProcessing === 'boolean' && !isReplayMode) {\n        setIsProcessing(status.isProcessing);\n      }\n    },\n    [setIsProcessing, isReplayMode],\n  );\n\n  // Set up socket event handlers when active session changes - 在回放模式下不设置socket事件处理\n  useEffect(() => {\n    if (!activeSessionId || !socketService.isConnected() || isReplayMode) return;\n\n    // Join session and listen for status updates\n    socketService.joinSession(\n      activeSessionId,\n      () => {\n        /* existing event handling */\n      },\n      handleSessionStatusUpdate,\n    );\n\n    // Register global status handler\n    socketService.on('agent-status', handleSessionStatusUpdate);\n\n    return () => {\n      // Clean up handlers\n      socketService.off('agent-status', handleSessionStatusUpdate);\n    };\n  }, [activeSessionId, handleSessionStatusUpdate, isReplayMode]);\n\n  // Auto-show plan when it's first created - 在回放模式下不自动显示计划\n  useEffect(() => {\n    if (activeSessionId && plans[activeSessionId]?.hasGeneratedPlan && !isReplayMode) {\n      const currentPlan = plans[activeSessionId];\n\n      // If this is a newly generated plan, automatically show it\n      if (currentPlan.steps.length > 0 && currentPlan.steps.every((step) => !step.done)) {\n        setPlanUIState((prev) => ({\n          ...prev,\n          isVisible: true,\n        }));\n      }\n    }\n  }, [activeSessionId, plans, setPlanUIState, isReplayMode]);\n\n  // Memoize the session state object to avoid unnecessary re-renders\n  const sessionState = useMemo(\n    () => ({\n      // State\n      sessions,\n      activeSessionId,\n      messages,\n      groupedMessages,\n      toolResults,\n      isProcessing,\n      activePanelContent,\n      connectionStatus,\n      plans,\n      replayState,\n      modelInfo, // Now from atom, updated by events\n\n      // Session operations\n      loadSessions,\n      createSession,\n      setActiveSession,\n      updateSessionMetadata,\n      deleteSession,\n\n      // Message operations\n      sendMessage,\n      abortQuery,\n\n      // UI operations\n      setActivePanelContent,\n\n      // Connection operations\n      initConnectionMonitoring,\n      checkServerStatus,\n\n      // Status operations\n      checkSessionStatus,\n      getSessionIdFromUrl,\n    }),\n    [\n      sessions,\n      activeSessionId,\n      messages,\n      groupedMessages,\n      toolResults,\n      isProcessing,\n      activePanelContent,\n      connectionStatus,\n      plans,\n      replayState,\n      modelInfo,\n      loadSessions,\n      createSession,\n      setActiveSession,\n      updateSessionMetadata,\n      deleteSession,\n      sendMessage,\n      abortQuery,\n      setActivePanelContent,\n      initConnectionMonitoring,\n      checkServerStatus,\n      checkSessionStatus,\n      getSessionIdFromUrl,\n    ],\n  );\n\n  return sessionState;\n}\n","import React from 'react';\nimport { FiFileText, FiImage, FiCode, FiSave, FiTool } from 'react-icons/fi';\nimport {\n  RiSearchLine,\n  RiGlobalLine,\n  RiFolderLine,\n  RiTerminalLine,\n  RiNewspaperLine,\n  RiScreenshot2Line,\n  RiCursorLine,\n} from 'react-icons/ri';\nimport { TOOL_NAMES, TOOL_CATEGORIES, getToolCategory } from '../constants/toolTypes';\n\n/**\n * Custom hook for tool-related functionality\n *\n * Provides tool icons and helpers for working with AI tool calls\n */\nexport const useTool = () => {\n  /**\n   * Get the appropriate icon for a tool based on its name\n   */\n  const getToolIcon = (toolName: string): React.ReactNode => {\n    // Handle known tool names first\n    switch (toolName) {\n      // Web tools\n      case TOOL_NAMES.WEB_SEARCH:\n        return <RiSearchLine size={16} className=\"text-blue-500 dark:text-blue-400\" />;\n      case TOOL_NAMES.BROWSER_NAVIGATE:\n        return <RiGlobalLine size={16} className=\"text-indigo-500 dark:text-indigo-400\" />;\n      case TOOL_NAMES.BROWSER_GET_MARKDOWN:\n        return <RiNewspaperLine size={16} className=\"text-purple-500 dark:text-purple-400\" />;\n      case TOOL_NAMES.BROWSER_GET_CLICKABLE_ELEMENTS:\n        return <FiFileText size={16} className=\"text-violet-500 dark:text-violet-400\" />;\n      case TOOL_NAMES.BROWSER_VISION_CONTROL:\n        return <RiScreenshot2Line size={16} className=\"text-fuchsia-500 dark:text-fuchsia-400\" />;\n      case TOOL_NAMES.BROWSER_CLICK:\n        return <RiCursorLine size={16} className=\"text-pink-500 dark:text-pink-400\" />;\n\n      // File system tools\n      case TOOL_NAMES.READ_FILE:\n        return <FiFileText size={16} className=\"text-emerald-500 dark:text-emerald-400\" />;\n      case TOOL_NAMES.LIST_DIRECTORY:\n        return <RiFolderLine size={16} className=\"text-green-500 dark:text-green-400\" />;\n      case TOOL_NAMES.WRITE_FILE:\n        return <FiSave size={16} className=\"text-sky-500 dark:text-sky-400\" />;\n\n      // Command tools\n      case TOOL_NAMES.RUN_COMMAND:\n        return <RiTerminalLine size={16} className=\"text-amber-500 dark:text-amber-400\" />;\n      case TOOL_NAMES.RUN_SCRIPT:\n        return <FiCode size={16} className=\"text-rose-500 dark:text-rose-400\" />;\n    }\n\n    // Fallback to category-based icons\n    const category = getToolCategory(toolName);\n\n    switch (category) {\n      case TOOL_CATEGORIES.SEARCH:\n        return <RiSearchLine size={16} className=\"text-blue-500 dark:text-blue-400\" />;\n      case TOOL_CATEGORIES.BROWSER:\n        return <RiGlobalLine size={16} className=\"text-indigo-500 dark:text-indigo-400\" />;\n      case TOOL_CATEGORIES.BROWSER_VISION_CONTROL:\n        return <RiScreenshot2Line size={16} className=\"text-fuchsia-500 dark:text-fuchsia-400\" />;\n      case TOOL_CATEGORIES.COMMAND:\n        return <RiTerminalLine size={16} className=\"text-amber-500 dark:text-amber-400\" />;\n      case TOOL_CATEGORIES.SCRIPT:\n        return <FiCode size={16} className=\"text-rose-500 dark:text-rose-400\" />;\n      case TOOL_CATEGORIES.FILE:\n        return <FiFileText size={16} className=\"text-emerald-500 dark:text-emerald-400\" />;\n      case TOOL_CATEGORIES.IMAGE:\n        return <FiImage size={16} className=\"text-purple-500 dark:text-purple-400\" />;\n      default:\n        return <FiTool size={16} className=\"text-gray-500 dark:text-gray-400\" />;\n    }\n  };\n\n  return {\n    getToolIcon,\n  };\n};\n","import { API_BASE_URL, API_ENDPOINTS } from '@/common/constants';\nimport { AgentEventStream, SessionMetadata } from '@/common/types';\nimport { socketService } from './socketService';\nimport { ChatCompletionContentPart } from '@multimodal/agent-interface';\n\n/**\n * API Service - Handles HTTP requests to the Agent TARS Server\n *\n * Provides methods for:\n * - Session management (create, get, update, delete)\n * - Query execution (streaming and non-streaming)\n * - Server health checks\n */\nclass ApiService {\n  /**\n   * Check server health status\n   */\n  async checkServerHealth(): Promise<boolean> {\n    try {\n      // Try ping through socket if connected\n      if (socketService.isConnected()) {\n        const pingSuccessful = await socketService.ping();\n        if (pingSuccessful) return true;\n      }\n\n      // Fall back to API health endpoint\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.HEALTH}`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        signal: AbortSignal.timeout(3000),\n      });\n\n      return response.ok;\n    } catch (error) {\n      console.error('Error checking server health:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create a new session\n   */\n  async createSession(): Promise<SessionMetadata> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.CREATE_SESSION}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create session: ${response.statusText}`);\n      }\n\n      const { sessionId } = await response.json();\n      return this.getSessionDetails(sessionId);\n    } catch (error) {\n      console.error('Error creating session:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get all sessions\n   */\n  async getSessions(): Promise<SessionMetadata[]> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.SESSIONS}`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get sessions: ${response.statusText}`);\n      }\n\n      const { sessions } = await response.json();\n      return sessions;\n    } catch (error) {\n      console.error('Error getting sessions:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get details for a specific session\n   */\n  async getSessionDetails(sessionId: string): Promise<SessionMetadata> {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}${API_ENDPOINTS.SESSION_DETAILS}?sessionId=${sessionId}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n          signal: AbortSignal.timeout(5000), // 添加 5 秒超时\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to get session details: ${response.statusText}`);\n      }\n\n      const { session } = await response.json();\n      return session;\n    } catch (error) {\n      console.error(`Error getting session details (${sessionId}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get events for a specific session\n   */\n  async getSessionEvents(sessionId: string): Promise<AgentEventStream.Event[]> {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}${API_ENDPOINTS.SESSION_EVENTS}?sessionId=${sessionId}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n          signal: AbortSignal.timeout(5000), // 添加 5 秒超时\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to get session events: ${response.statusText}`);\n      }\n\n      const { events } = await response.json();\n      return events;\n    } catch (error) {\n      console.error(`Error getting session events (${sessionId}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get current status of a session\n   */\n  async getSessionStatus(sessionId: string): Promise<{ isProcessing: boolean; state: string }> {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}${API_ENDPOINTS.SESSION_STATUS}?sessionId=${sessionId}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n          signal: AbortSignal.timeout(3000), // 3 second timeout\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to get session status: ${response.statusText}`);\n      }\n\n      const { status } = await response.json();\n      return status;\n    } catch (error) {\n      console.error(`Error getting session status (${sessionId}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Update session metadata\n   */\n  async updateSessionMetadata(\n    sessionId: string,\n    updates: { name?: string; tags?: string[] },\n  ): Promise<SessionMetadata> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.UPDATE_SESSION}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, ...updates }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to update session: ${response.statusText}`);\n      }\n\n      const { session } = await response.json();\n      return session;\n    } catch (error) {\n      console.error(`Error updating session (${sessionId}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete a session\n   */\n  async deleteSession(sessionId: string): Promise<boolean> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.DELETE_SESSION}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to delete session: ${response.statusText}`);\n      }\n\n      const { success } = await response.json();\n      return success;\n    } catch (error) {\n      console.error(`Error deleting session (${sessionId}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Send a streaming query\n   */\n  async sendStreamingQuery(\n    sessionId: string,\n    query: string | ChatCompletionContentPart[],\n    onEvent: (event: AgentEventStream.Event) => void,\n  ): Promise<void> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.QUERY_STREAM}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, query }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to send query: ${response.statusText}`);\n      }\n\n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error('ReadableStream not supported');\n      }\n\n      const decoder = new TextDecoder();\n      let buffer = '';\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        // Add the new chunk to the buffer\n        buffer += decoder.decode(value, { stream: true });\n\n        // Process all complete events in the buffer\n        let eventEndIndex;\n        while ((eventEndIndex = buffer.indexOf('\\n\\n')) !== -1) {\n          const eventString = buffer.slice(0, eventEndIndex);\n          // Move buffer to the next event\n          buffer = buffer.slice(eventEndIndex + 2);\n\n          if (eventString.startsWith('data: ')) {\n            try {\n              const eventData = JSON.parse(eventString.substring(6));\n              onEvent(eventData);\n            } catch (e) {\n              console.error('Error parsing event data:', e);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error in streaming query:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Send a non-streaming query\n   */\n  async sendQuery(sessionId: string, query: string | ChatCompletionContentPart[]): Promise<string> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.QUERY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, query }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to send query: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data.result;\n    } catch (error) {\n      console.error('Error sending query:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Abort a running query\n   */\n  async abortQuery(sessionId: string): Promise<boolean> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.ABORT}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to abort query: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data.success;\n    } catch (error) {\n      console.error('Error aborting query:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate a summary for a conversation\n   */\n  async generateSummary(sessionId: string, messages: any[]): Promise<string> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.GENERATE_SUMMARY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, messages }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to generate summary: ${response.statusText}`);\n      }\n\n      const { summary } = await response.json();\n      return summary;\n    } catch (error) {\n      console.error('Error generating summary:', error);\n      return 'Untitled Conversation';\n    }\n  }\n\n  /**\n   * Get browser control information for a session\n   */\n  async getBrowserControlInfo(sessionId: string): Promise<{ mode: string; tools: string[] }> {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}${API_ENDPOINTS.BROWSER_CONTROL_INFO}?sessionId=${sessionId}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n          signal: AbortSignal.timeout(3000),\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to get browser control info: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`Error getting browser control info (${sessionId}):`, error);\n      // 返回默认值作为回退\n      return { mode: 'default', tools: [] };\n    }\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\n","import { io, Socket } from 'socket.io-client';\nimport { API_BASE_URL, SOCKET_EVENTS, CONNECTION_SETTINGS } from '@/common/constants';\nimport { AgentEventStream } from '@/common/types';\n\n/**\n * Socket Service - Manages WebSocket connection with server\n */\nclass SocketService {\n  private socket: Socket | null = null;\n  private heartbeatTimer: NodeJS.Timeout | null = null;\n  private missedHeartbeats = 0;\n  private reconnectAttempts = 0;\n  private eventHandlers: Record<string, Array<(...args: any[]) => void>> = {};\n\n  /**\n   * Connect to the WebSocket server\n   */\n  connect(): Socket | null {\n    if (this.socket?.connected) {\n      return this.socket;\n    }\n\n    this.socket = io(API_BASE_URL, {\n      reconnection: true,\n      reconnectionDelay: CONNECTION_SETTINGS.RECONNECTION_DELAY,\n      reconnectionDelayMax: CONNECTION_SETTINGS.RECONNECTION_DELAY_MAX,\n      reconnectionAttempts: CONNECTION_SETTINGS.MAX_RECONNECT_ATTEMPTS,\n    });\n\n    // Set up core event handlers\n    this.setupEventHandlers();\n\n    return this.socket;\n  }\n\n  /**\n   * Disconnect from the WebSocket server\n   */\n  disconnect(): void {\n    this.stopHeartbeat();\n\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n\n    this.missedHeartbeats = 0;\n    this.reconnectAttempts = 0;\n  }\n\n  /**\n   * Check if currently connected to the server\n   */\n  isConnected(): boolean {\n    return this.socket?.connected || false;\n  }\n\n  /**\n   * Join a specific session to receive its events\n   */\n  joinSession(\n    sessionId: string,\n    onEvent: (event: AgentEventStream.Event) => void,\n    onStatusUpdate: (status: any) => void,\n  ): void {\n    if (!this.socket) {\n      this.connect();\n    }\n\n    if (!this.socket) return;\n\n    console.log(`Joining session: ${sessionId}`);\n    this.socket.emit(SOCKET_EVENTS.JOIN_SESSION, sessionId);\n\n    // 清理现有监听器\n    this.socket.off(SOCKET_EVENTS.AGENT_EVENT);\n    this.socket.off(SOCKET_EVENTS.AGENT_STATUS);\n\n    // 设置事件监听器\n    this.socket.on(SOCKET_EVENTS.AGENT_EVENT, ({ type, data }) => {\n      if (data) {\n        onEvent(data);\n      }\n    });\n\n    // 增强状态更新处理\n    this.socket.on(SOCKET_EVENTS.AGENT_STATUS, (status) => {\n      console.log('Received agent status:', status);\n      onStatusUpdate(status);\n\n      // 触发全局事件以同步应用中的所有组件\n      this.notifyEventHandlers(SOCKET_EVENTS.AGENT_STATUS, status);\n    });\n\n    // 立即请求当前状态\n    this.socket.emit('request-status', { sessionId });\n  }\n\n  /**\n   * Send a query to the server\n   */\n  sendQuery(params: { sessionId: string; query: string }): void {\n    if (!this.socket?.connected) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit(SOCKET_EVENTS.SEND_QUERY, params);\n  }\n\n  /**\n   * Abort the current query\n   */\n  abortQuery(params: { sessionId: string }): void {\n    if (!this.socket?.connected) {\n      throw new Error('Socket not connected');\n    }\n\n    this.socket.emit(SOCKET_EVENTS.ABORT_QUERY, params);\n  }\n\n  /**\n   * Add an event listener\n   */\n  on(event: string, callback: (...args: any[]) => void): void {\n    if (!this.eventHandlers[event]) {\n      this.eventHandlers[event] = [];\n    }\n\n    this.eventHandlers[event].push(callback);\n\n    // If we already have a socket, add the listener directly\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n\n  /**\n   * Remove an event listener\n   */\n  off(event: string, callback: (...args: any[]) => void): void {\n    if (this.eventHandlers[event]) {\n      this.eventHandlers[event] = this.eventHandlers[event].filter((cb) => cb !== callback);\n    }\n\n    if (this.socket) {\n      this.socket.off(event, callback);\n    }\n  }\n\n  /**\n   * Send a ping to check server connectivity\n   */\n  ping(): Promise<boolean> {\n    return new Promise((resolve) => {\n      if (!this.socket || !this.socket.connected) {\n        resolve(false);\n        return;\n      }\n\n      const timeout = setTimeout(() => {\n        resolve(false);\n      }, 5000);\n\n      this.socket.emit(SOCKET_EVENTS.PING, () => {\n        clearTimeout(timeout);\n        resolve(true);\n      });\n    });\n  }\n\n  /**\n   * Get the socket instance\n   */\n  getSocket(): Socket | null {\n    return this.socket;\n  }\n\n  /**\n   * Set up event handlers for the socket connection\n   */\n  private setupEventHandlers(): void {\n    if (!this.socket) return;\n\n    this.socket.on(SOCKET_EVENTS.CONNECT, this.handleConnect);\n    this.socket.on(SOCKET_EVENTS.DISCONNECT, this.handleDisconnect);\n    this.socket.on(SOCKET_EVENTS.ERROR, this.handleError);\n    this.socket.on(SOCKET_EVENTS.RECONNECT_ATTEMPT, this.handleReconnectAttempt);\n    this.socket.on(SOCKET_EVENTS.RECONNECT_FAILED, this.handleReconnectFailed);\n\n    // Apply any event handlers that were registered before connecting\n    Object.entries(this.eventHandlers).forEach(([event, handlers]) => {\n      handlers.forEach((handler) => {\n        this.socket?.on(event, handler);\n      });\n    });\n  }\n\n  /**\n   * Handle successful connection\n   */\n  private handleConnect = (): void => {\n    console.log('Connected to server');\n    this.missedHeartbeats = 0;\n    this.reconnectAttempts = 0;\n    this.startHeartbeat();\n\n    // Notify event handlers\n    this.notifyEventHandlers(SOCKET_EVENTS.CONNECT);\n  };\n\n  /**\n   * Handle disconnection\n   */\n  private handleDisconnect = (reason: string): void => {\n    console.log('Disconnected from server:', reason);\n    this.stopHeartbeat();\n\n    // Notify event handlers\n    this.notifyEventHandlers(SOCKET_EVENTS.DISCONNECT, reason);\n  };\n\n  /**\n   * Handle connection errors\n   */\n  private handleError = (error: any): void => {\n    console.error('Socket error:', error);\n\n    // Notify event handlers\n    this.notifyEventHandlers(SOCKET_EVENTS.ERROR, error);\n  };\n\n  /**\n   * Handle reconnection attempts\n   */\n  private handleReconnectAttempt = (): void => {\n    this.reconnectAttempts++;\n    console.log(\n      `Reconnection attempt ${this.reconnectAttempts}/${CONNECTION_SETTINGS.MAX_RECONNECT_ATTEMPTS}`,\n    );\n\n    // Notify event handlers\n    this.notifyEventHandlers(SOCKET_EVENTS.RECONNECT_ATTEMPT, this.reconnectAttempts);\n  };\n\n  /**\n   * Handle failed reconnection\n   */\n  private handleReconnectFailed = (): void => {\n    console.log('Failed to reconnect after multiple attempts');\n\n    // Notify event handlers\n    this.notifyEventHandlers(SOCKET_EVENTS.RECONNECT_FAILED);\n  };\n\n  /**\n   * Start heartbeat monitoring\n   */\n  private startHeartbeat(): void {\n    this.stopHeartbeat();\n    this.missedHeartbeats = 0;\n\n    this.heartbeatTimer = setInterval(() => {\n      this.sendHeartbeat();\n    }, CONNECTION_SETTINGS.HEARTBEAT_INTERVAL);\n  }\n\n  /**\n   * Stop heartbeat monitoring\n   */\n  private stopHeartbeat(): void {\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  /**\n   * Send heartbeat to server and track response\n   */\n  private sendHeartbeat(): void {\n    if (!this.socket || !this.socket.connected) {\n      this.missedHeartbeats++;\n\n      if (this.missedHeartbeats >= CONNECTION_SETTINGS.MAX_MISSED_HEARTBEATS) {\n        console.warn(`Missed ${this.missedHeartbeats} heartbeats, connection may be down`);\n        this.socket?.disconnect();\n      }\n      return;\n    }\n\n    this.socket.emit(SOCKET_EVENTS.PING, () => {\n      this.missedHeartbeats = 0;\n    });\n\n    // Increment counter - will be reset when we get a response\n    this.missedHeartbeats++;\n\n    if (this.missedHeartbeats >= CONNECTION_SETTINGS.MAX_MISSED_HEARTBEATS) {\n      console.warn(`Missed ${this.missedHeartbeats} heartbeats, connection may be down`);\n      this.socket.disconnect();\n    }\n  }\n\n  /**\n   * Notify all registered event handlers for a specific event\n   */\n  private notifyEventHandlers(event: string, ...args: any[]): void {\n    if (this.eventHandlers[event]) {\n      this.eventHandlers[event].forEach((handler) => {\n        try {\n          handler(...args);\n        } catch (error) {\n          console.error(`Error in ${event} event handler:`, error);\n        }\n      });\n    }\n  }\n}\n\n// Export singleton instance\nexport const socketService = new SocketService();\n","import { atom } from 'jotai';\nimport { SOCKET_EVENTS } from '@/common/constants';\nimport { apiService } from '../../services/apiService';\nimport { socketService } from '../../services/socketService';\nimport { connectionStatusAtom } from '../atoms/ui';\n\n/**\n * Check server connection status\n */\nexport const checkConnectionStatusAction = atom(null, async (get, set) => {\n  const currentStatus = get(connectionStatusAtom);\n\n  try {\n    const isConnected = await apiService.checkServerHealth();\n\n    set(connectionStatusAtom, {\n      ...currentStatus,\n      connected: isConnected,\n      lastConnected: isConnected ? Date.now() : currentStatus.lastConnected,\n      lastError: isConnected ? null : currentStatus.lastError,\n    });\n\n    return isConnected;\n  } catch (error) {\n    set(connectionStatusAtom, {\n      ...currentStatus,\n      connected: false,\n      lastError: error instanceof Error ? error.message : String(error),\n    });\n\n    return false;\n  }\n});\n\n/**\n * Initialize connection monitoring\n */\nexport const initConnectionMonitoringAction = atom(null, (get, set) => {\n  // Perform initial check\n  set(checkConnectionStatusAction);\n\n  // Set up socket event listeners\n  socketService.on(SOCKET_EVENTS.CONNECT, () => {\n    set(connectionStatusAtom, (prev) => ({\n      ...prev,\n      connected: true,\n      lastConnected: Date.now(),\n      lastError: null,\n      reconnecting: false,\n    }));\n  });\n\n  socketService.on(SOCKET_EVENTS.DISCONNECT, (reason) => {\n    set(connectionStatusAtom, (prev) => ({\n      ...prev,\n      connected: false,\n      lastError: `Disconnected: ${reason}`,\n      reconnecting: true,\n    }));\n  });\n\n  socketService.on(SOCKET_EVENTS.RECONNECT_ATTEMPT, () => {\n    set(connectionStatusAtom, (prev) => ({\n      ...prev,\n      reconnecting: true,\n    }));\n  });\n\n  socketService.on(SOCKET_EVENTS.RECONNECT_FAILED, () => {\n    set(connectionStatusAtom, (prev) => ({\n      ...prev,\n      connected: false,\n      reconnecting: false,\n      lastError: 'Failed to reconnect after multiple attempts',\n    }));\n  });\n\n  // Set up periodic health checks\n  const intervalId = setInterval(() => {\n    set(checkConnectionStatusAction);\n  }, 30000); // Check every 30 seconds\n\n  // Return cleanup function\n  return () => {\n    clearInterval(intervalId);\n    socketService.off(SOCKET_EVENTS.CONNECT, () => {});\n    socketService.off(SOCKET_EVENTS.DISCONNECT, () => {});\n    socketService.off(SOCKET_EVENTS.RECONNECT_ATTEMPT, () => {});\n    socketService.off(SOCKET_EVENTS.RECONNECT_FAILED, () => {});\n  };\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { atom, Setter, Getter } from 'jotai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AgentEventStream, ToolResult, Message } from '@/common/types';\nimport { determineToolType } from '@/common/utils/formatters';\nimport { messagesAtom } from '../atoms/message';\nimport { toolResultsAtom, toolCallResultMap } from '../atoms/tool';\nimport { isProcessingAtom, activePanelContentAtom, modelInfoAtom } from '../atoms/ui';\nimport { plansAtom, PlanKeyframe } from '../atoms/plan';\nimport { replayStateAtom } from '../atoms/replay';\nimport { ChatCompletionContentPartImage } from '@multimodal/agent-interface';\n\n// 存储工具调用参数的映射表 (不是 Atom，是内部缓存)\nconst toolCallArgumentsMap = new Map<string, any>();\n\n/**\n * Process a single event and update the appropriate state atoms\n */\nexport const processEventAction = atom(\n  null,\n  (get, set, params: { sessionId: string; event: AgentEventStream.Event }) => {\n    const { sessionId, event } = params;\n    const replayState = get(replayStateAtom);\n    const isReplayMode = replayState.isActive;\n\n    switch (event.type) {\n      case 'user_message':\n        handleUserMessage(set, sessionId, event);\n        break;\n\n      case 'assistant_message':\n        handleAssistantMessage(get, set, sessionId, event);\n        break;\n\n      case 'assistant_streaming_message':\n        if (!isReplayMode) {\n          handleStreamingMessage(get, set, sessionId, event);\n        }\n        break;\n\n      case 'assistant_thinking_message':\n      case 'assistant_streaming_thinking_message':\n        handleThinkingMessage(get, set, sessionId, event);\n        break;\n\n      case 'tool_call':\n        handleToolCall(set, sessionId, event);\n        break;\n\n      case 'tool_result':\n        handleToolResult(set, sessionId, event);\n        break;\n\n      case 'system':\n        handleSystemMessage(set, sessionId, event);\n        break;\n\n      case 'environment_input':\n        handleEnvironmentInput(get, set, sessionId, event);\n        break;\n\n      case 'agent_run_start':\n        if (event.provider || event.model) {\n          set(modelInfoAtom, {\n            provider: event.provider || '',\n            model: event.model || '',\n          });\n        }\n        set(isProcessingAtom, true);\n        break;\n\n      case 'agent_run_end':\n        set(isProcessingAtom, false);\n        break;\n\n      case 'plan_start':\n        handlePlanStart(set, sessionId, event);\n        break;\n\n      case 'plan_update':\n        handlePlanUpdate(set, sessionId, event);\n        break;\n\n      case 'plan_finish':\n        handlePlanFinish(set, sessionId, event);\n        break;\n\n      case 'final_answer':\n        handleFinalAnswer(get, set, sessionId, event);\n        break;\n\n      case 'final_answer_streaming':\n        if (!isReplayMode) {\n          handleFinalAnswerStreaming(get, set, sessionId, event);\n        }\n        break;\n    }\n  },\n);\n\nexport const updateProcessingStatusAction = atom(\n  null,\n  (get, set, status: { isProcessing: boolean; state?: string }) => {\n    // Update processing state\n    set(isProcessingAtom, !!status.isProcessing);\n  },\n);\n\n/**\n * Handle user message event\n */\nfunction handleUserMessage(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.UserMessageEvent,\n): void {\n  const userMessage: Message = {\n    id: event.id,\n    role: 'user',\n    content: event.content,\n    timestamp: event.timestamp,\n  };\n\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, userMessage],\n    };\n  });\n\n  // Check for images in user message and set active panel content if found\n  if (Array.isArray(event.content)) {\n    const images = event.content.filter((part) => part.type === 'image_url');\n    if (images.length > 0) {\n      set(activePanelContentAtom, {\n        type: 'image',\n        source: images[0].image_url.url,\n        title: 'User Upload',\n        timestamp: Date.now(),\n      });\n    }\n  }\n}\n\n/**\n * Handle assistant message event (complete message)\n */\nfunction handleAssistantMessage(\n  get: any,\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.AssistantMessageEvent,\n): void {\n  // 获取消息ID\n  const messageId = event.messageId;\n\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n\n    // 检查是否已存在相同messageId的消息\n    if (messageId) {\n      const existingMessageIndex = sessionMessages.findIndex((msg) => msg.messageId === messageId);\n\n      // 如果找到了现有消息，更新它而不是添加新消息\n      if (existingMessageIndex !== -1) {\n        const updatedMessages = [...sessionMessages];\n        updatedMessages[existingMessageIndex] = {\n          ...updatedMessages[existingMessageIndex],\n          content: event.content,\n          timestamp: event.timestamp,\n          toolCalls: event.toolCalls,\n          finishReason: event.finishReason,\n          isStreaming: false,\n        };\n\n        return {\n          ...prev,\n          [sessionId]: updatedMessages,\n        };\n      }\n    }\n\n    // 没有找到现有消息，添加新消息\n    return {\n      ...prev,\n      [sessionId]: [\n        ...sessionMessages,\n        {\n          id: event.id,\n          role: 'assistant',\n          content: event.content,\n          timestamp: event.timestamp,\n          toolCalls: event.toolCalls,\n          finishReason: event.finishReason,\n          messageId: messageId,\n        },\n      ],\n    };\n  });\n\n  if (event.finishReason !== 'tool_calls') {\n    // 检查是否需要关联最近的环境输入\n    const currentMessages = get(messagesAtom)[sessionId] || [];\n\n    // 从后往前查找最近的环境输入\n    for (let i = currentMessages.length - 1; i >= 0; i--) {\n      const msg = currentMessages[i];\n      if (msg.role === 'environment' && Array.isArray(msg.content)) {\n        const imageContent = msg.content.find(\n          (item) => item.type === 'image_url' && item.image_url && item.image_url.url,\n        );\n\n        if (imageContent) {\n          set(activePanelContentAtom, {\n            type: 'image',\n            source: msg.content,\n            title: msg.description || 'Final Browser State',\n            timestamp: msg.timestamp,\n            environmentId: msg.id,\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  set(isProcessingAtom, false);\n}\n\n/**\n * Handle streaming message event (incremental content)\n */\nfunction handleStreamingMessage(\n  get: any,\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.AssistantStreamingMessageEvent,\n): void {\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    const messageIdToFind = event.messageId;\n    let existingMessageIndex = -1;\n\n    // 优先按messageId查找\n    if (messageIdToFind) {\n      existingMessageIndex = sessionMessages.findIndex((msg) => msg.messageId === messageIdToFind);\n    }\n    // 没有messageId或未找到，尝试查找标记为streaming的最后一条消息\n    else if (sessionMessages.length > 0) {\n      const lastMessageIndex = sessionMessages.length - 1;\n      const lastMessage = sessionMessages[lastMessageIndex];\n      if (lastMessage && lastMessage.isStreaming) {\n        existingMessageIndex = lastMessageIndex;\n      }\n    }\n\n    // 更新现有消息\n    if (existingMessageIndex !== -1) {\n      const existingMessage = sessionMessages[existingMessageIndex];\n      const updatedMessage = {\n        ...existingMessage,\n        content:\n          typeof existingMessage.content === 'string'\n            ? existingMessage.content + event.content\n            : event.content,\n        isStreaming: !event.isComplete,\n        toolCalls: event.toolCalls || existingMessage.toolCalls,\n      };\n\n      return {\n        ...prev,\n        [sessionId]: [\n          ...sessionMessages.slice(0, existingMessageIndex),\n          updatedMessage,\n          ...sessionMessages.slice(existingMessageIndex + 1),\n        ],\n      };\n    }\n\n    // 创建新消息\n    const newMessage: Message = {\n      id: event.id || uuidv4(),\n      role: 'assistant',\n      content: event.content,\n      timestamp: event.timestamp,\n      isStreaming: !event.isComplete,\n      toolCalls: event.toolCalls,\n      messageId: event.messageId,\n    };\n\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, newMessage],\n    };\n  });\n\n  if (event.isComplete) {\n    set(isProcessingAtom, false);\n  }\n}\n\n/**\n * Handle thinking message event\n */\nfunction handleThinkingMessage(\n  get: any,\n  set: Setter,\n  sessionId: string,\n  event:\n    | AgentEventStream.AssistantThinkingMessageEvent\n    | AgentEventStream.AssistantStreamingThinkingMessageEvent,\n): void {\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    const lastAssistantIndex = [...sessionMessages]\n      .reverse()\n      .findIndex((m) => m.role === 'assistant');\n\n    if (lastAssistantIndex !== -1) {\n      const actualIndex = sessionMessages.length - 1 - lastAssistantIndex;\n      const message = sessionMessages[actualIndex];\n\n      return {\n        ...prev,\n        [sessionId]: [\n          ...sessionMessages.slice(0, actualIndex),\n          { ...message, thinking: event.content },\n          ...sessionMessages.slice(actualIndex + 1),\n        ],\n      };\n    }\n\n    return prev;\n  });\n}\n\n/**\n * Handle tool call event - store arguments for later use\n */\nfunction handleToolCall(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.ToolCallEvent,\n): void {\n  // 保存工具调用的参数信息以便后续使用\n  if (event.toolCallId && event.arguments) {\n    toolCallArgumentsMap.set(event.toolCallId, event.arguments);\n  }\n}\n\nfunction handleToolResult(set: Setter, sessionId: string, event: AgentEventStream.ToolResultEvent) {\n  // 获取之前存储的参数信息\n  const args = toolCallArgumentsMap.get(event.toolCallId);\n\n  const result: ToolResult = {\n    id: uuidv4(),\n    toolCallId: event.toolCallId,\n    name: event.name,\n    content: event.content,\n    timestamp: event.timestamp,\n    error: event.error,\n    type: determineToolType(event.name, event.content),\n    arguments: args,\n    _extra: event._extra,\n  };\n\n  // 1. 先更新消息atom和工具结果 - 确保chat UI能立即响应\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n\n    // 找到对应的消息并添加toolResults\n    const messageIndex = [...sessionMessages]\n      .reverse()\n      .findIndex((m) => m.toolCalls?.some((tc) => tc.id === result.toolCallId));\n\n    if (messageIndex !== -1) {\n      const actualIndex = sessionMessages.length - 1 - messageIndex;\n      const message = sessionMessages[actualIndex];\n      const toolResults = message.toolResults || [];\n\n      const updatedMessage = {\n        ...message,\n        toolResults: [...toolResults, result],\n      };\n\n      return {\n        ...prev,\n        [sessionId]: [\n          ...sessionMessages.slice(0, actualIndex),\n          updatedMessage,\n          ...sessionMessages.slice(actualIndex + 1),\n        ],\n      };\n    }\n\n    return prev;\n  });\n\n  // 2. 同时更新工具结果atom\n  set(toolResultsAtom, (prev: Record<string, ToolResult[]>) => {\n    const sessionResults = prev[sessionId] || [];\n    return {\n      ...prev,\n      [sessionId]: [...sessionResults, result],\n    };\n  });\n\n  // 3. 最后更新workspace面板内容 - 保持时序一致\n  if (result.type === 'browser_vision_control') {\n    set(activePanelContentAtom, (prev) => {\n      if (prev && prev.type === 'image' && prev.environmentId) {\n        // 在这里添加环境ID到已处理列表，避免重复渲染\n        const environmentId = prev.environmentId;\n\n        return {\n          ...prev,\n          type: 'browser_vision_control',\n          source: event.content,\n          title: prev.title,\n          timestamp: event.timestamp,\n          toolCallId: event.toolCallId,\n          error: event.error,\n          arguments: args,\n          originalContent: prev.source,\n\n          environmentId: environmentId,\n          processedEnvironmentIds: [environmentId], // 新增：记录已处理的环境ID\n        };\n      } else {\n        return {\n          type: result.type,\n          source: result.content,\n          title: result.name,\n          timestamp: result.timestamp,\n          toolCallId: result.toolCallId,\n          error: result.error,\n          arguments: args,\n        };\n      }\n    });\n  } else {\n    set(activePanelContentAtom, {\n      type: result.type,\n      source: result.content,\n      title: result.name,\n      timestamp: result.timestamp,\n      toolCallId: result.toolCallId,\n      error: result.error,\n      arguments: args,\n      _extra: result._extra,\n    });\n  }\n\n  // Store in the map for future reference\n  toolCallResultMap.set(result.toolCallId, result);\n}\n\n/**\n * Handle system message event\n */\nfunction handleSystemMessage(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.Event & { message: string; level?: string },\n): void {\n  const systemMessage: Message = {\n    id: uuidv4(),\n    role: 'system',\n    content: event.message,\n    timestamp: event.timestamp || Date.now(),\n  };\n\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, systemMessage],\n    };\n  });\n}\n\n/**\n * Handle environment input event\n * Adds it to messages but doesn't set it as active panel content\n */\nfunction handleEnvironmentInput(\n  get: Getter,\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.EnvironmentInputEvent,\n): void {\n  const environmentMessage: Message = {\n    id: event.id,\n    role: 'environment',\n    content: event.content,\n    timestamp: event.timestamp,\n    description: event.description || 'Environment Input',\n  };\n\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, environmentMessage],\n    };\n  });\n  // 检查是否包含图片内容并直接设置为活动面板内容\n  if (Array.isArray(event.content)) {\n    const imageContent = event.content.find(\n      (item) => item.type === 'image_url' && item.image_url && item.image_url.url,\n    ) as ChatCompletionContentPartImage;\n\n    if (imageContent && imageContent.image_url) {\n      // 获取当前面板状态\n      const currentPanel = get(activePanelContentAtom);\n\n      // 只有当前面板是 browser_vision_control 类型时才更新\n      if (currentPanel && currentPanel.type === 'browser_vision_control') {\n        set(activePanelContentAtom, {\n          ...currentPanel,\n          type: 'browser_vision_control',\n          title: `${currentPanel.title} · Screenshot Update`,\n          timestamp: event.timestamp,\n          originalContent: event.content,\n          environmentId: event.id,\n        });\n      }\n      // 不是 browser_vision_control 类型时完全跳过 set 操作\n      // 这样避免了 Browser Screenshot 被重复渲染\n    }\n  }\n}\n\n/**\n * Handle plan start event\n */\nfunction handlePlanStart(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.PlanStartEvent,\n): void {\n  set(plansAtom, (prev: Record<string, any>) => ({\n    ...prev,\n    [sessionId]: {\n      steps: [],\n      isComplete: false,\n      summary: null,\n      hasGeneratedPlan: true,\n      keyframes: [], // Initialize empty keyframes array\n    },\n  }));\n}\n\n/**\n * Handle plan update event\n */\nfunction handlePlanUpdate(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.PlanUpdateEvent,\n): void {\n  console.log('Plan update event:', event);\n  set(plansAtom, (prev: Record<string, any>) => {\n    const currentPlan = prev[sessionId] || {\n      steps: [],\n      isComplete: false,\n      summary: null,\n      hasGeneratedPlan: true,\n      keyframes: [],\n    };\n\n    // Create a new keyframe for this update\n    const newKeyframe: PlanKeyframe = {\n      timestamp: event.timestamp || Date.now(),\n      steps: event.steps,\n      isComplete: false,\n      summary: null,\n    };\n\n    // Add the keyframe to the history\n    const keyframes = [...(currentPlan.keyframes || []), newKeyframe];\n\n    return {\n      ...prev,\n      [sessionId]: {\n        ...currentPlan,\n        steps: event.steps,\n        hasGeneratedPlan: true,\n        keyframes,\n      },\n    };\n  });\n}\n\n/**\n * Handle plan finish event\n */\nfunction handlePlanFinish(\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.Event & { sessionId: string; summary: string },\n): void {\n  console.log('Plan finish event:', event);\n  set(plansAtom, (prev: Record<string, any>) => {\n    const currentPlan = prev[sessionId] || {\n      steps: [],\n      isComplete: false,\n      summary: null,\n      hasGeneratedPlan: true,\n      keyframes: [],\n    };\n\n    // Create a final keyframe for the completed plan\n    const finalKeyframe: PlanKeyframe = {\n      timestamp: event.timestamp || Date.now(),\n      steps: currentPlan.steps,\n      isComplete: true,\n      summary: event.summary,\n    };\n\n    // Add the final keyframe to the history\n    const keyframes = [...(currentPlan.keyframes || []), finalKeyframe];\n\n    return {\n      ...prev,\n      [sessionId]: {\n        ...currentPlan,\n        isComplete: true,\n        summary: event.summary,\n        keyframes,\n      },\n    };\n  });\n}\n\n/**\n * Handle final answer event (complete answer/report)\n */\nfunction handleFinalAnswer(\n  get: any,\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.FinalAnswerEvent,\n): void {\n  const messageId = event.messageId || `final-answer-${uuidv4()}`;\n\n  // 始终将内容当作研究报告处理，移除JSON_DATA状态\n  // 设置活动面板内容为研究报告\n  set(activePanelContentAtom, {\n    type: 'research_report',\n    source: event.content,\n    title: event.title || 'Research Report',\n    timestamp: event.timestamp,\n    isDeepResearch: true,\n    messageId,\n  });\n\n  // 添加消息到聊天引用报告\n  const finalAnswerMessage: Message = {\n    id: event.id || uuidv4(),\n    role: 'final_answer',\n    content: event.content, // 存储完整内容以便后续访问\n    timestamp: event.timestamp,\n    messageId,\n    isDeepResearch: true,\n    title: event.title || 'Research Report',\n  };\n\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, finalAnswerMessage],\n    };\n  });\n\n  // 标记处理完成\n  set(isProcessingAtom, false);\n}\n\nfunction handleFinalAnswerStreaming(\n  get: any,\n  set: Setter,\n  sessionId: string,\n  event: AgentEventStream.Event & {\n    content: string;\n    isDeepResearch: boolean;\n    isComplete?: boolean;\n    messageId?: string;\n    title?: string;\n  },\n): void {\n  const messageId = event.messageId || `final-answer-${uuidv4()}`;\n\n  // 从当前消息列表中查找已有的相同 messageId 的消息\n  const messages = get(messagesAtom)[sessionId] || [];\n  const existingMessageIndex = messages.findIndex((msg) => msg.messageId === messageId);\n\n  // 当处理一系列流式事件时，将内容追加到现有消息，或创建新消息\n  set(messagesAtom, (prev: Record<string, Message[]>) => {\n    const sessionMessages = prev[sessionId] || [];\n\n    // 如果找到现有消息，则更新它\n    if (existingMessageIndex >= 0) {\n      const existingMessage = sessionMessages[existingMessageIndex];\n      const updatedMessage = {\n        ...existingMessage,\n        content:\n          typeof existingMessage.content === 'string'\n            ? existingMessage.content + event.content\n            : event.content,\n        isStreaming: !event.isComplete,\n        timestamp: event.timestamp,\n      };\n\n      return {\n        ...prev,\n        [sessionId]: [\n          ...sessionMessages.slice(0, existingMessageIndex),\n          updatedMessage,\n          ...sessionMessages.slice(existingMessageIndex + 1),\n        ],\n      };\n    }\n\n    // 否则创建新消息\n    const newMessage: Message = {\n      id: event.id || uuidv4(),\n      role: 'final_answer',\n      content: event.content,\n      timestamp: event.timestamp,\n      messageId,\n      isDeepResearch: true,\n      isStreaming: !event.isComplete,\n      title: event.title || 'Research Report',\n    };\n\n    return {\n      ...prev,\n      [sessionId]: [...sessionMessages, newMessage],\n    };\n  });\n\n  // 更新活动面板内容 - 同步面板与消息状态\n  set(activePanelContentAtom, (prev: any) => {\n    // 如果是新流或不同的messageId，重新开始\n    if (!prev || prev.type !== 'research_report' || prev.messageId !== messageId) {\n      return {\n        role: 'assistant',\n        type: 'research_report',\n        source: event.content,\n        title: event.title || 'Research Report (Generating...)',\n        timestamp: event.timestamp,\n        isDeepResearch: true,\n        messageId,\n        isStreaming: !event.isComplete,\n      };\n    }\n\n    // 否则追加到现有内容\n    return {\n      ...prev,\n      source: prev.source + event.content,\n      isStreaming: !event.isComplete,\n      timestamp: event.timestamp,\n      title: event.title || prev.title,\n    };\n  });\n\n  // 如果这是第一个数据块，也添加一条消息到聊天\n  const prevActivePanelContent = get(activePanelContentAtom);\n  if (!prevActivePanelContent || prevActivePanelContent.messageId !== messageId) {\n    const initialMessage: Message = {\n      id: event.id || uuidv4(),\n      role: 'final_answer',\n      content: event.content, // 存储初始内容\n      timestamp: event.timestamp,\n      messageId,\n      isDeepResearch: true,\n      isStreaming: !event.isComplete,\n      title: event.title || 'Research Report',\n    };\n\n    set(messagesAtom, (prev: Record<string, Message[]>) => {\n      const sessionMessages = prev[sessionId] || [];\n      return {\n        ...prev,\n        [sessionId]: [...sessionMessages, initialMessage],\n      };\n    });\n  } else if (event.isComplete) {\n    // 当流式生成完成时，更新消息的完整内容\n    const fullContent = get(activePanelContentAtom).source;\n\n    set(messagesAtom, (prev: Record<string, Message[]>) => {\n      const sessionMessages = prev[sessionId] || [];\n      const messageIndex = sessionMessages.findIndex((msg) => msg.messageId === messageId);\n\n      if (messageIndex >= 0) {\n        const updatedMessages = [...sessionMessages];\n        updatedMessages[messageIndex] = {\n          ...updatedMessages[messageIndex],\n          content: fullContent,\n          isStreaming: false,\n          title: event.title || updatedMessages[messageIndex].title || 'Research Report',\n        };\n\n        return {\n          ...prev,\n          [sessionId]: updatedMessages,\n        };\n      }\n\n      return prev;\n    });\n  }\n\n  // 如果这是最后一个数据块，标记处理完成\n  if (event.isComplete) {\n    set(isProcessingAtom, false);\n  }\n}\n","import { atom } from 'jotai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { apiService } from '../../services/apiService';\nimport { sessionsAtom, activeSessionIdAtom } from '../atoms/session';\nimport { messagesAtom } from '../atoms/message';\nimport { toolResultsAtom, toolCallResultMap } from '../atoms/tool';\nimport { isProcessingAtom, activePanelContentAtom, modelInfoAtom } from '../atoms/ui';\nimport { processEventAction } from './eventProcessor';\nimport { Message } from '@/common/types';\nimport { connectionStatusAtom } from '../atoms/ui';\nimport { replayStateAtom } from '../atoms/replay';\nimport { ChatCompletionContentPart, AgentEventStream } from '@multimodal/agent-interface';\n\n/**\n * Add a session metadata cache to store model information for each session\n */\nconst sessionMetadataCache = new Map<\n  string,\n  {\n    modelInfo?: { provider: string; model: string };\n    // We can add other metadata here that you want to persist across sessions.\n  }\n>();\n\n/**\n * Load all available sessions\n */\nexport const loadSessionsAction = atom(null, async (get, set) => {\n  try {\n    const loadedSessions = await apiService.getSessions();\n    set(sessionsAtom, loadedSessions);\n  } catch (error) {\n    console.error('Failed to load sessions:', error);\n    throw error;\n  }\n});\n\n/**\n * Create a new session\n */\nexport const createSessionAction = atom(null, async (get, set) => {\n  try {\n    const newSession = await apiService.createSession();\n\n    // Add to sessions list\n    set(sessionsAtom, (prev) => [newSession, ...prev]);\n\n    // Initialize session data\n    set(messagesAtom, (prev) => ({\n      ...prev,\n      [newSession.id]: [],\n    }));\n\n    set(toolResultsAtom, (prev) => ({\n      ...prev,\n      [newSession.id]: [],\n    }));\n\n    // Clear workspace panel content to show empty state\n    set(activePanelContentAtom, null);\n\n    // Set as active session\n    set(activeSessionIdAtom, newSession.id);\n\n    return newSession.id;\n  } catch (error) {\n    console.error('Failed to create session:', error);\n    throw error;\n  }\n});\n\n/**\n * Set the active session\n * 简化加载逻辑，移除恢复会话的复杂性\n */\nexport const setActiveSessionAction = atom(null, async (get, set, sessionId: string) => {\n  try {\n    // 检查是否已经是活动会话\n    const currentActiveSessionId = get(activeSessionIdAtom);\n    if (currentActiveSessionId === sessionId) {\n      console.log(`Session ${sessionId} is already active, skipping load`);\n      return;\n    }\n\n    // 检查回放状态并退出回放模式（除非是同一会话）\n    const replayState = get(replayStateAtom);\n    if (replayState.isActive) {\n      console.log('Exiting replay mode due to session change');\n      set(replayStateAtom, {\n        isActive: false,\n        isPaused: true,\n        events: [],\n        currentEventIndex: -1,\n        startTimestamp: null,\n        endTimestamp: null,\n        playbackSpeed: 1,\n        visibleTimeWindow: null,\n        processedEvents: {},\n      });\n    }\n\n    // 直接获取会话详情，不需要检查 active 状态\n    const sessionDetails = await apiService.getSessionDetails(sessionId);\n\n    // 获取当前会话状态以更新 isProcessing 状态\n    try {\n      const status = await apiService.getSessionStatus(sessionId);\n      set(isProcessingAtom, status.isProcessing);\n    } catch (error) {\n      console.warn('Failed to get session status:', error);\n      set(isProcessingAtom, false);\n    }\n\n    // 清理工具调用映射缓存\n    toolCallResultMap.clear();\n\n    // Check if the session message is loaded\n    const messages = get(messagesAtom);\n    const hasExistingMessages = messages[sessionId] && messages[sessionId].length > 0;\n\n    if (!hasExistingMessages) {\n      console.log(`Loading events for session ${sessionId}`);\n      const events = await apiService.getSessionEvents(sessionId);\n\n      // Pre-process streaming events to ensure correct continuity\n      const processedEvents = preprocessStreamingEvents(events);\n\n      // Process each event to construct messages and tool results\n      for (const event of processedEvents) {\n        set(processEventAction, { sessionId, event });\n      }\n\n      // Cache key session metadata\n      const runStartEvent = events.find((e) => e.type === 'agent_run_start');\n      if (runStartEvent && ('provider' in runStartEvent || 'model' in runStartEvent)) {\n        sessionMetadataCache.set(sessionId, {\n          modelInfo: {\n            provider: runStartEvent.provider || '',\n            model: runStartEvent.model || '',\n          },\n        });\n      }\n    } else {\n      console.log(`Session ${sessionId} already has messages, skipping event loading`);\n      const cachedMetadata = sessionMetadataCache.get(sessionId);\n      if (cachedMetadata?.modelInfo) {\n        console.log(`Restoring model info from cache for session ${sessionId}`);\n        set(modelInfoAtom, cachedMetadata.modelInfo);\n      } else {\n        console.log(\n          `No cached model info for session ${sessionId}, loading events to find model info`,\n        );\n\n        // If not in the cache, the load event only looks for model information\n        try {\n          const events = await apiService.getSessionEvents(sessionId);\n          const runStartEvent = events.find((e) => e.type === 'agent_run_start');\n          if (runStartEvent && ('provider' in runStartEvent || 'model' in runStartEvent)) {\n            const modelInfo = {\n              provider: runStartEvent.provider || '',\n              model: runStartEvent.model || '',\n            };\n\n            // Update model information status\n            set(modelInfoAtom, modelInfo);\n\n            // Cache for future use\n            sessionMetadataCache.set(sessionId, { modelInfo });\n            console.log(`Found and cached model info for session ${sessionId}:`, modelInfo);\n          }\n        } catch (error) {\n          console.warn(`Failed to load events for model info recovery:`, error);\n        }\n      }\n    }\n\n    // 设置为活动会话\n    set(activeSessionIdAtom, sessionId);\n  } catch (error) {\n    console.error('Failed to set active session:', error);\n    set(connectionStatusAtom, (prev) => ({\n      ...prev,\n      connected: false,\n      lastError: error instanceof Error ? error.message : String(error),\n    }));\n    throw error;\n  }\n});\n\n/**\n * Update session metadata\n */\nexport const updateSessionAction = atom(\n  null,\n  async (get, set, params: { sessionId: string; updates: { name?: string; tags?: string[] } }) => {\n    const { sessionId, updates } = params;\n\n    try {\n      const updatedSession = await apiService.updateSessionMetadata(sessionId, updates);\n\n      // Update session in the list\n      set(sessionsAtom, (prev) =>\n        prev.map((session) =>\n          session.id === sessionId ? { ...session, ...updatedSession } : session,\n        ),\n      );\n\n      return updatedSession;\n    } catch (error) {\n      console.error('Failed to update session:', error);\n      throw error;\n    }\n  },\n);\n\n/**\n * 预处理事件，确保流式事件按正确顺序处理\n */\nfunction preprocessStreamingEvents(events: AgentEventStream.Event[]): AgentEventStream.Event[] {\n  // 对流式消息进行整理\n  const messageStreams: Record<string, AgentEventStream.Event[]> = {};\n\n  // 收集所有流式事件，按messageId分组\n  events.forEach((event) => {\n    if (event.type === 'final_answer_streaming' && 'messageId' in event) {\n      const messageId = event.messageId as string;\n      if (!messageStreams[messageId]) {\n        messageStreams[messageId] = [];\n      }\n      messageStreams[messageId].push(event);\n    }\n  });\n\n  // 返回预处理后的事件，确保流式事件以正确顺序处理\n  return events;\n}\n\n/**\n * Delete a session\n */\nexport const deleteSessionAction = atom(null, async (get, set, sessionId: string) => {\n  try {\n    const success = await apiService.deleteSession(sessionId);\n    const activeSessionId = get(activeSessionIdAtom);\n\n    if (success) {\n      // 从会话元数据缓存中删除\n      sessionMetadataCache.delete(sessionId);\n\n      // Remove from sessions list\n      set(sessionsAtom, (prev) => prev.filter((session) => session.id !== sessionId));\n\n      // Clear active session if it was deleted\n      if (activeSessionId === sessionId) {\n        set(activeSessionIdAtom, null);\n      }\n\n      // Clear session data\n      set(messagesAtom, (prev) => {\n        const newMessages = { ...prev };\n        delete newMessages[sessionId];\n        return newMessages;\n      });\n\n      set(toolResultsAtom, (prev) => {\n        const newResults = { ...prev };\n        delete newResults[sessionId];\n        return newResults;\n      });\n    }\n\n    return success;\n  } catch (error) {\n    console.error('Failed to delete session:', error);\n    throw error;\n  }\n});\n\n/**\n * Send a message in the current session\n */\nexport const sendMessageAction = atom(\n  null,\n  async (get, set, content: string | ChatCompletionContentPart[]) => {\n    const activeSessionId = get(activeSessionIdAtom);\n\n    if (!activeSessionId) {\n      throw new Error('No active session');\n    }\n\n    // 明确设置处理状态\n\n    set(isProcessingAtom, true);\n\n    // 添加用户消息到状态\n    const userMessage: Message = {\n      id: uuidv4(),\n      role: 'user',\n      content,\n      timestamp: Date.now(),\n    };\n\n    set(messagesAtom, (prev) => {\n      const sessionMessages = prev[activeSessionId] || [];\n      return {\n        ...prev,\n        [activeSessionId]: [...sessionMessages, userMessage],\n      };\n    });\n\n    // 立即更新会话名称，使用用户查询作为 Summary\n    // 这样即使后续更新失败也至少有一个基本的名称\n    try {\n      // 检查是否是第一条消息，如果是则直接用查询内容作为会话名称\n      const messages = get(messagesAtom)[activeSessionId] || [];\n      if (messages.length <= 2) {\n        // 算上刚刚添加的用户消息\n        let summary = '';\n        if (typeof content === 'string') {\n          summary = content.length > 50 ? content.substring(0, 47) + '...' : content;\n        } else {\n          // 从多模态内容中提取文本部分\n          const textPart = content.find((part) => part.type === 'text');\n          if (textPart && 'text' in textPart) {\n            summary =\n              textPart.text.length > 50 ? textPart.text.substring(0, 47) + '...' : textPart.text;\n          } else {\n            summary = 'Image message';\n          }\n        }\n\n        await apiService.updateSessionMetadata(activeSessionId, { name: summary });\n\n        // 更新 sessions atom\n        set(sessionsAtom, (prev) =>\n          prev.map((session) =>\n            session.id === activeSessionId ? { ...session, name: summary } : session,\n          ),\n        );\n      }\n    } catch (error) {\n      console.log('Failed to update initial summary, continuing anyway:', error);\n      // 错误不中断主流程\n    }\n\n    try {\n      // 使用流式查询\n      await apiService.sendStreamingQuery(activeSessionId, content, (event) => {\n        // 处理每个事件\n        set(processEventAction, { sessionId: activeSessionId, event });\n\n        // 确保状态保持为处理中，直到明确收到结束事件\n        if (event.type !== 'agent_run_end' && event.type !== 'assistant_message') {\n          set(isProcessingAtom, true);\n        }\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // 错误时重置处理状态\n      set(isProcessingAtom, false);\n      throw error;\n    }\n  },\n);\n\n/**\n * Abort the current running query\n */\nexport const abortQueryAction = atom(null, async (get, set) => {\n  const activeSessionId = get(activeSessionIdAtom);\n\n  if (!activeSessionId) {\n    return false;\n  }\n\n  try {\n    const success = await apiService.abortQuery(activeSessionId);\n\n    if (success) {\n      set(isProcessingAtom, false);\n\n      // Add system message about abort\n      const abortMessage: Message = {\n        id: uuidv4(),\n        role: 'system',\n        content: 'The operation was aborted.',\n        timestamp: Date.now(),\n      };\n\n      set(messagesAtom, (prev) => {\n        const sessionMessages = prev[activeSessionId] || [];\n        return {\n          ...prev,\n          [activeSessionId]: [...sessionMessages, abortMessage],\n        };\n      });\n    }\n\n    return success;\n  } catch (error) {\n    console.error('Error aborting query:', error);\n    return false;\n  }\n});\n\n/**\n * Check the current status of a session\n */\nexport const checkSessionStatusAction = atom(null, async (get, set, sessionId: string) => {\n  if (!sessionId) return;\n\n  try {\n    const status = await apiService.getSessionStatus(sessionId);\n    set(isProcessingAtom, status.isProcessing);\n\n    return status;\n  } catch (error) {\n    console.error('Failed to check session status:', error);\n    // 错误时不更新处理状态，避免误报\n  }\n});\n\n/**\n * Handle the end of a conversation\n * 仍然保留此函数，但减少其重要性，避免更新失败带来的影响\n */\nasync function handleConversationEnd(get: any, set: any, sessionId: string): Promise<void> {\n  // 我们不再依赖这个函数来设置会话名称，但仍然保留它作为备份机制\n  const allMessages = get(messagesAtom)[sessionId] || [];\n\n  // 只在有足够的消息并且会话没有名称时才尝试生成摘要\n  const sessions = get(sessionsAtom);\n  const currentSession = sessions.find((s) => s.id === sessionId);\n\n  // 如果会话已经有名称，则不需要再生成\n  if (currentSession && currentSession.name) {\n    return;\n  }\n\n  // 只在有实际对话时才尝试生成摘要\n  if (allMessages.length > 1) {\n    try {\n      // 转换消息为 API 期望的格式\n      const apiMessages = allMessages.map((msg: Message) => ({\n        role: msg.role,\n        content: typeof msg.content === 'string' ? msg.content : 'multimodal content',\n      }));\n\n      // 生成摘要\n      const summary = await apiService.generateSummary(sessionId, apiMessages);\n\n      if (summary) {\n        // 更新会话名称\n        await apiService.updateSessionMetadata(sessionId, { name: summary });\n\n        // 更新 sessions atom\n        set(sessionsAtom, (prev: any[]) =>\n          prev.map((session) =>\n            session.id === sessionId ? { ...session, name: summary } : session,\n          ),\n        );\n      }\n    } catch (error) {\n      console.error('Failed to generate or update summary, continuing anyway:', error);\n      // 错误不影响主流程\n    }\n  }\n}\n","import { atom } from 'jotai';\nimport { Message, MessageGroup } from '@/common/types';\n\n/**\n * Atom for storing messages for each session\n * Key is the session ID, value is an array of messages for that session\n */\nexport const messagesAtom = atom<Record<string, Message[]>>({});\n\n/**\n * Atom for storing grouped messages for each session\n * Key is the session ID, value is an array of message groups for that session\n * This is derived from messagesAtom but with messages properly grouped\n */\nexport const groupedMessagesAtom = atom<Record<string, MessageGroup[]>>((get) => {\n  const allMessages = get(messagesAtom);\n  const result: Record<string, MessageGroup[]> = {};\n\n  // Process each session's messages into groups\n  Object.entries(allMessages).forEach(([sessionId, messages]) => {\n    result[sessionId] = createMessageGroups(messages);\n  });\n\n  return result;\n});\n\n/**\n * Group messages into logical conversation groups\n *\n * The grouping logic creates groups based on:\n * 1. User messages always start a new group\n * 2. System messages are standalone groups\n * 3. Assistant/environment messages that belong together are grouped\n * 4. Thinking/processing sequences are properly maintained\n */\nfunction createMessageGroups(messages: Message[]): MessageGroup[] {\n  if (!messages.length) return [];\n\n  const groups: MessageGroup[] = [];\n  let currentGroup: Message[] = [];\n  let currentThinkingSequence: {\n    startIndex: number;\n    messages: Message[];\n  } | null = null;\n\n  // Process messages in order\n  for (let i = 0; i < messages.length; i++) {\n    const message = messages[i];\n\n    // User messages always start a new group\n    if (message.role === 'user') {\n      if (currentGroup.length > 0) {\n        groups.push({ messages: [...currentGroup] });\n      }\n      currentGroup = [message];\n      currentThinkingSequence = null;\n      continue;\n    }\n\n    // System messages are standalone\n    if (message.role === 'system') {\n      if (currentGroup.length > 0) {\n        groups.push({ messages: [...currentGroup] });\n      }\n      groups.push({ messages: [message] });\n      currentGroup = [];\n      currentThinkingSequence = null;\n      continue;\n    }\n\n    // Process assistant and environment messages\n    if (message.role === 'assistant' || message.role === 'environment') {\n      // Check if this is the start of a thinking sequence\n      if (\n        message.role === 'assistant' &&\n        currentGroup.length > 0 &&\n        currentGroup[currentGroup.length - 1].role === 'user' &&\n        (!message.finishReason || message.finishReason !== 'stop')\n      ) {\n        // Create new thinking sequence\n        currentThinkingSequence = {\n          startIndex: currentGroup.length,\n          messages: [message],\n        };\n        currentGroup.push(message);\n        continue;\n      }\n\n      // Continue existing thinking sequence\n      if (currentThinkingSequence && (!message.finishReason || message.finishReason !== 'stop')) {\n        currentThinkingSequence.messages.push(message);\n        currentGroup.push(message);\n        continue;\n      }\n\n      // Handle final answer in a thinking sequence\n      if (message.role === 'assistant' && message.finishReason === 'stop') {\n        if (currentThinkingSequence) {\n          currentThinkingSequence.messages.push(message);\n          currentGroup.push(message);\n          currentThinkingSequence = null;\n          continue;\n        } else {\n          // Standalone final answer\n          currentGroup.push(message);\n          continue;\n        }\n      }\n\n      // Default: add to current group\n      currentGroup.push(message);\n    }\n  }\n\n  // Add the last group if not empty\n  if (currentGroup.length > 0) {\n    groups.push({ messages: [...currentGroup] });\n  }\n\n  return groups;\n}\n","import { atom } from 'jotai';\nimport type { AgentEventStream } from '@multimodal/agent-interface';\n\n/**\n * Plan keyframe interface for storing plan history snapshots\n */\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * Plan state interface for storing plan data by session\n */\nexport interface PlanState {\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n  hasGeneratedPlan: boolean;\n  keyframes?: PlanKeyframe[]; // Added keyframes for history\n}\n\n/**\n * Default empty plan state\n */\nconst DEFAULT_PLAN_STATE: PlanState = {\n  steps: [],\n  isComplete: false,\n  summary: null,\n  hasGeneratedPlan: false,\n  keyframes: [],\n};\n\n/**\n * Atom for storing plans for each session\n */\nexport const plansAtom = atom<Record<string, PlanState>>({});\n\n/**\n * Atom for UI state related to plan display\n */\nexport const planUIStateAtom = atom<{\n  isVisible: boolean;\n}>({\n  isVisible: false,\n});\n","import { atom } from 'jotai';\nimport { AgentEventStream } from '@/common/types';\n\n/**\n * Replay state interface for storing replay data\n *\n * This represents the current state of the replay functionality,\n * including timing, event positioning, and playback control\n */\nexport interface ReplayState {\n  // Active state\n  isActive: boolean;\n  isPaused: boolean;\n\n  // Events and timing\n  events: AgentEventStream.Event[];\n  currentEventIndex: number;\n  startTimestamp: number | null;\n  endTimestamp: number | null;\n\n  // Playback control\n  playbackSpeed: number; // 1 = normal, 2 = 2x speed, etc.\n  autoPlayCountdown: number | null; // Countdown in seconds before autoplay starts\n\n  // Current visible range\n  visibleTimeWindow: {\n    start: number;\n    end: number;\n  } | null;\n\n  // Tracking processed events to avoid duplicates\n  processedEvents?: Record<string, boolean>;\n}\n\n/**\n * Default replay state\n */\nconst DEFAULT_REPLAY_STATE: ReplayState = {\n  isActive: false,\n  isPaused: true,\n  events: [],\n  currentEventIndex: -1,\n  startTimestamp: null,\n  endTimestamp: null,\n  playbackSpeed: 1,\n  autoPlayCountdown: null,\n  visibleTimeWindow: null,\n  processedEvents: {},\n};\n\n/**\n * Atom for storing replay state\n * This manages the entire replay experience including timeline position and events\n */\nexport const replayStateAtom = atom<ReplayState>(DEFAULT_REPLAY_STATE);\n","import { atom } from 'jotai';\nimport { SessionMetadata } from '@/common/types';\n\n/**\n * Atom for storing all sessions\n */\nexport const sessionsAtom = atom<SessionMetadata[]>([]);\n\n/**\n * Atom for the currently active session ID\n */\nexport const activeSessionIdAtom = atom<string | null>(null);\n","import { atom } from 'jotai';\nimport { ToolResult } from '@/common/types';\n\n\n/**\n * Atom for storing tool results for each session\n * Key is the session ID, value is an array of tool results for that session\n */\nexport const toolResultsAtom = atom<Record<string, ToolResult[]>>({});\n\n/**\n * Map to track tool calls to their results (not an atom, just a cache)\n */\nexport const toolCallResultMap = new Map<string, ToolResult>();\n","import { atom } from 'jotai';\nimport { ConnectionStatus, PanelContent } from '@/common/types';\n\n/**\n * Atom for the content currently displayed in the panel\n */\nexport const activePanelContentAtom = atom<PanelContent | null>(null);\n\n/**\n * Atom for server connection status\n */\nexport const connectionStatusAtom = atom<ConnectionStatus>({\n  connected: false,\n  lastConnected: null,\n  lastError: null,\n  reconnecting: false,\n});\n\n/**\n * Atom for model info (provider and model name)\n */\nexport const modelInfoAtom = atom<{ provider: string; model: string }>({\n  provider: '',\n  model: '',\n});\n\n/**\n * Atom for sidebar collapsed state\n */\nexport const sidebarCollapsedAtom = atom<boolean>(true);\n\n/**\n * Atom for workspace panel collapsed state\n */\nexport const workspacePanelCollapsedAtom = atom<boolean>(false);\n\n/**\n * Atom for tracking processing status (when agent is running)\n */\nexport const isProcessingAtom = atom<boolean>(false);\n\n/**\n * Atom for offline mode state (view-only when disconnected)\n */\nexport const offlineModeAtom = atom<boolean>(false);\n","import { getToolCategory, ToolCategory } from '@/common/constants/toolTypes';\n\n/**\n * Format a timestamp to a user-friendly date string\n */\nexport function formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n}\n\n/**\n * Format a date relative to today (Today, Yesterday, or date)\n */\nexport function formatRelativeDate(timestamp: number): string {\n  const date = new Date(timestamp);\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  const yesterday = new Date(today);\n  yesterday.setDate(yesterday.getDate() - 1);\n\n  if (date.toDateString() === today.toDateString()) {\n    return 'Today';\n  } else if (date.toDateString() === yesterday.toDateString()) {\n    return 'Yesterday';\n  } else {\n    return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n  }\n}\n\n/**\n * Determine the tool type from name and content\n */\nexport function determineToolType(name: string, content: any): ToolCategory {\n  // Use the centralized tool category mapping\n  const category = getToolCategory(name);\n\n  // Additional content-based detection for edge cases\n  if (category === 'other') {\n    // Check content patterns for better categorization\n    if (\n      Array.isArray(content) &&\n      content.some(\n        (item) => item.type === 'text' && (item.name === 'RESULTS' || item.name === 'QUERY'),\n      )\n    ) {\n      return 'search';\n    }\n\n    if (\n      Array.isArray(content) &&\n      content.some(\n        (item) => item.type === 'text' && item.text && item.text.startsWith('Navigated to'),\n      )\n    ) {\n      return 'browser';\n    }\n\n    if (\n      content &&\n      ((typeof content === 'object' && content.type === 'image') ||\n        (typeof content === 'string' && content.startsWith('data:image/')))\n    ) {\n      return 'image';\n    }\n\n    if (Array.isArray(content) && content.some((item) => item.type === 'image_url')) {\n      return 'image';\n    }\n\n    if (\n      Array.isArray(content) &&\n      content.some(\n        (item) => item.type === 'text' && (item.name === 'STDOUT' || item.name === 'COMMAND'),\n      )\n    ) {\n      return 'command';\n    }\n  }\n\n  return category;\n}\n","export function wrapMarkdown(content: string, lang = 'md') {\n  return `\\`\\`\\`\\` ${lang}\\n${content}\\n\\`\\`\\`\\``;\n}\n","import { ChatCompletionContentPart } from '../types';\n\n/**\n * Type guard: Check if content is a string\n */\nexport function isStringContent(content: string | ChatCompletionContentPart[]): content is string {\n  return typeof content === 'string';\n}\n\n/**\n * Type guard: Check if content is a multimodal content array\n */\nexport function isMultimodalContent(\n  content: string | ChatCompletionContentPart[],\n): content is ChatCompletionContentPart[] {\n  return Array.isArray(content);\n}\n\n/**\n * Type guard: Check if object has a specific property\n */\nexport function hasProperty<T extends object, K extends string>(\n  obj: T,\n  prop: K,\n): obj is T & Record<K, unknown> {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import './entry.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { AgentTARSWebUI } from './standalone/app';\n\n// Render the new v2 architecture with router support\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n  <React.StrictMode>\n    <AgentTARSWebUI />\n  </React.StrictMode>,\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport hljs from 'highlight.js';\n\nimport { FiCopy, FiCheck, FiInfo, FiFolder } from 'react-icons/fi';\nimport './CodeEditor.css';\n\ninterface CodeEditorProps {\n  code: string;\n  language: string;\n  fileName?: string;\n  filePath?: string;\n  fileSize?: string;\n  readOnly?: boolean;\n  showLineNumbers?: boolean;\n  maxHeight?: string;\n  className?: string;\n  onCopy?: () => void;\n}\n\n/**\n * Professional dark IDE-style code editor component\n *\n * NOTE: This component is designed specifically for code editing and viewing,\n * and should NOT be used for markdown rendering. MarkdownRenderer has its own\n * styling and theming system. The styles in this component are intentionally\n * scoped to avoid conflicts with MarkdownRenderer.\n *\n * Features:\n * - Dark IDE theme matching terminal UI style\n * - Syntax highlighting using highlight.js\n * - Line numbers display\n * - Copy functionality with enhanced file info tooltip\n * - Professional browser-like interface\n */\nexport const CodeEditor: React.FC<CodeEditorProps> = ({\n  code,\n  language,\n  fileName,\n  filePath,\n  fileSize,\n  readOnly = true,\n  showLineNumbers = true,\n  maxHeight = 'none',\n  className = '',\n  onCopy,\n}) => {\n  const codeRef = useRef<HTMLElement>(null);\n  const [copied, setCopied] = useState(false);\n  const [pathCopied, setPathCopied] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  // Enhanced tooltip state management\n  const showTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const fileInfoRef = useRef<HTMLDivElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  // Apply syntax highlighting\n  useEffect(() => {\n    if (codeRef.current) {\n      // Remove existing highlighting\n      codeRef.current.removeAttribute('data-highlighted');\n\n      // Apply new highlighting\n      hljs.highlightElement(codeRef.current);\n    }\n  }, [code, language]);\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) clearTimeout(showTimeoutRef.current);\n      if (hideTimeoutRef.current) clearTimeout(hideTimeoutRef.current);\n    };\n  }, []);\n\n  // Enhanced tooltip interaction handlers\n  const handleFileInfoEnter = () => {\n    if (!filePath && !fileSize) return;\n\n    // Clear any pending hide timeout\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n\n    // Set show timeout for smooth interaction\n    showTimeoutRef.current = setTimeout(() => {\n      setShowTooltip(true);\n    }, 200);\n  };\n\n  const handleFileInfoLeave = () => {\n    // Clear show timeout if still pending\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current);\n      showTimeoutRef.current = null;\n    }\n\n    // Set hide timeout to allow mouse movement to tooltip\n    hideTimeoutRef.current = setTimeout(() => {\n      setShowTooltip(false);\n    }, 150);\n  };\n\n  const handleTooltipEnter = () => {\n    // Clear hide timeout when mouse enters tooltip\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n  };\n\n  const handleTooltipLeave = () => {\n    // Hide immediately when leaving tooltip\n    setShowTooltip(false);\n  };\n\n  // Handle copy functionality\n  const handleCopy = () => {\n    navigator.clipboard.writeText(code);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n    onCopy?.();\n  };\n\n  // Handle path copy functionality\n  const handleCopyPath = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (filePath) {\n      navigator.clipboard.writeText(filePath);\n      setPathCopied(true);\n      setTimeout(() => setPathCopied(false), 2000);\n    }\n  };\n\n  // Split code into lines for line numbers\n  const lines = code.split('\\n');\n  const lineCount = lines.length;\n\n  const displayFileName = fileName || `script.${language}`;\n  const hasFileInfo = filePath || fileSize;\n\n  return (\n    <div className={`code-editor-container ${className}`}>\n      <div className=\"code-editor-wrapper\">\n        {/* IDE-style header with dark theme */}\n        <div className=\"code-editor-header\">\n          <div className=\"code-editor-header-left\">\n            {/* Browser-style control buttons */}\n            <div className=\"code-editor-controls\">\n              <div className=\"code-editor-control-btn code-editor-control-red\" />\n              <div className=\"code-editor-control-btn code-editor-control-yellow\" />\n              <div className=\"code-editor-control-btn code-editor-control-green\" />\n            </div>\n\n            {/* Enhanced file name with improved tooltip */}\n            <div\n              ref={fileInfoRef}\n              className=\"code-editor-file-info\"\n              onMouseEnter={handleFileInfoEnter}\n              onMouseLeave={handleFileInfoLeave}\n            >\n              <span className=\"code-editor-file-name\">{displayFileName}</span>\n\n              {/* Enhanced tooltip with better interaction */}\n              {hasFileInfo && showTooltip && (\n                <motion.div\n                  ref={tooltipRef}\n                  initial={{ opacity: 0, scale: 0.95, y: -5 }}\n                  animate={{ opacity: 1, scale: 1, y: 0 }}\n                  exit={{ opacity: 0, scale: 0.95, y: -5 }}\n                  transition={{ duration: 0.15 }}\n                  className=\"code-editor-tooltip\"\n                  onMouseEnter={handleTooltipEnter}\n                  onMouseLeave={handleTooltipLeave}\n                >\n                  <div className=\"code-editor-tooltip-content\">\n                    {filePath && (\n                      <div className=\"code-editor-tooltip-section\">\n                        <FiFolder className=\"code-editor-tooltip-icon\" size={12} />\n                        <div>\n                          <div className=\"code-editor-tooltip-label\">File Path</div>\n                          <div className=\"code-editor-tooltip-value\">{filePath}</div>\n                          <motion.button\n                            whileHover={{ scale: 1.05 }}\n                            whileTap={{ scale: 0.95 }}\n                            onClick={handleCopyPath}\n                            className=\"code-editor-tooltip-btn\"\n                          >\n                            {pathCopied ? <FiCheck size={10} /> : <FiCopy size={10} />}\n                            {pathCopied ? 'Copied!' : 'Copy Path'}\n                          </motion.button>\n                        </div>\n                      </div>\n                    )}\n\n                    {fileSize && (\n                      <div className=\"code-editor-tooltip-info\">\n                        <FiInfo className=\"code-editor-tooltip-icon\" size={12} />\n                        <div>\n                          <span className=\"code-editor-tooltip-label\">Size: </span>\n                          <span className=\"code-editor-tooltip-value\">{fileSize}</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Tooltip arrow */}\n                  <div className=\"code-editor-tooltip-arrow\" />\n                </motion.div>\n              )}\n            </div>\n\n            {/* Language badge */}\n            <div className=\"code-editor-language-badge\">{language}</div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"code-editor-actions\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={handleCopy}\n              className=\"code-editor-action-btn\"\n              title=\"Copy code\"\n            >\n              {copied ? <FiCheck size={14} className=\"text-green-400\" /> : <FiCopy size={14} />}\n            </motion.button>\n          </div>\n        </div>\n\n        {/* Code content with dark IDE theme */}\n        <div className=\"code-editor-content\" style={{ maxHeight }}>\n          <div className=\"code-editor-inner\">\n            {/* Line numbers */}\n            {showLineNumbers && (\n              <div className=\"code-editor-line-numbers\">\n                <div className=\"code-editor-line-numbers-inner\">\n                  {Array.from({ length: lineCount }, (_, i) => (\n                    <div key={i + 1} className=\"code-editor-line-number\">\n                      {i + 1}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Code content */}\n            <div className=\"code-editor-code-area\">\n              <pre className=\"code-editor-pre\">\n                <code ref={codeRef} className={`language-${language} code-editor-code`}>\n                  {code}\n                </code>\n              </pre>\n            </div>\n          </div>\n        </div>\n\n        {/* IDE-style status bar */}\n        <div className=\"code-editor-status-bar\">\n          <div className=\"code-editor-status-left\">\n            <span className=\"code-editor-status-item\">{lineCount} lines</span>\n            <span className=\"code-editor-status-item\">{code.length} characters</span>\n          </div>\n          <div className=\"code-editor-status-right\">\n            {readOnly && <span className=\"code-editor-status-item\">Read-only</span>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export { CodeEditor } from './CodeEditor';\n","import React from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { motion } from 'framer-motion';\nimport { FiAlertTriangle, FiX } from 'react-icons/fi';\n\ninterface ConfirmDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  type?: 'danger' | 'warning' | 'info';\n}\n\nexport const ConfirmDialog: React.FC<ConfirmDialogProps> = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  type = 'danger',\n}) => {\n  const getTypeStyles = () => {\n    switch (type) {\n      case 'danger':\n        return {\n          icon: <FiAlertTriangle size={24} className=\"text-red-500 dark:text-red-400\" />,\n          confirmButton:\n            'bg-red-500 hover:bg-red-600 dark:bg-red-600 dark:hover:bg-red-700 text-white',\n          iconBg: 'bg-red-100 dark:bg-red-900/30',\n        };\n      case 'warning':\n        return {\n          icon: <FiAlertTriangle size={24} className=\"text-amber-500 dark:text-amber-400\" />,\n          confirmButton:\n            'bg-amber-500 hover:bg-amber-600 dark:bg-amber-600 dark:hover:bg-amber-700 text-white',\n          iconBg: 'bg-amber-100 dark:bg-amber-900/30',\n        };\n      default:\n        return {\n          icon: <FiAlertTriangle size={24} className=\"text-blue-500 dark:text-blue-400\" />,\n          confirmButton:\n            'bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 text-white',\n          iconBg: 'bg-blue-100 dark:bg-blue-900/30',\n        };\n    }\n  };\n\n  const typeStyles = getTypeStyles();\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-25 backdrop-blur-sm\" aria-hidden=\"true\" />\n\n      {/* Dialog position */}\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md rounded-xl bg-white dark:bg-gray-800 p-6 shadow-xl border border-gray-200/50 dark:border-gray-700/30\">\n          <div className=\"flex items-start\">\n            <div className={`p-3 rounded-full ${typeStyles.iconBg} mr-4 flex-shrink-0`}>\n              {typeStyles.icon}\n            </div>\n\n            <div className=\"flex-1\">\n              <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\n                {title}\n              </Dialog.Title>\n\n              <div className=\"mt-2\">\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">{message}</p>\n              </div>\n            </div>\n\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={onClose}\n              className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              <FiX size={18} />\n            </motion.button>\n          </div>\n\n          <div className=\"mt-6 flex justify-end gap-3\">\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={onClose}\n              className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 rounded-lg text-sm font-medium transition-colors\"\n            >\n              {cancelText}\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={onConfirm}\n              className={`px-4 py-2 ${typeStyles.confirmButton} rounded-lg text-sm font-medium transition-colors`}\n            >\n              {confirmText}\n            </motion.button>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n","export * from './ConfirmDialog';\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport { remarkAlert } from 'remark-github-blockquote-alert';\nimport rehypeHighlight from 'rehype-highlight';\nimport { useMarkdownComponents } from './hooks/useMarkdownComponents';\nimport { ImageModal } from './components/ImageModal';\nimport { resetFirstH1Flag } from './components/Headings';\nimport { scrollToElement } from './utils';\nimport 'remark-github-blockquote-alert/alert.css';\nimport './syntax-highlight.css';\nimport './markdown.css';\n\ninterface MarkdownRendererProps {\n  content: string;\n  publishDate?: string;\n  author?: string;\n  className?: string;\n  forceDarkTheme?: boolean;\n}\n\n/**\n * MarkdownRenderer component\n * Renders markdown content with custom styling and enhanced functionality\n */\nexport const MarkdownRenderer: React.FC<MarkdownRendererProps> = ({\n  content,\n  publishDate,\n  author,\n  className = '',\n  forceDarkTheme = false,\n}) => {\n  const [openImage, setOpenImage] = useState<string | null>(null);\n  const [renderError, setRenderError] = useState<Error | null>(null);\n\n  /**\n   * Handle image click for modal preview\n   */\n  const handleImageClick = (src: string) => {\n    setOpenImage(src);\n  };\n\n  /**\n   * Close image modal\n   */\n  const handleCloseModal = () => {\n    setOpenImage(null);\n  };\n\n  /**\n   * Handle hash navigation on page load\n   */\n  useEffect(() => {\n    if (window.location.hash) {\n      const id = window.location.hash.substring(1);\n      // Use setTimeout to ensure page is fully rendered before scrolling\n      setTimeout(() => {\n        scrollToElement(id);\n      }, 100);\n    }\n  }, [content]);\n\n  /**\n   * Reset states when content changes\n   */\n  useEffect(() => {\n    resetFirstH1Flag();\n    setRenderError(null);\n  }, [content]);\n\n  /**\n   * Get markdown components configuration\n   */\n  const components = useMarkdownComponents({\n    onImageClick: handleImageClick,\n  });\n\n  /**\n   * Render error fallback\n   */\n  if (renderError) {\n    return (\n      <div className=\"p-3 border border-amber-200 dark:border-amber-800 bg-amber-50 dark:bg-amber-900/30 rounded-md text-amber-800 dark:text-amber-200\">\n        <p className=\"font-medium mb-1\">Markdown rendering error:</p>\n        <pre className=\"text-xs overflow-auto\">{content}</pre>\n      </div>\n    );\n  }\n\n  /**\n   * Determine theme class and merge with markdown content styles\n   */\n  const themeClass = forceDarkTheme ? 'dark' : 'light';\n  const markdownContentClass = `${themeClass} markdown-content font-inter leading-relaxed text-gray-800 dark:text-gray-200 ${className}`;\n\n  try {\n    return (\n      <div className={markdownContentClass}>\n        <ReactMarkdown\n          // @ts-expect-error FIXME: find the root cause of type issue\n          remarkPlugins={[remarkGfm, remarkAlert]}\n          // @ts-expect-error FIXME: find the root cause of type issue\n          rehypePlugins={[rehypeRaw, [rehypeHighlight, { detect: true, ignoreMissing: true }]]}\n          components={components}\n        >\n          {content}\n        </ReactMarkdown>\n\n        <ImageModal isOpen={!!openImage} imageSrc={openImage} onClose={handleCloseModal} />\n      </div>\n    );\n  } catch (error) {\n    console.error('Error rendering markdown:', error);\n    setRenderError(error instanceof Error ? error : new Error(String(error)));\n\n    // Fallback render for raw content\n    return (\n      <pre className=\"p-3 text-sm border border-gray-200 rounded-md overflow-auto\">{content}</pre>\n    );\n  }\n};\n","import React, { useState, useRef } from 'react';\nimport { FiCopy, FiCheck } from 'react-icons/fi';\n\ninterface CodeBlockProps {\n  inline?: boolean;\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ inline, className, children }) => {\n  const match = /language-(\\w+)/.exec(className || '');\n  const [isWordWrap, setIsWordWrap] = useState(true);\n  const [isCopied, setIsCopied] = useState(false);\n  const codeRef = useRef<HTMLElement>(null);\n\n  if (inline || !match) {\n    return (\n      <code className=\"font-mono text-[#525252] bg-[#1b1f230d] dark:bg-[#333e4ecc] dark:text-gray-200 px-1 py-0.5 mx-0.5 whitespace-nowrap rounded-md\">\n        {children}\n      </code>\n    );\n  }\n\n  const handleCopy = () => {\n    if (codeRef.current) {\n      // Extract text content from code element instead of React nodes\n      const code = codeRef.current.textContent || '';\n      navigator.clipboard.writeText(code).then(() => {\n        setIsCopied(true);\n        setTimeout(() => setIsCopied(false), 2000);\n      });\n    }\n  };\n\n  const toggleWordWrap = () => {\n    setIsWordWrap(!isWordWrap);\n  };\n\n  return (\n    <div className=\"relative my-2 group\">\n      {/* Language badge and action buttons - positioned in top right, visible on hover */}\n      <div className=\"absolute top-2 right-2 flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n        {/* Action buttons */}\n        <div className=\"flex items-center gap-2 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-md shadow-sm p-1\">\n          {/* Language badge */}\n          <div className=\"text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-md font-mono\">\n            {match?.[1] ?? 'text'}\n          </div>\n\n          {/* Word wrap toggle button */}\n          <button\n            onClick={toggleWordWrap}\n            className=\"hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors rounded-md px-2 py-1 text-xs text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n            title={isWordWrap ? 'Disable word wrap' : 'Enable word wrap'}\n          >\n            {isWordWrap ? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M1 3.5A1.5 1.5 0 0 1 2.5 2h12A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-12A1.5 1.5 0 0 1 1 12.5v-9zM2.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h12a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-12z\" />\n                <path d=\"M13 5.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H12v6.5a.5.5 0 0 1-1 0V5.5z\" />\n              </svg>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M1 3.5A1.5 1.5 0 0 1 2.5 2h12A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-12A1.5 1.5 0 0 1 1 12.5v-9zM2.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h12a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-12z\" />\n                <path d=\"M11 5.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H12v3.5a.5.5 0 0 1-1 0V5.5z\" />\n              </svg>\n            )}\n          </button>\n\n          {/* Copy button - 使用react-icons图标并移除文字 */}\n          <button\n            onClick={handleCopy}\n            className=\"hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors rounded-md px-2 py-1 text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n            title=\"Copy code\"\n          >\n            {isCopied ? <FiCheck size={14} /> : <FiCopy size={14} />}\n          </button>\n        </div>\n      </div>\n\n      <pre\n        className={`bg-[#f5f5f5] dark:bg-gray-900/50 dark:border-gray-700/50 rounded-xl p-4 text-xs ${\n          isWordWrap ? 'whitespace-pre-wrap break-words' : 'overflow-x-auto'\n        }`}\n      >\n        <code ref={codeRef} className={`${className} text-gray-800 dark:text-gray-200`}>\n          {children}\n        </code>\n      </pre>\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\nimport { generateId } from '../utils';\n\ninterface HeadingProps {\n  children: React.ReactNode;\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\n/**\n * First H1 tracking ref - shared across all heading instances\n */\nconst firstH1Rendered = { current: false };\n\n/**\n * Reset the first H1 flag (called when content changes)\n */\nexport const resetFirstH1Flag = (): void => {\n  firstH1Rendered.current = false;\n};\n\n/**\n * Generic heading component with consistent styling and anchor support\n */\nexport const Heading: React.FC<HeadingProps> = ({ children, level }) => {\n  const id = generateId(children?.toString());\n\n  const getHeadingStyles = () => {\n    const baseStyles =\n      'group scroll-mt-20 flex items-center font-semibold leading-tight text-gray-900 dark:text-gray-100';\n\n    switch (level) {\n      case 1:\n        return `${baseStyles} text-3xl font-bold mt-6 mb-2 pb-2 border-b border-gray-200`;\n      case 2:\n        return `${baseStyles} text-2xl font-bold mt-6 mb-2 pb-2`;\n      case 3:\n        return `${baseStyles} text-xl font-semibold mt-8 mb-3 text-gray-800 dark:text-gray-200`;\n      case 4:\n        return `${baseStyles} text-md font-semibold mt-6 mb-2 text-gray-800 dark:text-gray-200`;\n      default:\n        return `${baseStyles} text-sm font-medium mt-4 mb-2 text-gray-700 dark:text-gray-300`;\n    }\n  };\n\n  const HeadingTag = `h${level}` as keyof JSX.IntrinsicElements;\n\n  return (\n    <HeadingTag id={id} className={getHeadingStyles()}>\n      {children}\n    </HeadingTag>\n  );\n};\n\n/**\n * Specific heading components for markdown renderer\n */\nexport const H1: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const isFirstH1 = !firstH1Rendered.current;\n  if (isFirstH1) {\n    firstH1Rendered.current = true;\n  }\n\n  return <Heading level={1}>{children}</Heading>;\n};\n\nexport const H2: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <Heading level={2}>{children}</Heading>\n);\n\nexport const H3: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <Heading level={3}>{children}</Heading>\n);\n\nexport const H4: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <Heading level={4}>{children}</Heading>\n);\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface ImageProps {\n  src?: string;\n  alt?: string;\n  onClick?: (src: string) => void;\n}\n\n/**\n * Interactive image component with hover effects\n */\nexport const InteractiveImage: React.FC<ImageProps> = ({\n  src,\n  alt = 'Documentation image',\n  onClick,\n}) => {\n  const handleClick = () => {\n    if (src && onClick) {\n      onClick(src);\n    }\n  };\n\n  return (\n    <motion.img\n      className=\"max-w-full h-auto my-6 rounded-lg cursor-pointer\"\n      src={src}\n      alt={alt}\n      onClick={handleClick}\n      whileHover={{ scale: 1.01 }}\n      transition={{ duration: 0.2 }}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { motion } from 'framer-motion';\n\ninterface ImageModalProps {\n  isOpen: boolean;\n  imageSrc: string | null;\n  onClose: () => void;\n}\n\n/**\n * Image preview modal component\n */\nexport const ImageModal: React.FC<ImageModalProps> = ({ isOpen, imageSrc, onClose }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  // Reset loading state when modal opens\n  React.useEffect(() => {\n    if (isOpen) {\n      setImageLoaded(false);\n    }\n  }, [isOpen]);\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm\" aria-hidden=\"true\" />\n\n      {/* Image container */}\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"max-w-[90vw] max-h-[90vh] outline-none\">\n          <motion.img\n            src={imageSrc || ''}\n            alt=\"Enlarged view\"\n            onLoad={() => setImageLoaded(true)}\n            className=\"max-w-full max-h-[85vh] object-contain rounded-lg\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{\n              opacity: imageLoaded ? 1 : 0.3,\n              scale: imageLoaded ? 1 : 0.95,\n            }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            transition={{ type: 'spring', duration: 0.3 }}\n            onClick={onClose}\n          />\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { isExternalUrl, isHashLink, isInternalPath, scrollToElement } from '../utils';\n\ninterface LinkProps {\n  href?: string;\n  children: React.ReactNode;\n}\n\n/**\n * Common link styles\n */\nconst LINK_STYLES =\n  'text-accent-500 hover:text-accent-600 transition-colors underline underline-offset-2';\n\n/**\n * Smart link component that handles different URL types\n */\nexport const SmartLink: React.FC<LinkProps> = ({ href, children, ...props }) => {\n  if (!href) {\n    return <span {...props}>{children}</span>;\n  }\n\n  // Hash links - smooth scrolling to anchors\n  if (isHashLink(href)) {\n    return (\n      <a\n        href={href}\n        className={LINK_STYLES}\n        onClick={(e) => {\n          e.preventDefault();\n          scrollToElement(href.substring(1));\n        }}\n        {...props}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  // Internal path links - use React Router\n  if (isInternalPath(href)) {\n    return (\n      <Link to={href} className={LINK_STYLES} {...props}>\n        {children}\n      </Link>\n    );\n  }\n\n  // External links - open in new tab\n  return (\n    <a href={href} className={LINK_STYLES} target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {children}\n    </a>\n  );\n};\n","import React from 'react';\n\n/**\n * Table component styles\n */\nconst TABLE_STYLES = {\n  wrapper: 'overflow-x-auto my-6',\n  table:\n    'min-w-full border-collapse border border-gray-300 dark:border-gray-600 text-sm w-full my-6',\n  thead: 'bg-gray-100 dark:bg-gray-800',\n  tbody: 'divide-y divide-gray-200 dark:divide-gray-700',\n  tr: 'hover:bg-gray-50 dark:hover:bg-gray-800/50 transition-colors',\n  th: 'px-3 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wider border-b border-gray-300 dark:border-gray-600',\n  td: 'px-3 py-3 text-gray-800 dark:text-gray-200 border-t border-gray-200 dark:border-slate-600',\n};\n\n/**\n * Table wrapper component\n */\nexport const TableWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <div className={TABLE_STYLES.wrapper}>\n    <table className={TABLE_STYLES.table}>{children}</table>\n  </div>\n);\n\n/**\n * Table head component\n */\nexport const TableHead: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <thead className={TABLE_STYLES.thead}>{children}</thead>\n);\n\n/**\n * Table body component\n */\nexport const TableBody: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <tbody className={TABLE_STYLES.tbody}>{children}</tbody>\n);\n\n/**\n * Table row component\n */\nexport const TableRow: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <tr className={TABLE_STYLES.tr}>{children}</tr>\n);\n\n/**\n * Table header cell component\n */\nexport const TableHeaderCell: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <th className={TABLE_STYLES.th}>{children}</th>\n);\n\n/**\n * Table data cell component\n */\nexport const TableDataCell: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <td className={TABLE_STYLES.td}>{children}</td>\n);\n","import React from 'react';\n\n/**\n * Text element styles - Updated with merged tailwind classes\n */\nconst TEXT_STYLES = {\n  paragraph: 'my-2 text-gray-800 dark:text-gray-200 leading-relaxed text-base',\n  unorderedList: 'my-2 list-disc pl-6 text-gray-800 dark:text-gray-200 text-base',\n  orderedList: 'my-2 list-decimal pl-6 text-gray-800 dark:text-gray-200 text-base',\n  listItem: 'my-1 text-base',\n  blockquote:\n    'border-l-4 border-gray-200 dark:border-slate-600 pl-4 my-5 italic text-slate-600 dark:text-slate-400',\n  horizontalRule: 'my-8 border-t border-gray-200 dark:border-gray-700',\n};\n\n/**\n * Paragraph component\n */\nexport const Paragraph: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <p className={TEXT_STYLES.paragraph}>{children}</p>\n);\n\n/**\n * Unordered list component\n */\nexport const UnorderedList: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <ul className={TEXT_STYLES.unorderedList}>{children}</ul>\n);\n\n/**\n * Ordered list component\n */\nexport const OrderedList: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <ol className={TEXT_STYLES.orderedList}>{children}</ol>\n);\n\n/**\n * List item component\n */\nexport const ListItem: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <li className={TEXT_STYLES.listItem}>{children}</li>\n);\n\n/**\n * Blockquote component\n */\nexport const Blockquote: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <blockquote className={TEXT_STYLES.blockquote}>{children}</blockquote>\n);\n\n/**\n * Horizontal rule component\n */\nexport const HorizontalRule: React.FC = () => <hr className={TEXT_STYLES.horizontalRule} />;\n","/**\n * Markdown component exports\n */\nexport * from './Headings';\nexport * from './Links';\nexport * from './Table';\nexport * from './TextElements';\nexport * from './Image';\nexport * from './ImageModal';\nexport * from './CodeBlock';\n","import React from 'react';\nimport { Components } from 'react-markdown';\nimport {\n  H1,\n  H2,\n  H3,\n  H4,\n  SmartLink,\n  TableWrapper,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableHeaderCell,\n  TableDataCell,\n  Paragraph,\n  UnorderedList,\n  OrderedList,\n  ListItem,\n  CodeBlock,\n  Blockquote,\n  HorizontalRule,\n  InteractiveImage,\n} from '../components';\n\ninterface UseMarkdownComponentsProps {\n  onImageClick: (src: string) => void;\n}\n\n/**\n * Custom hook that provides markdown components configuration\n */\nexport const useMarkdownComponents = ({ onImageClick }: UseMarkdownComponentsProps): Components => {\n  return React.useMemo(\n    () => ({\n      // Headings\n      h1: ({ children }) => <H1>{children}</H1>,\n      h2: ({ children }) => <H2>{children}</H2>,\n      h3: ({ children }) => <H3>{children}</H3>,\n      h4: ({ children }) => <H4>{children}</H4>,\n\n      // Text elements\n      p: ({ children }) => <Paragraph>{children}</Paragraph>,\n      ul: ({ children }) => <UnorderedList>{children}</UnorderedList>,\n      ol: ({ children }) => <OrderedList>{children}</OrderedList>,\n      li: ({ children }) => <ListItem>{children}</ListItem>,\n      blockquote: ({ children }) => <Blockquote>{children}</Blockquote>,\n      hr: () => <HorizontalRule />,\n\n      // Links\n      a: ({ href, children }) => <SmartLink href={href}>{children}</SmartLink>,\n\n      // Code\n      code: ({ className, children, ...props }) => (\n        <CodeBlock className={className} {...props}>\n          {children}\n        </CodeBlock>\n      ),\n\n      // Tables\n      table: ({ children }) => <TableWrapper>{children}</TableWrapper>,\n      thead: ({ children }) => <TableHead>{children}</TableHead>,\n      tbody: ({ children }) => <TableBody>{children}</TableBody>,\n      tr: ({ children }) => <TableRow>{children}</TableRow>,\n      th: ({ children }) => <TableHeaderCell>{children}</TableHeaderCell>,\n      td: ({ children }) => <TableDataCell>{children}</TableDataCell>,\n\n      // Images\n      img: ({ src, alt }) => <InteractiveImage src={src} alt={alt} onClick={onImageClick} />,\n    }),\n    [onImageClick],\n  );\n};\n","export { MarkdownRenderer } from './MarkdownRenderer';\nexport * from './components';\nexport * from './utils';\n","/**\n * Utility functions for markdown rendering\n */\n\n/**\n * Generate a URL-friendly ID from text content\n */\nexport const generateId = (text: string | undefined): string => {\n  if (!text) return '';\n\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .replace(/\\s+/g, '-');\n};\n\n/**\n * Check if a URL is external\n */\nexport const isExternalUrl = (url: string): boolean => {\n  return /^(https?:)?\\/\\//.test(url);\n};\n\n/**\n * Check if a URL is a hash link\n */\nexport const isHashLink = (url: string): boolean => {\n  return url.startsWith('#');\n};\n\n/**\n * Check if a URL is an internal path\n */\nexport const isInternalPath = (url: string): boolean => {\n  return !isExternalUrl(url) && url.startsWith('/');\n};\n\n/**\n * Smooth scroll to element by ID\n */\nexport const scrollToElement = (id: string): void => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.scrollIntoView({ behavior: 'smooth' });\n    window.history.pushState(null, '', `#${id}`);\n  }\n};\n","import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { useSession } from '@/common/hooks/useSession';\nimport HomePage from '@/standalone/home/HomePage';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\nimport { SessionRouter } from './Router/SessionRouter';\n\n/**\n * App Component - Main application container with routing\n */\nexport const App: React.FC = () => {\n  const { initConnectionMonitoring, loadSessions, connectionStatus, activeSessionId } =\n    useSession();\n  const isReplayMode = useReplayMode();\n\n  // Initialize connection monitoring and load sessions on mount - but not in replay mode\n  useEffect(() => {\n    // In replay mode, skip connection monitoring and session loading\n    if (isReplayMode) {\n      console.log('[ReplayMode] Skipping connection initialization in replay mode');\n      return;\n    }\n\n    const initialize = async () => {\n      // Initialize connection monitoring\n      const cleanup = initConnectionMonitoring();\n\n      // Load sessions if connected\n      if (connectionStatus.connected) {\n        await loadSessions();\n      }\n\n      return cleanup;\n    };\n\n    const cleanupPromise = initialize();\n\n    // Cleanup on unmount\n    return () => {\n      cleanupPromise.then((cleanup) => {\n        if (typeof cleanup === 'function') {\n          cleanup();\n        }\n      });\n    };\n  }, [initConnectionMonitoring, loadSessions, connectionStatus.connected, isReplayMode]);\n\n  // Special handling for replay mode - bypass normal routing\n  if (isReplayMode) {\n    console.log('[ReplayMode] Rendering replay layout directly');\n    return <Layout isReplayMode={true} />;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route\n        path=\"/:sessionId\"\n        element={\n          <SessionRouter>\n            <Layout />\n          </SessionRouter>\n        }\n      />\n    </Routes>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface ShellProps {\n  children: React.ReactNode;\n  title?: string;\n  headerActions?: React.ReactNode;\n  transparent?: boolean;\n  className?: string;\n}\n\n/**\n * Shell Component - Container with consistent styling\n *\n * Design principles:\n * - Clean, minimal container with subtle backdrop blur\n * - Flexible container that adapts to content while maintaining visual harmony\n * - Optional header with consistent spacing and typography\n * - Transparent mode for seamless integration with parent components\n */\nexport const Shell: React.FC<ShellProps> = ({\n  children,\n  title,\n  headerActions,\n  transparent = false,\n  className,\n}) => {\n  return (\n    <div\n      className={classNames(\n        'flex flex-col h-full overflow-hidden',\n        'transition-[width,height,padding,margin,opacity,transform] duration-300',\n        {\n          'bg-white dark:bg-gray-800/95': !transparent,\n          'bg-transparent': transparent,\n        },\n        className,\n      )}\n    >\n      {(title || headerActions) && (\n        <div\n          className={classNames('flex items-center justify-between px-5 py-4', {\n            'border-b border-gray-100/80 dark:border-gray-800/60': !transparent,\n            'border-b border-gray-200/5 dark:border-gray-700/5': transparent,\n          })}\n        >\n          {title && (\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-base tracking-tight\">\n              {title}\n            </h2>\n          )}\n          {headerActions}\n        </div>\n      )}\n      <div className=\"flex-1 overflow-auto relative\">{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Sidebar } from '@/standalone/sidebar';\nimport { Navbar } from '@/standalone/navbar';\nimport { ChatPanel } from '@/standalone/chat/ChatPanel';\nimport { WorkspacePanel } from '@/standalone/workspace/WorkspacePanel';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\nimport { Shell } from './Shell';\nimport './Layout.css';\n\ninterface LayoutProps {\n  isReplayMode?: boolean;\n}\n\n/**\n * Layout Component - Main application layout\n *\n * Design principles:\n * - Clean, minimalist aesthetic with refined borders and subtle shadows\n * - Neutral color palette with elegant accent colors\n * - Consistent spacing and typography for optimal readability\n * - Seamless visual flow between different interface elements\n * - Adapts layout based on replay mode status\n */\nexport const Layout: React.FC<LayoutProps> = ({ isReplayMode: propIsReplayMode }) => {\n  const { connectionStatus } = useSession();\n\n  // Use the context hook to get global replay mode status\n  const contextIsReplayMode = useReplayMode();\n\n  // Prioritize props for backward compatibility, but fall back to context\n  const isReplayMode = propIsReplayMode !== undefined ? propIsReplayMode : contextIsReplayMode;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-[#F2F3F5] dark:bg-gray-900 text-gray-900 dark:text-gray-100 overflow-hidden\">\n      {/* Global navbar at the top */}\n      <Navbar />\n\n      {/* Main content area */}\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Sidebar with ToolBar and ChatSession - only show when not in replay mode */}\n        {!isReplayMode && <Sidebar />}\n\n        {/* Content area - using flex-col to properly distribute vertical space */}\n        <div className=\"flex-1 flex flex-col overflow-hidden pr-2 pb-2 lg:pr-3 lg:pb-3\">\n          {/* Panels container - apply flex-1 to take remaining vertical space */}\n          <div className=\"flex gap-3 flex-1 min-h-0\">\n            {/* Chat panel - adjust width based on replay mode */}\n            <div className=\"flex-1 flex flex-col overflow-hidden\">\n              <Shell className=\"h-full rounded-xl shadow-lg shadow-gray-200/50 dark:shadow-gray-950/20\">\n                <ChatPanel />\n              </Shell>\n            </div>\n\n            {/* Workspace panel */}\n            <div className=\"flex-1 flex flex-col overflow-hidden\">\n              <Shell className=\"h-full rounded-xl shadow-lg shadow-gray-200/50 dark:shadow-gray-950/20\">\n                <WorkspacePanel />\n              </Shell>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useParams, Navigate, useLocation } from 'react-router-dom';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\n\ninterface SessionRouterProps {\n  children: React.ReactNode;\n}\n\n/**\n * SessionRouter Component - Handles session routing logic\n */\nexport const SessionRouter: React.FC<SessionRouterProps> = ({ children }) => {\n  const { sessionId } = useParams<{ sessionId: string }>();\n  const { setActiveSession, sessions, connectionStatus, activeSessionId, sendMessage } =\n    useSession();\n  const isReplayMode = useReplayMode();\n  const location = useLocation();\n\n  // Check if session exists in our loaded sessions\n  const sessionExists = sessions.some((session) => session.id === sessionId);\n\n  // Handle query parameter if present\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get('q');\n\n    if (\n      query &&\n      sessionId &&\n      activeSessionId === sessionId &&\n      !location.pathname.includes('/welcome')\n    ) {\n      // Process the query\n      sendMessage(query).catch((error) => {\n        console.error(`Failed to send query: ${error}`);\n      });\n    }\n  }, [location.search, sessionId, activeSessionId, sendMessage, location.pathname]);\n\n  // Setup session - but skip in replay mode as it's handled by ReplayModeProvider\n  useEffect(() => {\n    // Skip this logic in replay mode since session is already set\n    if (isReplayMode) {\n      console.log('[ReplayMode] SessionRouter: Skipping session setup in replay mode');\n      return;\n    }\n\n    // Only set active session if:\n    // 1. We have a session ID from URL\n    // 2. It exists in our sessions list\n    // 3. We're connected\n    if (sessionId && sessionExists && connectionStatus.connected) {\n      console.log(`SessionRouter: Loading session ${sessionId} from URL`);\n\n      setActiveSession(sessionId).catch((error) => {\n        console.error(`Failed to load session ${sessionId}:`, error);\n      });\n    }\n  }, [sessionId, sessionExists, connectionStatus.connected, setActiveSession, isReplayMode]);\n\n  // In replay mode, always show content regardless of session existence\n  if (isReplayMode) {\n    console.log('[ReplayMode] SessionRouter: Rendering children in replay mode');\n    return <>{children}</>;\n  }\n\n  // For normal mode, redirect if session doesn't exist\n  if (!sessionExists && sessions.length > 0 && sessionId) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <>{children}</>;\n};\n","import React from 'react';\nimport { Provider } from 'jotai';\nimport { App } from './App';\nimport { ReplayModeProvider } from '@/common/hooks/useReplayMode';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\n\n/**\n * Agent TARS Web UI v2 - Entry Component\n *\n * Provides the Jotai atom provider and initializes theme based on user preference.\n * Uses the enhanced ReplayModeProvider that now handles both context provision and initialization.\n */\nexport const AgentTARSWebUI: React.FC = () => {\n  // Initialize theme based on user preference, defaulting to dark mode\n  React.useEffect(() => {\n    // Check if theme is stored in localStorage\n    const storedTheme = localStorage.getItem('agent-tars-theme');\n\n    // Apply theme - default to dark if not explicitly set to light\n    if (storedTheme === 'light') {\n      document.documentElement.classList.remove('dark');\n    } else {\n      // Either dark or null (not set) - use dark mode\n      document.documentElement.classList.add('dark');\n      if (!storedTheme) {\n        localStorage.setItem('agent-tars-theme', 'dark');\n      }\n    }\n\n    // Listen for theme preference changes - but only apply if user hasn't set a preference\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e: MediaQueryListEvent) => {\n      // Only apply system preference if no explicit user preference is stored\n      if (localStorage.getItem('agent-tars-theme') === null) {\n        document.documentElement.classList.toggle('dark', e.matches);\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, []);\n\n  // Use HashRouter for shared HTML files (replay mode) to prevent routing issues\n  const isReplayMode = window.AGENT_TARS_REPLAY_MODE === true;\n  console.log('isReplayMode', isReplayMode);\n  const Router = isReplayMode ? HashRouter : BrowserRouter;\n\n  return (\n    <Provider>\n      <ReplayModeProvider>\n        <Router>\n          <App />\n        </Router>\n      </ReplayModeProvider>\n    </Provider>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { useSession } from '@/common/hooks/useSession';\nimport { MessageGroup } from './Message/components/MessageGroup';\nimport { MessageInput } from './MessageInput';\nimport { FiInfo, FiMessageSquare, FiRefreshCw, FiWifiOff, FiX } from 'react-icons/fi';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { groupedMessagesAtom, messagesAtom } from '@/common/state/atoms/message';\n\nimport { useReplay } from '@/common/hooks/useReplay';\nimport { replayStateAtom } from '@/common/state/atoms/replay';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\n\nimport './ChatPanel.css';\nimport { ResearchReportEntry } from './ResearchReportEntry';\n\n/**\n * ChatPanel Component - Main chat interface\n *\n * 修改以支持实时流式渲染：\n * - 更新了消息渲染逻辑，使每条消息都能立即显示\n * - 优化了消息滚动和布局\n * - 保持了干净、无干扰的用户界面\n */\nexport const ChatPanel: React.FC = () => {\n  const { activeSessionId, isProcessing, connectionStatus, checkServerStatus } = useSession();\n\n  const groupedMessages = useAtomValue(groupedMessagesAtom);\n  const allMessages = useAtomValue(messagesAtom);\n\n  const [replayState] = useAtom(replayStateAtom);\n  const isReplayMode = useReplayMode();\n  const { cancelAutoPlay } = useReplay();\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n\n  // 使用当前会话的消息\n  const activeMessages = activeSessionId ? groupedMessages[activeSessionId] || [] : [];\n\n  // Auto-scroll when new messages arrive\n  useEffect(() => {\n    if (messagesEndRef.current && messagesContainerRef.current) {\n      const container = messagesContainerRef.current;\n\n      // Check if user is already at bottom\n      const { scrollTop, scrollHeight, clientHeight } = container;\n      const isAtBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 30;\n\n      // 修改滚动逻辑：处理中时总是滚动，以确保实时消息可见\n      if (\n        isAtBottom ||\n        isProcessing ||\n        (activeMessages.length > 0 &&\n          activeMessages[activeMessages.length - 1].messages[0]?.role === 'user')\n      ) {\n        setTimeout(() => {\n          container.scrollTo({\n            top: container.scrollHeight,\n            behavior: 'smooth',\n          });\n        }, 100);\n      }\n    }\n  }, [activeMessages, isProcessing]);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current && messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTo({\n        top: messagesContainerRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: 0.4,\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.4 },\n    },\n  };\n\n  const renderOfflineBanner = () => {\n    if (connectionStatus.connected || !activeSessionId || isReplayMode) return null;\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-4 px-4 py-3 bg-red-50/30 dark:bg-red-900/15 text-red-700 dark:text-red-300 text-sm rounded-xl\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <div className=\"font-medium flex items-center\">\n              <FiWifiOff className=\"mr-2 text-red-500 dark:text-red-400\" />\n              Viewing in offline mode\n            </div>\n            <div className=\"text-sm mt-1\">\n              You can view previous messages but cannot send new ones until reconnected.\n            </div>\n          </div>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => checkServerStatus()}\n            className=\"ml-3 px-3 py-1.5 bg-red-100/70 dark:bg-red-800/30 hover:bg-red-200/70 dark:hover:bg-red-700/40 rounded-2xl text-sm font-medium transition-colors flex items-center border border-red-200/30 dark:border-red-700/30\"\n          >\n            <FiRefreshCw\n              className={`mr-1.5 ${connectionStatus.reconnecting ? 'animate-spin' : ''}`}\n              size={14}\n            />\n            {connectionStatus.reconnecting ? 'Reconnecting...' : 'Reconnect'}\n          </motion.button>\n        </div>\n      </motion.div>\n    );\n  };\n\n  // 查找会话中的研究报告\n  const findResearchReport = () => {\n    if (!activeSessionId || !allMessages[activeSessionId]) return null;\n\n    const sessionMessages = allMessages[activeSessionId];\n    // 查找类型为 final_answer 且 isDeepResearch 为 true 的最后一条消息\n    const reportMessage = [...sessionMessages]\n      .reverse()\n      .find(\n        (msg) =>\n          (msg.role === 'final_answer' || msg.role === 'assistant') &&\n          msg.isDeepResearch === true &&\n          msg.title,\n      );\n\n    return reportMessage;\n  };\n\n  const researchReport = findResearchReport();\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {!activeSessionId ? (\n        <motion.div\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={containerVariants}\n          className=\"flex items-center justify-center flex-1\"\n        >\n          <div className=\"text-center p-6 max-w-md\">\n            <motion.div\n              variants={itemVariants}\n              className=\"w-16 h-16 bg-white dark:bg-gray-800 rounded-2xl flex items-center justify-center mx-auto mb-6 text-gray-500 dark:text-gray-400 border border-gray-100/50 dark:border-gray-700/20\"\n            >\n              <FiMessageSquare size={24} />\n            </motion.div>\n            <motion.h2\n              variants={itemVariants}\n              className=\"text-xl font-display font-bold mb-3 text-gray-800 dark:text-gray-200\"\n            >\n              Welcome to Agent TARS\n            </motion.h2>\n            <motion.p\n              variants={itemVariants}\n              className=\"text-gray-600 dark:text-gray-400 mb-5 text-sm leading-relaxed\"\n            >\n              Create a new chat session to get started with the AI assistant.\n            </motion.p>\n            <motion.div\n              variants={itemVariants}\n              whileHover={{ y: -2 }}\n              className=\"flex items-center p-4 bg-white dark:bg-gray-800 rounded-2xl mb-3 text-gray-600 dark:text-gray-400 text-sm border border-gray-100/40 dark:border-gray-700/20\"\n            >\n              <FiInfo className=\"mr-3 text-gray-400 flex-shrink-0\" />\n              <span>\n                TARS can help with tasks involving web search, browsing, and file operations.\n              </span>\n            </motion.div>\n          </div>\n        </motion.div>\n      ) : (\n        <>\n          <div\n            ref={messagesContainerRef}\n            className=\"flex-1 overflow-y-auto px-5 py-5 overflow-x-hidden min-h-0 chat-scrollbar relative\"\n          >\n            {renderOfflineBanner()}\n\n            <AnimatePresence>\n              {!connectionStatus.connected && !activeSessionId && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  className=\"mb-4 px-4 py-3 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm rounded-3xl border border-gray-100/40 dark:border-gray-700/20\"\n                >\n                  <div className=\"font-medium\">Server disconnected</div>\n                  <div className=\"text-sm mt-1\">\n                    {connectionStatus.reconnecting\n                      ? 'Attempting to reconnect...'\n                      : 'Please check your connection and try again.'}\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* 空状态 */}\n            {activeMessages.length === 0 ? (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.3 }}\n                className=\"flex items-center justify-center h-full\"\n              >\n                <div className=\"text-center p-6 max-w-md\">\n                  <h3 className=\"text-lg font-display font-medium mb-2\">\n                    {replayState.isActive ? 'Replay starting...' : 'Start a conversation'}\n                  </h3>\n                  {replayState.isActive && replayState.autoPlayCountdown !== null ? (\n                    <div className=\"mt-2\">\n                      <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\n                        Auto-play in {replayState.autoPlayCountdown} seconds...\n                      </p>\n                      <motion.button\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                        onClick={cancelAutoPlay}\n                        className=\"px-3 py-1.5 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg border border-gray-200/50 dark:border-gray-700/30 flex items-center mx-auto\"\n                      >\n                        <FiX size={12} className=\"mr-1.5\" />\n                        Cancel auto-play\n                      </motion.button>\n                    </div>\n                  ) : (\n                    <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                      {replayState.isActive\n                        ? 'Please wait while the replay loads or press play to begin'\n                        : 'Ask Agent TARS a question or provide a command to begin.'}\n                    </p>\n                  )}\n                </div>\n              </motion.div>\n            ) : (\n              // 修改这里：使用动画包装每个消息组，使其能够立即显示\n              <div className=\"space-y-6 pb-2\">\n                {activeMessages.map((group, index) => (\n                  <AnimatePresence mode=\"popLayout\" key={`group-${index}-${group.messages[0].id}`}>\n                    <motion.div\n                      initial={{ opacity: 0, y: 10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <MessageGroup\n                        messages={group.messages}\n                        isThinking={\n                          isProcessing &&\n                          !replayState.isActive &&\n                          index === activeMessages.length - 1\n                        }\n                      />\n                    </motion.div>\n                  </AnimatePresence>\n                ))}\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* 消息输入区域 */}\n          {!isReplayMode && (\n            <div className=\"p-4\">\n              {/* 研究报告入口 */}\n              {researchReport && !isProcessing && (\n                <div className=\"mb-4\">\n                  <ResearchReportEntry\n                    title={researchReport.title || 'Research Report'}\n                    timestamp={researchReport.timestamp}\n                    content={\n                      typeof researchReport.content === 'string' ? researchReport.content : ''\n                    }\n                  />\n                </div>\n              )}\n\n              {/* 按钮区域 */}\n              <div className=\"flex justify-center gap-3 mb-3\">{/* 分享按钮已移至Navbar */}</div>\n\n              <MessageInput\n                isDisabled={\n                  !activeSessionId || isProcessing || !connectionStatus.connected || isReplayMode\n                }\n                onReconnect={checkServerStatus}\n                connectionStatus={connectionStatus}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiX, FiMaximize2, FiImage } from 'react-icons/fi';\nimport { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport { Dialog } from '@headlessui/react';\n\ninterface ImagePreviewProps {\n  image: ChatCompletionContentPart;\n  onRemove: () => void;\n}\n\n/**\n * ImagePreview Component - Displays an uploaded image with enhanced styling and zoom functionality\n *\n * Design principles:\n * - Elegant thumbnail with improved visual hierarchy\n * - Click to zoom functionality for better image viewing\n * - Smooth animations and hover effects\n * - Clear remove action with visual feedback\n */\nexport const ImagePreview: React.FC<ImagePreviewProps> = ({ image, onRemove }) => {\n  const [isZoomed, setIsZoomed] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  if (image.type !== 'image_url' || !image.image_url) {\n    return null;\n  }\n\n  const handleImageClick = () => {\n    setIsZoomed(true);\n  };\n\n  const handleCloseZoom = () => {\n    setIsZoomed(false);\n  };\n\n  return (\n    <>\n      {/* 添加 padding 来容纳超出边界的关闭按钮 */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.8 }}\n        className=\"relative group cursor-pointer p-2\" // 添加 padding\n      >\n        {/* Enhanced thumbnail container */}\n        <div className=\"relative w-24 h-24 rounded-xl overflow-hidden bg-gray-100 dark:bg-gray-800 border-2 border-gray-200/60 dark:border-gray-700/40 hover:border-accent-300 dark:hover:border-accent-600 transition-all duration-200 shadow-sm hover:shadow-md\">\n          <img\n            src={image.image_url.url}\n            alt=\"Image preview\"\n            className=\"w-full h-full object-cover transition-transform duration-200 group-hover:scale-105\"\n            onClick={handleImageClick}\n            onLoad={() => setImageLoaded(true)}\n          />\n\n          {/* Loading state */}\n          {!imageLoaded && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-gray-800\">\n              <FiImage className=\"text-gray-400 dark:text-gray-500\" size={20} />\n            </div>\n          )}\n\n          {/* Hover overlay with zoom hint */}\n          <div className=\"absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex items-center justify-center\">\n            <motion.div\n              initial={{ scale: 0.8, opacity: 0 }}\n              whileHover={{ scale: 1, opacity: 1 }}\n              className=\"bg-white/90 dark:bg-gray-800/90 rounded-full p-2 backdrop-blur-sm\"\n            >\n              <FiMaximize2 className=\"text-gray-700 dark:text-gray-300\" size={16} />\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Enhanced remove button - 调整位置确保完全可见 */}\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={(e) => {\n            e.stopPropagation();\n            onRemove();\n          }}\n          className=\"absolute top-0 right-0 bg-red-500 hover:bg-red-600 text-white rounded-full p-1.5 opacity-0 group-hover:opacity-100 transition-all duration-200 shadow-lg border-2 border-white dark:border-gray-900 z-20\"\n          title=\"Remove image\"\n        >\n          <FiX size={14} />\n        </motion.button>\n\n        {/* Image info tooltip - 移除可能导致黑色显示的 tooltip */}\n      </motion.div>\n\n      {/* Zoom modal */}\n      <Dialog open={isZoomed} onClose={handleCloseZoom} className=\"relative z-[9999]\">\n        {/* Background overlay */}\n        <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" aria-hidden=\"true\" />\n\n        {/* Modal content */}\n        <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n          <Dialog.Panel className=\"relative max-w-[90vw] max-h-[90vh] outline-none\">\n            {/* Close button */}\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={handleCloseZoom}\n              className=\"absolute -top-10 -right-10 bg-white/10 hover:bg-white/20 text-white rounded-full p-2 transition-colors z-10\"\n            >\n              <FiX size={24} />\n            </motion.button>\n\n            {/* Zoomed image */}\n            <motion.img\n              src={image.image_url.url}\n              alt=\"Zoomed preview\"\n              className=\"max-w-full max-h-[85vh] object-contain rounded-lg shadow-2xl\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.9 }}\n              transition={{ type: 'spring', duration: 0.3 }}\n            />\n          </Dialog.Panel>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiArrowRight } from 'react-icons/fi';\n\ninterface ActionButtonProps {\n  icon: React.ReactNode;\n  label: string;\n  onClick: () => void;\n  status?: 'default' | 'pending' | 'success' | 'error';\n  statusIcon?: React.ReactNode;\n  description?: string;\n}\n\n/**\n * ActionButton - 通用操作按钮组件，用于工具调用和环境状态查看等功能\n *\n * 设计原则：\n * - 突出工具图标的视觉差异\n * - 统一的视觉风格和交互体验\n * - 可定制的状态显示\n * - 一致的动画效果\n */\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  icon,\n  label,\n  onClick,\n  status = 'default',\n  statusIcon,\n  description,\n}) => {\n  // Helper function to get status color classes\n  const getStatusColorClasses = () => {\n    switch (status) {\n      case 'pending':\n        return 'border-slate-200 dark:border-slate-600 bg-slate-50 dark:bg-slate-800/40 text-slate-700 dark:text-slate-300';\n      case 'success':\n        return 'border-slate-200 dark:border-slate-600 bg-[#f9fafb] dark:bg-slate-800/60 text-slate-800 dark:text-slate-200';\n      case 'error':\n        return 'border-red-200 dark:border-red-700 bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-300';\n      default:\n        return 'border-slate-200 dark:border-slate-600 bg-[#f9fafb] dark:bg-slate-800/60 text-slate-800 dark:text-slate-200';\n    }\n  };\n\n  // Helper function to get hover effect classes\n  const getHoverColorClasses = () => {\n    switch (status) {\n      case 'pending':\n        return 'hover:bg-slate-100 dark:hover:bg-slate-700/50 hover:border-slate-300 dark:hover:border-slate-500';\n      case 'success':\n        return 'hover:bg-slate-50 dark:hover:bg-slate-700/60 hover:border-slate-300 dark:hover:border-slate-500';\n      case 'error':\n        return 'hover:bg-red-100 dark:hover:bg-red-800/30 hover:border-red-300 dark:hover:border-red-600';\n      default:\n        return 'hover:bg-slate-50 dark:hover:bg-slate-700/60 hover:border-slate-300 dark:hover:border-slate-500';\n    }\n  };\n\n  return (\n    <motion.button\n      onClick={onClick}\n      className={`flex items-center gap-2 px-3 py-1.5 text-xs font-medium rounded-xl hover:scale-[1.01] active:scale-[0.99] border text-left group w-full ${getStatusColorClasses()} ${getHoverColorClasses()}`}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      {/* Icon container with enhanced visual styling */}\n      <div className=\"flex-shrink-0 w-5 h-5 flex items-center justify-center\">{icon}</div>\n\n      {/* Button text */}\n      <div className=\"truncate flex-1\">\n        <span className=\"font-medium\">{label}</span>\n        {description && (\n          <span className=\"font-[400] text-xs opacity-70 truncate ml-1\">{description}</span>\n        )}\n      </div>\n\n      {/* Status icon or arrow */}\n      <div className=\"flex items-center gap-1.5 flex-shrink-0\">\n        {statusIcon || (\n          <FiArrowRight\n            className=\"opacity-60 group-hover:opacity-100 group-hover:translate-x-0.5 transition-all duration-200 text-slate-500 dark:text-slate-400\"\n            size={16}\n          />\n        )}\n      </div>\n    </motion.button>\n  );\n};\n","import React from 'react';\nimport { Message as MessageType } from '@/common/types';\nimport { Message } from '../index';\nimport { FiClock } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { isMultimodalContent } from '@/common/utils/typeGuards';\nimport { MessageTimestamp } from './MessageTimestamp';\n// import { ThinkingAnimation } from './ThinkingAnimation';\n\ninterface MessageGroupProps {\n  messages: MessageType[];\n  isThinking: boolean;\n}\n\n/**\n * MessageGroup Component - 重构版以支持流式渲染\n *\n * 设计原则:\n * - 每条消息独立渲染，避免阻塞\n * - 保持简洁的视觉层次结构\n * - 消息间的视觉关系通过样式而非嵌套实现\n */\nexport const MessageGroup: React.FC<MessageGroupProps> = ({ messages, isThinking }) => {\n  // 过滤掉环境消息\n  const filteredMessages = messages.filter((msg) => msg.role !== 'environment');\n\n  // 如果过滤后没有消息，则不渲染任何内容\n  if (filteredMessages.length === 0) {\n    return null;\n  }\n\n  // 获取用户消息和助手消息\n  const userMessages = filteredMessages.filter((msg) => msg.role === 'user');\n  const assistantMessages = filteredMessages.filter(\n    (msg) => msg.role === 'assistant' || msg.role === 'final_answer',\n  );\n\n  // 获取最后一条助手消息（用于时间戳和复制功能）\n  const lastResponseMessage =\n    assistantMessages.length > 0 ? assistantMessages[assistantMessages.length - 1] : null;\n\n  return (\n    <div>\n      {/* 渲染用户消息 - 处理多模态内容的拆分 */}\n      {userMessages.map((userMsg) => {\n        if (isMultimodalContent(userMsg.content)) {\n          const imageContents = userMsg.content.filter((part) => part.type === 'image_url');\n          const textContents = userMsg.content.filter((part) => part.type === 'text');\n\n          // 同时包含图片和文本时拆分显示\n          if (imageContents.length > 0 && textContents.length > 0) {\n            return (\n              <React.Fragment key={userMsg.id}>\n                <Message\n                  message={{\n                    ...userMsg,\n                    content: imageContents,\n                    id: `${userMsg.id}-images`,\n                  }}\n                />\n                <Message\n                  message={{\n                    ...userMsg,\n                    content: textContents,\n                    id: `${userMsg.id}-text`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        }\n\n        // 普通用户消息\n        return <Message key={userMsg.id} message={userMsg} />;\n      })}\n\n      {/* 渲染所有助手消息 - 每条消息独立渲染，支持流式展示 */}\n      {assistantMessages.map((message, index) => (\n        <Message\n          key={message.id}\n          message={message}\n          // 移除 isIntermediate 属性，让每条消息都使用一致的样式\n          isInGroup={true}\n          // 只有最后一条消息且非思考状态时显示时间戳\n          shouldDisplayTimestamp={index === assistantMessages.length - 1 && !isThinking}\n        />\n      ))}\n\n      {/* 时间戳和复制功能 */}\n      {!isThinking && lastResponseMessage && (\n        <div className=\"mt-1 mb-2\">\n          <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 px-2\">\n            <div className=\"flex items-center\">\n              <FiClock size={10} className=\"mr-1\" />\n              {formatTimestamp(lastResponseMessage.timestamp)}\n            </div>\n\n            {/* 集成复制功能按钮 - 现在使用最后一条消息 */}\n            <MessageTimestamp\n              timestamp={lastResponseMessage.timestamp}\n              content={lastResponseMessage.content}\n              role={lastResponseMessage.role}\n              inlineStyle={true}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport React from 'react';\nimport { FiCheck, FiCopy } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { useCopyToClipboard } from '../hooks/useCopyToClipboard';\n\ninterface MessageTimestampProps {\n  timestamp: number;\n  content: string | ChatCompletionContentPart[];\n  role: string;\n  inlineStyle?: boolean; // 新增属性，用于内联显示模式\n}\n\n/**\n * Component for displaying message timestamp and copy functionality\n *\n * Design principles:\n * - Unobtrusive placement to reduce visual noise\n * - Accessible on hover for contextual actions\n * - Clear visual feedback for copy operations\n */\nexport const MessageTimestamp: React.FC<MessageTimestampProps> = ({\n  timestamp,\n  content,\n  role,\n  inlineStyle = false,\n}) => {\n  const { isCopied, copyToClipboard } = useCopyToClipboard();\n\n  const handleCopy = () => {\n    const textToCopy =\n      typeof content === 'string'\n        ? content\n        : content\n            .filter((part) => part.type === 'text')\n            .map((part) => part.text)\n            .join('\\n');\n\n    copyToClipboard(textToCopy);\n  };\n\n  if (inlineStyle) {\n    // 内联样式模式，只显示复制按钮\n    return (\n      <button\n        onClick={handleCopy}\n        className=\"flex items-center text-gray-400 hover:text-accent-500 dark:hover:text-accent-400 transition-colors\"\n        title=\"Copy message\"\n      >\n        {isCopied ? <FiCheck size={12} /> : <FiCopy size={12} />}\n        <span className=\"ml-1\">{isCopied ? 'Copied' : 'Copy'}</span>\n      </button>\n    );\n  }\n\n  // 原有的浮动样式\n  return (\n    <div\n      className={`absolute bottom-0 ${role === 'user' ? 'right-0' : 'left-0'} flex items-center text-xs text-gray-400 dark:text-gray-500 opacity-0 transition-opacity duration-200 group-hover:opacity-100 -mb-6`}\n    >\n      <span className=\"mr-2\">{formatTimestamp(timestamp)}</span>\n      <button\n        onClick={handleCopy}\n        className=\"flex items-center text-gray-400 hover:text-accent-500 dark:hover:text-accent-400\"\n        title=\"Copy to clipboard\"\n      >\n        {isCopied ? <FiCheck size={12} /> : <FiCopy size={12} />}\n      </button>\n    </div>\n  );\n};\n","import { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface MultimodalContentProps {\n  content: ChatCompletionContentPart[];\n  timestamp: number;\n  setActivePanelContent: any;\n}\n\n/**\n * Component for rendering multimodal content (text and images)\n *\n * Design principles:\n * - Seamless integration of different content types\n * - Interactive image previews with expansion capability\n * - Consistent formatting of text and visual elements\n */\nexport const MultimodalContent: React.FC<MultimodalContentProps> = ({\n  content,\n  timestamp,\n  setActivePanelContent,\n}) => {\n  // 筛选出图片和文本内容\n  const imageContents = content.filter((part) => part.type === 'image_url');\n  const textContents = content.filter((part) => part.type === 'text');\n\n  // 仅包含图片的情况 - 优化布局\n  const isImageOnly = imageContents.length > 0 && textContents.length === 0;\n\n  return (\n    <>\n      {/* 渲染图片内容 */}\n      {imageContents.length > 0 && (\n        <div\n          className={`${isImageOnly ? '' : 'mt-2 mb-2'} ${imageContents.length > 1 ? 'flex flex-wrap gap-2' : ''}`}\n        >\n          {imageContents.map((part, index) => (\n            <motion.div\n              key={`image-${index}`}\n              whileHover={{ scale: 1.02 }}\n              onClick={() =>\n                setActivePanelContent({\n                  type: 'image',\n                  source: part.image_url.url,\n                  title: 'Image',\n                  timestamp,\n                })\n              }\n              className=\"relative group cursor-pointer inline-block\"\n            >\n              {/* Render the actual image thumbnail */}\n              <img\n                src={part.image_url.url}\n                alt={'Image'}\n                className={`${isImageOnly ? 'max-h-48' : 'h-24'} rounded-3xl object-cover`}\n              />\n\n              {/* Hover overlay */}\n              {/* <div className=\"absolute inset-0 bg-black/30 opacity-0 group-hover:opacity-100 rounded-lg transition-opacity duration-200 flex items-center justify-center\">\n                <FiMaximize className=\"text-white\" size={20} />\n              </div> */}\n            </motion.div>\n          ))}\n        </div>\n      )}\n\n      {/* 渲染文本内容 - 确保用户消息中文本可见 */}\n      {textContents.map((part, index) => (\n        <div key={`text-${index}`} className=\"text-current\">\n          <MarkdownRenderer key={`text-${index}`} content={part.text} />\n        </div>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiBookOpen, FiChevronRight } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\n\ninterface ReportFileEntryProps {\n  title: string;\n  timestamp: number;\n  content: string;\n}\n\n/**\n * ReportFileEntry - Displays a file-like entry for research reports\n *\n * This component creates a clickable file entry that opens the associated\n * research report in the workspace panel when clicked.\n */\nexport const ReportFileEntry: React.FC<ReportFileEntryProps> = ({ title, timestamp, content }) => {\n  const { setActivePanelContent } = useSession();\n\n  const handleClick = () => {\n    setActivePanelContent({\n      type: 'research_report',\n      source: content,\n      title: title || 'Research Report',\n      timestamp,\n    });\n  };\n\n  return (\n    <motion.div\n      whileHover={{ y: -2, backgroundColor: 'rgba(0, 0, 0, 0.01)' }}\n      whileTap={{ scale: 0.98 }}\n      onClick={handleClick}\n      className=\"mt-3 p-3 bg-white dark:bg-gray-800 rounded-xl border border-gray-100/40 dark:border-gray-700/20 cursor-pointer flex items-center gap-3 group\"\n    >\n      <div className=\"w-10 h-10 flex-shrink-0 rounded-lg bg-accent-50 dark:bg-accent-900/20 flex items-center justify-center border border-accent-100/40 dark:border-accent-800/30\">\n        <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={18} />\n      </div>\n\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"font-medium text-gray-800 dark:text-gray-200 truncate\">\n          {title || 'Research Report'}\n        </div>\n        <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center\">\n          Research report • Click to view\n        </div>\n      </div>\n\n      <FiChevronRight\n        className=\"text-gray-400 dark:text-gray-500 opacity-0 group-hover:opacity-100 transition-opacity\"\n        size={16}\n      />\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { FiInfo } from 'react-icons/fi';\n\ninterface SystemMessageProps {\n  content: string;\n}\n\n/**\n * Component for displaying system messages\n * \n * Design principles:\n * - Simple, informational styling\n * - Clear visual indication of system-generated content\n */\nexport const SystemMessage: React.FC<SystemMessageProps> = ({ content }) => (\n  <div className=\"flex items-center gap-2 text-sm\">\n    <FiInfo className=\"shrink-0\" />\n    <span>{content}</span>\n  </div>\n);\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiCode } from 'react-icons/fi';\nimport { ToggleButton } from './ToggleButton';\n\ninterface ThinkingToggleProps {\n  thinking: string;\n  showThinking: boolean;\n  setShowThinking: (show: boolean) => void;\n}\n\n/**\n * Component for showing/hiding the agent's reasoning process\n *\n * Design principles:\n * - Collapsible content to reduce visual noise\n * - Clear visual distinction for thinking process\n * - Smooth animations for state transitions\n */\nexport const ThinkingToggle: React.FC<ThinkingToggleProps> = ({\n  thinking,\n  showThinking,\n  setShowThinking,\n}) => (\n  <div className=\"mt-3\">\n    <ToggleButton\n      isExpanded={showThinking}\n      onToggle={() => setShowThinking(!showThinking)}\n      icon={<FiCode className=\"mr-1.5\" />}\n    >\n      {showThinking ? 'Hide reasoning' : 'Show reasoning'}\n    </ToggleButton>\n\n    <AnimatePresence>\n      {showThinking && (\n        <motion.div\n          initial={{ height: 0, opacity: 0 }}\n          animate={{ height: 'auto', opacity: 1 }}\n          exit={{ height: 0, opacity: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"overflow-hidden\"\n        >\n          <div className=\"mt-2 p-3 bg-gray-50/80 dark:bg-gray-700/40 rounded-xl text-xs font-mono overflow-x-auto border border-gray-100/40 dark:border-gray-600/20\">\n            {thinking}\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  </div>\n);\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiChevronDown, FiChevronUp } from 'react-icons/fi';\n\ninterface ToggleButtonProps {\n  isExpanded: boolean;\n  onToggle: () => void;\n  icon?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\n/**\n * Reusable toggle button component\n *\n * Design principles:\n * - Consistent interaction patterns\n * - Visual feedback for state changes\n * - Flexible styling with icon support\n */\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({\n  isExpanded,\n  onToggle,\n  icon,\n  children,\n}) => (\n  <motion.button\n    whileHover={{ x: 3 }}\n    onClick={onToggle}\n    className=\"flex items-center text-xs text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 py-1 px-2 mt-1 rounded-lg hover:bg-gray-50/70 dark:hover:bg-gray-700/20 transition-all duration-200\"\n  >\n    {isExpanded ? <FiChevronUp className=\"mr-1.5\" /> : <FiChevronDown className=\"mr-1.5\" />}\n    {icon}\n    {children}\n  </motion.button>\n);\n","import React from 'react';\nimport { FiLoader, FiCheck, FiX, FiClock, FiAlertCircle } from 'react-icons/fi';\nimport { motion } from 'framer-motion';\nimport { ActionButton } from './ActionButton';\n\ninterface ToolCallsProps {\n  toolCalls: any[];\n  onToolCallClick: (toolCall: any) => void;\n  getToolIcon: (name: string) => React.ReactNode;\n  isIntermediate?: boolean;\n  toolResults?: any[]; // Add toolResults to check completion status\n}\n\n/**\n * Component for displaying tool calls with enhanced icons and loading states\n *\n * Design principles:\n * - Distinct visual identity for different tool types\n * - Shows loading state for pending tool calls\n * - Displays success/error status with appropriate icons\n * - Provides clear visual feedback with enhanced tool-specific colors\n */\nexport const ToolCalls: React.FC<ToolCallsProps> = ({\n  toolCalls,\n  onToolCallClick,\n  getToolIcon,\n  isIntermediate = false,\n  toolResults = [],\n}) => {\n  // Helper function to get tool call status\n  const getToolCallStatus = (toolCall: any) => {\n    const result = toolResults.find((result) => result.toolCallId === toolCall.id);\n\n    if (!result) {\n      return 'pending'; // No result yet, tool is still running\n    }\n\n    if (result.error) {\n      return 'error'; // Tool execution failed\n    }\n\n    return 'success'; // Tool completed successfully\n  };\n\n  // Helper function to get status icon with enhanced visual styling\n  const getStatusIcon = (status: string, toolName: string) => {\n    switch (status) {\n      case 'pending':\n        return (\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n          >\n            <FiLoader size={16} className=\"text-slate-500 dark:text-slate-400\" />\n          </motion.div>\n        );\n      case 'success':\n        return <FiCheck size={16} className=\"text-green-600 dark:text-green-400\" />;\n      case 'error':\n        return <FiAlertCircle size={16} className=\"text-red-600 dark:text-red-400\" />;\n      default:\n        return <FiClock size={16} className=\"text-slate-500 dark:text-slate-400\" />;\n    }\n  };\n\n  // 生成工具描述文本 - 增强描述信息的可读性\n  const getToolDescription = (toolCall: any) => {\n    try {\n      const args = JSON.parse(toolCall.function.arguments || '{}');\n\n      switch (toolCall.function.name) {\n        case 'web_search':\n          return args.query ? `\"${args.query}\"` : '';\n        case 'browser_navigate':\n          // 限制 URL 长度以避免溢出\n          return args.url;\n        case 'browser_vision_control':\n        case 'browser_control':\n          return args.action ? `${args.action}` : '';\n        case 'browser_click':\n          return args.selector || args.text ? `click: ${args.selector || args.text}` : 'click';\n        case 'list_directory':\n          return args.path ? `path: ${args.path}` : '';\n        case 'run_command':\n          return args.command;\n\n        case 'read_file':\n        case 'write_file':\n          return args.path ? `file: ${args.path.split('/').pop()}` : '';\n        default:\n          return '';\n      }\n    } catch (error) {\n      console.error('Failed to parse tool arguments:', error);\n      return '';\n    }\n  };\n\n  // 获取浏览器操作结果说明\n  const getResultInfo = (toolCall: any, status: string) => {\n    const result = toolResults.find((result) => result.toolCallId === toolCall.id);\n\n    if (status === 'error' && result?.error) {\n      return '\"operation failed\"';\n    } else if (status === 'success') {\n      if (toolCall.function.name === 'browser_get_markdown') {\n        return '\"content retrieved\"';\n      } else if (toolCall.function.name === 'browser_navigate') {\n        return '\"navigation success\"';\n      } else if (toolCall.function.name === 'browser_click') {\n        return '\"click successful\"';\n      } else if (toolCall.function.name.startsWith('run_')) {\n        return '\"command executed\"';\n      } else if (toolCall.function.name.startsWith('list_')) {\n        return '\"files listed\"';\n      } else if (toolCall.function.name.startsWith('read_')) {\n        return '\"file read\"';\n      } else if (toolCall.function.name.startsWith('write_')) {\n        return '\"file saved\"';\n      }\n    }\n\n    return '';\n  };\n\n  // 获取工具的格式化名称，使其更易读\n  const getToolDisplayName = (toolName: string) => {\n    // 替换下划线为空格\n    const nameWithSpaces = toolName.replace(/_/g, ' ');\n\n    // 特殊情况处理\n    switch (toolName) {\n      case 'browser_navigate':\n        return 'Navigate';\n      case 'browser_get_markdown':\n        return 'Extract Content';\n      case 'browser_click':\n        return 'Click Element';\n      case 'web_search':\n        return 'Web Search';\n      case 'list_directory':\n        return 'List Files';\n      case 'run_command':\n        return 'Run Command';\n      case 'read_file':\n        return 'Read File';\n      case 'write_file':\n        return 'Write File';\n      default:\n        // 首字母大写\n        return nameWithSpaces\n          .split(' ')\n          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ');\n    }\n  };\n\n  return (\n    <div className=\"mt-2 space-y-1.5\">\n      {toolCalls.map((toolCall) => {\n        const status = getToolCallStatus(toolCall) as 'pending' | 'success' | 'error';\n        const description = getToolDescription(toolCall);\n        const browserInfo = getResultInfo(toolCall, status);\n        const displayName = getToolDisplayName(toolCall.function.name);\n\n        return (\n          <ActionButton\n            key={toolCall.id}\n            icon={getToolIcon(toolCall.function.name)}\n            label={displayName}\n            onClick={() => onToolCallClick(toolCall)}\n            status={status}\n            statusIcon={getStatusIcon(status, toolCall.function.name)}\n            description={description || browserInfo || undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\n/**\n * Hook for copying text to clipboard with feedback state\n *\n * @returns Object containing copy state and copy function\n */\nexport const useCopyToClipboard = () => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  };\n\n  return { isCopied, copyToClipboard };\n};\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { isMultimodalContent } from '@/common/utils/typeGuards';\nimport { ChatCompletionContentPart, Message as MessageType } from '@/common/types';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useTool } from '@/common/hooks/useTool';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport './Message.css';\n\n// Import sub-components\nimport { SystemMessage } from './components/SystemMessage';\nimport { MultimodalContent } from './components/MultimodalContent';\nimport { ToolCalls } from './components/ToolCalls';\nimport { ThinkingToggle } from './components/ThinkingToggle';\nimport { MessageTimestamp } from './components/MessageTimestamp';\nimport { useAtomValue } from 'jotai';\nimport { replayStateAtom } from '@/common/state/atoms/replay';\nimport { ReportFileEntry } from './components/ReportFileEntry';\nimport { messagesAtom } from '@/common/state/atoms/message';\nimport { FiMonitor } from 'react-icons/fi';\nimport { ActionButton } from './components/ActionButton';\n\ninterface MessageProps {\n  message: MessageType;\n  shouldDisplayTimestamp?: boolean;\n  isInGroup?: boolean;\n}\n\n/**\n * Message Component - 重构版，移除 isIntermediate 差异\n *\n * 设计原则:\n * - 统一的消息样式，不区分中间和最终状态\n * - 专注于内容，减少视觉干扰\n * - 优雅的样式和排版\n * - 支持便捷的消息复制功能\n */\nexport const Message: React.FC<MessageProps> = ({\n  message,\n  isInGroup = false,\n  shouldDisplayTimestamp = true,\n}) => {\n  const [showThinking, setShowThinking] = useState(false);\n  const [showSteps, setShowSteps] = useState(false);\n  const { setActivePanelContent, activeSessionId } = useSession();\n  const { getToolIcon } = useTool();\n  const replayState = useAtomValue(replayStateAtom);\n  const allMessages = useAtomValue(messagesAtom);\n\n  const isMultimodal = isMultimodalContent(message.content);\n  const isEnvironment = message.role === 'environment';\n  const isUserMessage = message.role === 'user';\n\n  const isFinalAnswer = message.role === 'final_answer' || message.isDeepResearch;\n\n  // Check if this is a final assistant response\n  const isFinalAssistantResponse = message.role === 'assistant' && message.finishReason === 'stop';\n\n  // Handle tool call click - show in panel\n  const handleToolCallClick = (toolCall: any) => {\n    if (message.toolResults && message.toolResults.length > 0) {\n      const result = message.toolResults.find((r) => r.toolCallId === toolCall.id);\n      if (result) {\n        setActivePanelContent({\n          type: result.type,\n          source: result.content,\n          title: result.name,\n          timestamp: result.timestamp,\n          toolCallId: result.toolCallId,\n          error: result.error,\n          arguments: result.arguments,\n          _extra: result._extra,\n        });\n      }\n    }\n  };\n\n  // Handle click on final assistant response to show latest environment state\n  const handleFinalResponseClick = () => {\n    if (!activeSessionId || !isFinalAssistantResponse) return;\n\n    const sessionMessages = allMessages[activeSessionId] || [];\n\n    // Find the most recent environment input\n    for (let i = sessionMessages.length - 1; i >= 0; i--) {\n      const msg = sessionMessages[i];\n      if (msg.role === 'environment' && Array.isArray(msg.content)) {\n        const imageContent = msg.content.find(\n          (item) => item.type === 'image_url' && item.image_url && item.image_url.url,\n        );\n\n        if (imageContent) {\n          setActivePanelContent({\n            type: 'image',\n            source: msg.content,\n            title: msg.description || 'Final Environment State',\n            timestamp: msg.timestamp,\n            environmentId: msg.id,\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  // Render content based on type\n  const renderContent = () => {\n    if (isMultimodal) {\n      return (\n        <MultimodalContent\n          content={message.content as ChatCompletionContentPart[]}\n          timestamp={message.timestamp}\n          setActivePanelContent={setActivePanelContent}\n        />\n      );\n    }\n\n    // For assistant messages with tool calls, first show summary\n    if (message.role === 'assistant' && message.toolCalls && message.toolCalls.length > 0) {\n      return (\n        <div className=\"prose dark:prose-invert prose-sm max-w-none text-xs\">\n          <MarkdownRenderer content={message.content as string} />\n        </div>\n      );\n    }\n\n    if (isUserMessage) {\n      return (\n        <div\n          style={{\n            whiteSpace: 'break-spaces',\n          }}\n        >\n          {message.content as string}\n        </div>\n      );\n    }\n\n    // Use forceDarkTheme for user messages only\n    return <MarkdownRenderer content={message.content as string} forceDarkTheme={isUserMessage} />;\n  };\n\n  // Determine message bubble style based on role and state\n  const getMessageBubbleClasses = () => {\n    let baseClasses = '';\n\n    if (message.role === 'user') {\n      if (isImageOnlyMessage) {\n        baseClasses = 'message-user message-user-image';\n      } else {\n        baseClasses = 'message-user';\n      }\n    } else if (message.role === 'system') {\n      baseClasses = 'message-system';\n    } else if (message.role === 'environment') {\n      baseClasses = 'environment-message-minimal';\n    } else {\n      baseClasses = 'message-assistant';\n    }\n\n    // 添加更平滑的点击样式\n    if (isFinalAssistantResponse) {\n      baseClasses += ' cursor-pointer';\n    }\n\n    return baseClasses;\n  };\n\n  // 检查消息是否只包含图片（用于样式优化）\n  const isImageOnlyMessage = React.useMemo(() => {\n    if (!isMultimodalContent(message.content)) return false;\n\n    const imageContents = message.content.filter((part) => part.type === 'image_url');\n    const textContents = message.content.filter((part) => part.type === 'text');\n\n    return imageContents.length > 0 && textContents.length === 0;\n  }, [message.content]);\n\n  // 检查是否有环境状态可显示\n  const hasEnvironmentState = React.useMemo(() => {\n    if (!activeSessionId || !isFinalAssistantResponse || !allMessages[activeSessionId])\n      return false;\n\n    const sessionMessages = allMessages[activeSessionId] || [];\n    // 检查是否有环境消息\n    return sessionMessages.some(\n      (msg) =>\n        msg.role === 'environment' &&\n        Array.isArray(msg.content) &&\n        msg.content.some(\n          (item) => item.type === 'image_url' && item.image_url && item.image_url.url,\n        ),\n    );\n  }, [activeSessionId, isFinalAssistantResponse, allMessages]);\n\n  // Determine which prose class should be used, based on message type and dark mode\n  const getProseClasses = () => {\n    if (message.role === 'user') {\n      return 'prose prose-invert prose-sm max-w-none';\n    } else {\n      // For helper messages, use normal prose but apply prose-invert in dark mode\n      return 'prose dark:prose-invert prose-sm max-w-none';\n    }\n  };\n\n  return (\n    <div\n      className={`message-container ${message.role === 'user' ? 'message-container-user' : 'message-container-assistant'}`}\n    >\n      <div className={`message-bubble ${getMessageBubbleClasses()}`}>\n        {/* Role-based content */}\n        {message.role === 'system' ? (\n          <SystemMessage content={message.content as string} />\n        ) : (\n          <>\n            <div className={getProseClasses()}>{renderContent()}</div>\n\n            {isFinalAssistantResponse && hasEnvironmentState && (\n              <div className=\"mt-2\">\n                <ActionButton\n                  icon={<FiMonitor size={14} />}\n                  label=\"view final environment state\"\n                  onClick={handleFinalResponseClick}\n                />\n              </div>\n            )}\n\n            {isFinalAnswer && message.title && typeof message.content === 'string' && (\n              <ReportFileEntry\n                title={message.title || 'Research Report'}\n                timestamp={message.timestamp}\n                content={message.content}\n              />\n            )}\n\n            {message.toolCalls && message.toolCalls.length > 0 && (\n              <ToolCalls\n                toolCalls={message.toolCalls}\n                onToolCallClick={handleToolCallClick}\n                getToolIcon={getToolIcon}\n                toolResults={message.toolResults || []} // Pass tool results for status checking\n              />\n            )}\n\n            {message.thinking && (\n              <ThinkingToggle\n                thinking={message.thinking}\n                showThinking={showThinking}\n                setShowThinking={setShowThinking}\n              />\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Timestamp and copy button - only for main messages */}\n      {message.role !== 'system' &&\n        !isInGroup &&\n        shouldDisplayTimestamp &&\n        !replayState.isActive && (\n          <MessageTimestamp\n            timestamp={message.timestamp}\n            content={message.content}\n            role={message.role}\n          />\n        )}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useSession } from '@/common/hooks/useSession';\nimport { usePlan } from '@/common/hooks/usePlan';\nimport { FiSend, FiX, FiRefreshCw, FiPaperclip, FiImage, FiLoader, FiCpu } from 'react-icons/fi';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ConnectionStatus } from '@/common/types';\nimport { useLocation } from 'react-router-dom';\nimport './MessageInput.css';\nimport { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport { ImagePreview } from './ImagePreview';\n\ninterface MessageInputProps {\n  isDisabled?: boolean;\n  onReconnect?: () => void;\n  connectionStatus?: ConnectionStatus;\n  initialQuery?: string;\n}\n\n/**\n * MessageInput Component - Input for sending messages\n */\nexport const MessageInput: React.FC<MessageInputProps> = ({\n  isDisabled = false,\n  onReconnect,\n  connectionStatus,\n}) => {\n  const [input, setInput] = useState('');\n  const [isAborting, setIsAborting] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState<ChatCompletionContentPart[]>([]);\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const location = useLocation();\n\n  const {\n    sendMessage,\n    isProcessing,\n    abortQuery,\n    activeSessionId,\n    checkSessionStatus,\n    setActivePanelContent,\n  } = useSession();\n\n  const { currentPlan } = usePlan(activeSessionId);\n\n  // Process query from URL parameters on component mount\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get('q');\n\n    if (query && !isProcessing && activeSessionId) {\n      setInput(query);\n\n      // Submit the query automatically\n      const submitQuery = async () => {\n        try {\n          await sendMessage(query);\n          // Clear input after sending\n          setInput('');\n        } catch (error) {\n          console.error('Failed to send message:', error);\n        }\n      };\n\n      submitQuery();\n    }\n  }, [location.search, activeSessionId, isProcessing, sendMessage]);\n\n  // Ensure processing state is handled correctly\n  useEffect(() => {\n    if (activeSessionId && connectionStatus?.connected) {\n      // Initial check of session status\n      checkSessionStatus(activeSessionId);\n\n      // If session status changes, increase polling\n      const intervalId = setInterval(() => {\n        checkSessionStatus(activeSessionId);\n      }, 2000); // Check status every 2 seconds\n\n      return () => clearInterval(intervalId);\n    }\n  }, [activeSessionId, connectionStatus?.connected, checkSessionStatus]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if ((!input.trim() && uploadedImages.length === 0) || isDisabled) return;\n\n    // Immediately clear input field, don't wait for message to be sent\n    const messageToSend = input.trim();\n    setInput('');\n\n    // Build multimodal content if there are images\n    const messageContent =\n      uploadedImages.length > 0\n        ? [\n            ...uploadedImages,\n            ...(messageToSend\n              ? [{ type: 'text', text: messageToSend } as ChatCompletionContentPart]\n              : []),\n          ]\n        : messageToSend;\n\n    // Clear uploaded images\n    setUploadedImages([]);\n\n    // Reset textarea height immediately\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n    }\n\n    try {\n      // Use previously saved message content to send\n      await sendMessage(messageContent);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  // Modified to not trigger send on Enter\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    // Ctrl+Enter as optional shortcut to send\n    if (e.key === 'Enter' && e.ctrlKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  const handleAbort = async () => {\n    if (!isProcessing) return;\n\n    setIsAborting(true);\n    try {\n      await abortQuery();\n    } catch (error) {\n      console.error('Failed to abort:', error);\n    } finally {\n      setIsAborting(false);\n    }\n  };\n\n  // Adjust textarea height based on content\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.target;\n    setInput(target.value);\n\n    // Reset height to recalculate proper scrollHeight\n    target.style.height = 'auto';\n    // Set to scrollHeight but max 200px\n    target.style.height = `${Math.min(target.scrollHeight, 200)}px`;\n  };\n\n  // Auto-focus input when available\n  useEffect(() => {\n    if (!isDisabled && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isDisabled]);\n\n  // Dummy handler for file upload button\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle file selection\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files || files.length === 0) return;\n\n    Array.from(files).forEach((file) => {\n      if (!file.type.startsWith('image/')) return;\n\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        if (event.target?.result) {\n          const newImage: ChatCompletionContentPart = {\n            type: 'image_url',\n            image_url: {\n              url: event.target.result as string,\n              detail: 'auto',\n            },\n          };\n          setUploadedImages((prev) => [...prev, newImage]);\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n\n    // Reset the input so the same file can be selected again\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  // Handle paste event to support pasting images directly\n  const handlePaste = (e: React.ClipboardEvent) => {\n    // Skip if disabled or processing\n    if (isDisabled || isProcessing) return;\n\n    const items = e.clipboardData?.items;\n    if (!items) return;\n\n    let hasProcessedImage = false;\n\n    // Process each item in the clipboard\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n\n      // Check if item is an image\n      if (item.type.indexOf('image') !== -1) {\n        hasProcessedImage = true;\n\n        // Get image as blob\n        const blob = item.getAsFile();\n        if (!blob) continue;\n\n        // Read the image file\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          if (event.target?.result) {\n            const newImage: ChatCompletionContentPart = {\n              type: 'image_url',\n              image_url: {\n                url: event.target.result as string,\n                detail: 'auto',\n              },\n            };\n            setUploadedImages((prev) => [...prev, newImage]);\n          }\n        };\n        reader.readAsDataURL(blob);\n      }\n    }\n\n    // If we processed at least one image, prevent the default paste behavior\n    if (hasProcessedImage) {\n      // We don't prevent default completely so text can still be pasted\n      // But we still log for debugging purposes\n      console.log('Processed pasted image(s)');\n    }\n  };\n\n  // Remove an image from the uploaded images list\n  const handleRemoveImage = (index: number) => {\n    setUploadedImages((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  // 添加一个查看计划按钮\n  const renderPlanButton = () => {\n    // 只在实际有计划且计划已经生成时显示按钮\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.button\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.8 }}\n        whileTap={{ scale: 0.9 }}\n        whileHover={{ scale: 1.05, y: -2 }}\n        onClick={() =>\n          setActivePanelContent({\n            type: 'plan',\n            source: null,\n            title: 'Task Plan',\n            timestamp: Date.now(),\n          })\n        }\n        className=\"flex items-center gap-1 px-3 py-1 text-xs font-medium rounded-full bg-white/80 dark:bg-gray-800 text-gray-600 dark:text-gray-300 border border-gray-200/50 dark:border-gray-700/30 hover:bg-white hover:border-gray-300/50 dark:hover:bg-gray-700/50 dark:hover:border-gray-600/50 transition-all duration-200 shadow-sm\"\n      >\n        {isComplete ? (\n          <FiCpu size={12} className=\"mr-0.5 text-green-500 dark:text-green-400\" />\n        ) : (\n          <FiCpu size={12} className=\"mr-0.5 text-accent-500 dark:text-accent-400 animate-pulse\" />\n        )}\n        View Plan\n        <span\n          className={`ml-1 px-1.5 py-0.5 rounded-full ${\n            isComplete\n              ? 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400'\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n          } text-[10px]`}\n        >\n          {completedSteps}/{totalSteps}\n        </span>\n      </motion.button>\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"relative\">\n      {/* Plan button - 仅在计划实际存在且已生成时显示 */}\n      {currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0 && (\n        <div className=\"flex justify-center mb-3\">{renderPlanButton()}</div>\n      )}\n\n      {/* Image preview area */}\n      {uploadedImages.length > 0 && (\n        <div className=\"mb-3 flex flex-wrap gap-2\">\n          {uploadedImages.map((image, index) => (\n            <ImagePreview key={index} image={image} onRemove={() => handleRemoveImage(index)} />\n          ))}\n        </div>\n      )}\n\n      {/* 修复的圆角容器结构 */}\n      <div\n        className={`relative overflow-hidden rounded-3xl transition-all duration-300 ${\n          isFocused ? 'shadow-md' : ''\n        }`}\n      >\n        {/* 渐变边框背景 - 现在填充整个容器而不是使用padding */}\n        <div\n          className={`absolute inset-0 bg-gradient-to-r ${\n            isFocused || input.trim() || uploadedImages.length > 0\n              ? 'from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-400 animate-border-flow'\n              : 'from-gray-200 via-gray-300 to-gray-200 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700'\n          } bg-[length:200%_200%] ${isFocused ? 'opacity-100' : 'opacity-70'}`}\n        ></div>\n\n        {/* 内容容器 - 稍微缩小以显示边框 */}\n        <div\n          className={`relative m-[2px] rounded-[1.4rem] bg-white dark:bg-gray-800 backdrop-blur-sm ${\n            isDisabled ? 'opacity-90' : ''\n          }`}\n        >\n          <textarea\n            ref={inputRef}\n            value={input}\n            onChange={handleInput}\n            onKeyDown={handleKeyDown}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onPaste={handlePaste}\n            placeholder={\n              connectionStatus && !connectionStatus.connected\n                ? 'Server disconnected...'\n                : isProcessing\n                  ? 'Agent TARS is running...'\n                  : 'Ask Agent TARS something... (Ctrl+Enter to send)'\n            }\n            disabled={isDisabled}\n            className=\"w-full px-5 pt-4 pb-10 focus:outline-none resize-none min-h-[90px] max-h-[200px] bg-transparent text-sm leading-relaxed rounded-[1.4rem]\"\n            rows={2}\n          />\n\n          {/* File upload buttons */}\n          <div className=\"absolute left-3 bottom-2 flex items-center gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              type=\"button\"\n              onClick={handleFileUpload}\n              disabled={isDisabled || isProcessing}\n              className={`p-2 rounded-full transition-colors ${\n                isDisabled || isProcessing\n                  ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                  : 'text-gray-400 hover:text-accent-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'\n              }`}\n              title=\"Attach image (or paste directly)\"\n            >\n              <FiImage size={18} />\n            </motion.button>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n              accept=\"image/*\"\n              multiple\n              className=\"hidden\"\n              disabled={isDisabled || isProcessing}\n            />\n          </div>\n\n          <AnimatePresence mode=\"wait\">\n            {connectionStatus && !connectionStatus.connected ? (\n              <motion.button\n                key=\"reconnect\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"button\"\n                onClick={onReconnect}\n                className=\"absolute right-3 bottom-2 p-2 rounded-full text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400 transition-all duration-200\"\n                title=\"Try to reconnect\"\n              >\n                <FiRefreshCw\n                  size={20}\n                  className={connectionStatus.reconnecting ? 'animate-spin' : ''}\n                />\n              </motion.button>\n            ) : isProcessing ? (\n              <motion.button\n                key=\"abort\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"button\"\n                onClick={handleAbort}\n                disabled={isAborting}\n                className={`absolute right-3 bottom-2 p-2 rounded-full ${\n                  isAborting\n                    ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed'\n                    : 'text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'\n                } transition-all duration-200`}\n                title=\"Abort current operation\"\n              >\n                {isAborting ? <FiLoader className=\"animate-spin\" size={20} /> : <FiX size={20} />}\n              </motion.button>\n            ) : (\n              <motion.button\n                key=\"send\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileTap={{ scale: 0.9 }}\n                whileHover={{ scale: 1.05 }}\n                type=\"submit\"\n                disabled={(!input.trim() && uploadedImages.length === 0) || isDisabled}\n                className={`absolute right-3 bottom-2 p-3 rounded-full ${\n                  (!input.trim() && uploadedImages.length === 0) || isDisabled\n                    ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed'\n                    : 'bg-gradient-to-r from-indigo-500 to-purple-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-400 text-white dark:text-gray-900 shadow-sm'\n                } transition-all duration-200`}\n              >\n                <FiSend size={18} />\n              </motion.button>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n\n      <div className=\"flex justify-center mt-2 text-xs\">\n        {connectionStatus && !connectionStatus.connected ? (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            animate={{ opacity: 1 }}\n            className=\"text-red-500 dark:text-red-400 flex items-center font-medium\"\n          >\n            {connectionStatus.reconnecting\n              ? 'Attempting to reconnect...'\n              : 'Server disconnected. Click the button to reconnect.'}\n          </motion.span>\n        ) : isProcessing ? (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            whileHover={{ opacity: 1 }}\n            className=\"text-accent-500 dark:text-accent-400 flex items-center\"\n          >\n            <span className=\"typing-indicator mr-2\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </span>\n            Agent is processing your request...\n          </motion.span>\n        ) : (\n          <motion.span\n            initial={{ opacity: 0.7 }}\n            whileHover={{ opacity: 1 }}\n            className=\"text-gray-500 dark:text-gray-400 transition-opacity\"\n          >\n            Use Ctrl+Enter to quickly send • You can also paste images directly\n          </motion.span>\n        )}\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiBookOpen, FiClock } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { formatTimestamp } from '@/common/utils/formatters';\n\ninterface ResearchReportEntryProps {\n  title: string;\n  timestamp: number;\n  content: string;\n}\n\n/**\n * ResearchReportEntry - Displays a prominent entry point for accessing research reports\n *\n * Design principles:\n * - Visually distinct from regular messages\n * - Clear visual hierarchy with document icon\n * - Animated feedback for interaction\n * - Consistent styling with overall UI\n */\nexport const ResearchReportEntry: React.FC<ResearchReportEntryProps> = ({\n  title,\n  timestamp,\n  content,\n}) => {\n  const { setActivePanelContent } = useSession();\n\n  const handleOpenReport = () => {\n    setActivePanelContent({\n      type: 'research_report',\n      source: content,\n      title: title || 'Research Report',\n      timestamp,\n    });\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ y: -2, boxShadow: '0 4px 12px rgba(0,0,0,0.05)' }}\n      whileTap={{ scale: 0.98 }}\n      onClick={handleOpenReport}\n      className=\"p-4 bg-white dark:bg-gray-800 rounded-xl border border-accent-100/40 dark:border-accent-700/20 cursor-pointer group\"\n    >\n      <div className=\"flex items-center\">\n        <div className=\"w-10 h-10 rounded-xl bg-accent-50 dark:bg-accent-900/20 flex items-center justify-center mr-3 border border-accent-100/40 dark:border-accent-800/30 text-accent-500 dark:text-accent-400\">\n          <FiBookOpen size={20} />\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-1 flex items-center\">\n            <span className=\"truncate\">{title}</span>\n          </div>\n\n          <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n            <FiClock className=\"mr-1.5\" size={12} />\n            <span className=\"mr-2\">{formatTimestamp(timestamp)}</span>\n            <span className=\"px-1.5 py-0.5 bg-accent-50/70 dark:bg-accent-900/20 text-accent-600 dark:text-accent-400 rounded-full border border-accent-100/30 dark:border-accent-800/20\">\n              Research Report\n            </span>\n          </div>\n        </div>\n\n        <motion.div\n          className=\"ml-2 w-8 h-8 rounded-full flex items-center justify-center bg-gray-50 dark:bg-gray-700 text-gray-400 dark:text-gray-500 group-hover:bg-accent-50 dark:group-hover:bg-accent-900/20 group-hover:text-accent-500 dark:group-hover:text-accent-400 transition-all duration-200 border border-gray-100/40 dark:border-gray-700/30\"\n          animate={{ x: [0, 3, 0] }}\n          transition={{\n            duration: 1.5,\n            repeat: Infinity,\n            repeatType: 'loop',\n            ease: 'easeInOut',\n            repeatDelay: 2,\n          }}\n        >\n          <FiFileText size={16} />\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport WelcomePage from './WelcomePage';\nimport { useSession } from '@/common/hooks/useSession';\n\n/**\n * HomePage Component - Handles the welcome page and query parameter processing\n */\nconst HomePage: React.FC = () => {\n  const { activeSessionId, sendMessage, createSession } = useSession();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Process query parameters if any (for direct query submissions)\n  useEffect(() => {\n    const processQueryParam = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const query = searchParams.get('q');\n\n      // If there's a query parameter but no active session, create one and send the query\n      if (query && !activeSessionId) {\n        try {\n          const sessionId = await createSession();\n\n          // Navigate to the session without the query parameter\n          navigate(`/${sessionId}`);\n\n          // Send the query after a short delay to ensure session is ready\n          setTimeout(() => {\n            sendMessage(query);\n          }, 500);\n        } catch (error) {\n          console.error('Failed to process query:', error);\n        }\n      }\n    };\n\n    processQueryParam();\n  }, [location, activeSessionId, createSession, navigate, sendMessage]);\n\n  return <WelcomePage />;\n};\n\nexport default HomePage;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport { FiArrowRight, FiArrowUpRight } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\n\nconst WelcomePage: React.FC = () => {\n  const navigate = useNavigate();\n  const { createSession, sendMessage, sessions } = useSession();\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDirectChatLoading, setIsDirectChatLoading] = useState(false);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    // Focus the input field when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  // Handle text input and auto-resize\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.target;\n    setQuery(target.value);\n\n    // Reset height to recalculate proper scrollHeight\n    target.style.height = 'auto';\n    // Set to scrollHeight but max 200px\n    target.style.height = `${Math.min(target.scrollHeight, 150)}px`;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!query.trim() || isLoading) return;\n\n    setIsLoading(true);\n\n    try {\n      // Create a new session\n      const sessionId = await createNewSession();\n      navigate(`/${sessionId}`);\n\n      // Store the query for later use but navigate without query parameter\n      const userQuery = query;\n\n      // Navigate to the session route without query parameters\n      navigate(`/${sessionId}`);\n\n      // After navigation, the SessionRouter component will handle setting the active session\n      // We can send the message after a short delay to ensure the session is properly initialized\n      setTimeout(() => {\n        sendMessage(userQuery).catch((error) => {\n          console.error('Failed to send initial message:', error);\n        });\n      }, 500);\n    } catch (error) {\n      console.error('Failed to create session:', error);\n      setIsLoading(false);\n    }\n  };\n\n  // Function to handle direct chat without entering a query\n  const handleDirectChat = async () => {\n    if (isDirectChatLoading) return;\n\n    setIsDirectChatLoading(true);\n\n    try {\n      // Check if there are existing sessions\n      if (sessions && sessions.length > 0) {\n        // Find the latest session and navigate\n        const latestSession = sessions[0]; // Assuming sessions are sorted by time in descending order\n        navigate(`/${latestSession.id}`);\n      } else {\n        // If no existing sessions, create a new session\n        const sessionId = await createSession();\n        navigate(`/${sessionId}`);\n      }\n    } catch (error) {\n      console.error('Failed to navigate to chat:', error);\n    } finally {\n      setIsDirectChatLoading(false);\n    }\n  };\n\n  const createNewSession = async () => {\n    const sessionId = await createSession();\n    return sessionId;\n  };\n\n  // Handle key press events\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    // Ctrl+Enter to submit\n    if (e.key === 'Enter' && e.ctrlKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  const examplePrompts = [\n    'Search for the latest GUI Agent papers',\n    'Find information about UI TARS',\n    'Tell me the top 5 most popular projects on ProductHunt today',\n    'Please book me the earliest flight from Hangzhou to Shenzhen on 10.1',\n  ];\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      {/* Subtle background gradient */}\n      <div className=\"fixed inset-0 bg-gradient-to-b from-transparent to-gray-100/50 dark:to-gray-800/50 pointer-events-none\"></div>\n\n      {/* Header with logo */}\n      <header className=\"relative z-10 pt-8 px-8\">\n        <div className=\"max-w-7xl mx-auto flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <motion.img\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/psvhouloj/agent-tars/icon.png\"\n              className=\"w-12 h-12 rounded-xl flex items-center justify-center mx-auto text-white dark:text-gray-900 cursor-pointer mr-3\"\n              alt=\"Agent TARS\"\n            />\n            <span className=\"text-xl font-display font-bold text-gray-900 dark:text-gray-100\">\n              Agent TARS\n            </span>\n          </div>\n        </div>\n      </header>\n\n      {/* Main content */}\n      <main className=\"flex-1 relative z-10 flex flex-col items-center justify-center px-4 py-12\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center mb-12\"\n        >\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-display font-bold bg-gradient-to-r from-gray-900 via-gray-800 to-gray-700 dark:from-gray-100 dark:via-gray-200 dark:to-gray-300 text-transparent bg-clip-text mb-4\">\n            An multimodal AI agent\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\n            Offering seamless integration with a wide range of real-world tools.\n          </p>\n        </motion.div>\n\n        {/* Search form - Enlarged and modified for textarea */}\n        <motion.div\n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"w-full max-w-3xl mx-auto mb-8\"\n        >\n          <form onSubmit={handleSubmit} className=\"relative\">\n            <div className=\"relative overflow-hidden rounded-2xl transition-all duration-300 group\">\n              {/* Animated gradient border */}\n              <div className=\"absolute inset-0 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-400 animate-border-flow opacity-70 group-hover:opacity-100 transition-opacity\"></div>\n\n              {/* Textarea field - Replaced input with textarea */}\n              <div className=\"relative m-[2px] rounded-[calc(1rem-2px)] bg-white dark:bg-gray-800 p-2\">\n                <textarea\n                  ref={inputRef}\n                  value={query}\n                  onChange={handleInput}\n                  onKeyDown={handleKeyDown}\n                  placeholder=\"Ask Agent TARS anything...\"\n                  className=\"w-full px-6 py-4 text-lg bg-transparent outline-none text-gray-800 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 resize-none min-h-[100px]\"\n                  disabled={isLoading || isDirectChatLoading}\n                  rows={3}\n                />\n\n                {/* Submit button */}\n\n                <div className=\"absolute right-4 bottom-4 flex items-center\">\n                  <motion.button\n                    whileTap={{ scale: 0.95 }}\n                    type=\"submit\"\n                    disabled={!query.trim() || isLoading || isDirectChatLoading}\n                    className={`p-4 rounded-xl transition-all duration-200 ${\n                      !query.trim() || isLoading || isDirectChatLoading\n                        ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed'\n                        : 'bg-gradient-to-r from-indigo-500 to-purple-600 text-white shadow-md'\n                    }`}\n                  >\n                    {isLoading ? (\n                      <motion.div\n                        animate={{ rotate: 360 }}\n                        transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n                      >\n                        <svg\n                          className=\"w-6 h-6\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                          />\n                        </svg>\n                      </motion.div>\n                    ) : (\n                      <FiArrowRight size={22} />\n                    )}\n                  </motion.button>\n                </div>\n              </div>\n            </div>\n\n            {/* Direct chat button */}\n            <motion.div\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: 0.4 }}\n              className=\"flex justify-end mt-3 mr-1\"\n            >\n              <motion.button\n                whileHover={{ scale: 1.01 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={handleDirectChat}\n                disabled={isLoading || isDirectChatLoading}\n                className={`flex items-center gap-1.5 py-1.5 px-2 text-sm text-gray-500 dark:text-gray-400 relative group transition-colors duration-300 ${\n                  isLoading || isDirectChatLoading\n                    ? 'opacity-60 cursor-not-allowed'\n                    : 'cursor-pointer group-hover:text-gray-900 dark:group-hover:text-gray-100'\n                }`}\n                type=\"button\"\n              >\n                <span className=\"group-hover:text-gray-900 dark:group-hover:text-gray-100 transition-colors duration-300\">\n                  Go to task history\n                </span>\n                {isDirectChatLoading ? (\n                  <motion.div\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n                    className=\"w-4 h-4\"\n                  >\n                    <svg\n                      className=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n                  </motion.div>\n                ) : (\n                  <FiArrowUpRight\n                    className=\"text-gray-500 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-gray-100 transition-colors duration-300\"\n                    size={14}\n                  />\n                )}\n                <span className=\"absolute bottom-0 left-0 w-0 h-[1px] bg-gray-500 dark:bg-gray-400 group-hover:w-full group-hover:bg-gray-900 dark:group-hover:bg-gray-100 transition-all duration-300\"></span>\n              </motion.button>\n            </motion.div>\n\n            {/* Example prompts - Simplified */}\n            <div className=\"mt-6 flex flex-wrap justify-center gap-2\">\n              {examplePrompts.map((prompt, index) => (\n                <motion.button\n                  key={index}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3, delay: 0.4 + index * 0.1 }}\n                  type=\"button\"\n                  onClick={() => {\n                    setQuery(prompt);\n                    if (inputRef.current) {\n                      // Set height after updating with example prompt\n                      setTimeout(() => {\n                        if (inputRef.current) {\n                          inputRef.current.style.height = 'auto';\n                          inputRef.current.style.height = `${Math.min(inputRef.current.scrollHeight, 150)}px`;\n                        }\n                      }, 0);\n                    }\n                  }}\n                  className=\"text-sm px-4 py-2 rounded-full bg-white dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30 hover:bg-gray-50 dark:hover:bg-gray-700/50 text-gray-600 dark:text-gray-300 transition-colors\"\n                >\n                  {prompt}\n                </motion.button>\n              ))}\n            </div>\n          </form>\n        </motion.div>\n\n        {/* Minimal footer note */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5, delay: 0.7 }}\n          className=\"mt-12 text-center\"\n        >\n          <div className=\"inline-flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400\">\n            <span>Powered by UI-TARS Vision-Language Model</span>\n          </div>\n        </motion.div>\n      </main>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useCallback, useEffect } from 'react';\nimport { ShareButton } from '@/standalone/share';\nimport { motion } from 'framer-motion';\nimport { FiMoon, FiSun } from 'react-icons/fi';\nimport { GoSidebarCollapse, GoSidebarExpand } from 'react-icons/go';\nimport { useLayout } from '@/common/hooks/useLayout';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\n\nimport './Navbar.css';\n\nexport const Navbar: React.FC = () => {\n  const { isSidebarCollapsed, toggleSidebar } = useLayout();\n  const { activeSessionId, isProcessing, modelInfo } = useSession();\n  const isReplayMode = useReplayMode();\n  const [isDarkMode, setIsDarkMode] = React.useState(true); // Default to true, will update on mount\n\n  // Initialize theme based on localStorage or document class\n  useEffect(() => {\n    // Get saved preference from localStorage\n    const savedTheme = localStorage.getItem('agent-tars-theme');\n\n    // Determine initial theme state (preference or document class)\n    const initialIsDark =\n      savedTheme === 'light'\n        ? false\n        : savedTheme === 'dark'\n          ? true\n          : document.documentElement.classList.contains('dark');\n\n    // Update state with initial value\n    setIsDarkMode(initialIsDark);\n\n    // Ensure the document class matches the state\n    document.documentElement.classList.toggle('dark', initialIsDark);\n  }, []);\n\n  // Toggle dark mode\n  const toggleDarkMode = useCallback(() => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    document.documentElement.classList.toggle('dark', newMode);\n\n    // Save preference to localStorage\n    localStorage.setItem('agent-tars-theme', newMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  return (\n    <div className=\"h-12 backdrop-blur-sm flex items-center px-3\">\n      {/* Left section with macOS-style traffic lights */}\n      <div className=\"flex items-center\">\n        {/* macOS-style traffic lights */}\n        <div className=\"flex space-x-1.5 mr-3\">\n          <div className=\"traffic-light traffic-light-red\" />\n          <div className=\"traffic-light traffic-light-yellow\" />\n          <div className=\"traffic-light traffic-light-green\" />\n        </div>\n      </div>\n\n      {/* Sidebar toggle button - positioned at the right edge aligned with Chat area */}\n      {!isReplayMode && (\n        <div className=\"ml-0\">\n          <motion.button\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={toggleSidebar}\n            className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 p-1.5 hover:bg-gray-100/40 dark:hover:bg-gray-800/40 rounded-full transition-colors\"\n            title={isSidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n          >\n            {isSidebarCollapsed ? <GoSidebarCollapse size={20} /> : <GoSidebarExpand size={20} />}\n          </motion.button>\n        </div>\n      )}\n\n      {/* Center section - Model info */}\n      <div className=\"flex-1 flex items-center justify-center\">\n        {modelInfo.model && (\n          <div className=\"flex items-center gap-3\">\n            {/* Main model bubble */}\n            <div className=\"px-2 py-1 rounded-full bg-white dark:bg-gray-800 text-xs text-gray-700 dark:text-gray-300 flex items-center\">\n              <div className=\"w-3 h-3 rounded-full bg-purple-400 dark:bg-purple-500 mr-2 flex-shrink-0\"></div>\n              <span className=\"font-mono\">{modelInfo.model}</span>\n            </div>\n\n            {/* Provider bubble - connected to main bubble */}\n            {modelInfo.provider && (\n              <div className=\"px-2 py-1 -ml-1 rounded-full bg-white dark:bg-gray-800 text-xs font-[500]\">\n                <span className=\"provider-gradient-text\">{modelInfo.provider}</span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Right section - with share button and dark mode toggle */}\n      <div className=\"flex items-center space-x-2\">\n        {activeSessionId && !isProcessing && !isReplayMode && <ShareButton variant=\"navbar\" />}\n\n        {/* Dark mode toggle */}\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={toggleDarkMode}\n          className=\"w-8 h-8 rounded-full flex items-center justify-center text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-100/40 dark:hover:bg-gray-800/40 transition-colors\"\n          title={isDarkMode ? 'Light Mode' : 'Dark Mode'}\n        >\n          {isDarkMode ? <FiSun size={16} /> : <FiMoon size={16} />}\n        </motion.button>\n      </div>\n    </div>\n  );\n};\n","export { Navbar } from './Navbar';\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiPlay, FiPause, FiSkipForward, FiX, FiClock, FiRefreshCw } from 'react-icons/fi';\nimport { useReplay } from '@/common/hooks/useReplay';\n\n/**\n * ReplayControls - Provides playback controls for the replay functionality\n *\n * Design principles:\n * - Monochromatic black/gray design that matches the UI\n * - Minimalist controls with subtle hover states\n * - No box shadows or excessive decorations\n */\nexport const ReplayControls: React.FC = () => {\n  const {\n    replayState,\n    startReplay,\n    pauseReplay,\n    jumpToResult,\n    exitReplay,\n    setPlaybackSpeed,\n    cancelAutoPlay,\n    resetReplay,\n  } = useReplay();\n\n  const { isPaused, playbackSpeed, autoPlayCountdown, currentEventIndex, events } = replayState;\n\n  // 确定按钮状态 - 添加倒计时判断\n  const isCountingDown = autoPlayCountdown !== null;\n  const showPlayButton = isPaused || isCountingDown;\n\n  // 检查回放是否已完成（当前事件索引已到达最后）\n  const isReplayCompleted =\n    events.length > 0 && currentEventIndex === events.length - 1 && isPaused;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 10 }}\n      transition={{ duration: 0.3 }}\n      className=\"flex items-center justify-between gap-2 px-4 py-3 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\"\n    >\n      {/* Exit button - moved to left side */}\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={exitReplay}\n        className=\"p-1.5 rounded-full text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 transition-colors\"\n        title=\"Exit replay\"\n      >\n        <FiX size={16} />\n      </motion.button>\n\n      {/* Center playback controls */}\n      <div className=\"flex items-center gap-3\">\n        {/* Play/Pause button - now larger and more prominent */}\n        {isReplayCompleted ? (\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => resetReplay()}\n            className=\"w-10 h-10 flex items-center justify-center rounded-full bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800\"\n            title=\"Replay from beginning\"\n          >\n            <FiRefreshCw size={18} />\n          </motion.button>\n        ) : (\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => {\n              if (isCountingDown) {\n                // 如果在倒计时，取消倒计时并开始播放\n                cancelAutoPlay();\n                startReplay();\n              } else if (isPaused) {\n                startReplay();\n              } else {\n                pauseReplay();\n              }\n            }}\n            className=\"w-10 h-10 flex items-center justify-center rounded-full bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800\"\n          >\n            {showPlayButton ? <FiPlay size={18} /> : <FiPause size={18} />}\n          </motion.button>\n        )}\n\n        {/* Skip to end button */}\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={() => {\n            // 如果在倒计时，先取消倒计时\n            if (isCountingDown) {\n              cancelAutoPlay();\n            }\n            jumpToResult();\n          }}\n          className=\"flex items-center justify-center w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600\"\n          title=\"Skip to end\"\n        >\n          <FiSkipForward size={16} />\n        </motion.button>\n      </div>\n\n      {/* Playback speed controls */}\n      <div className=\"flex items-center gap-1\">\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 mr-1\">\n          <FiClock size={12} className=\"inline mr-1\" />\n          Speed\n        </span>\n        {[1, 2, 3].map((speed) => (\n          <motion.button\n            key={speed}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setPlaybackSpeed(speed)}\n            className={`w-6 h-6 flex items-center justify-center rounded-full text-xs font-medium ${\n              playbackSpeed === speed\n                ? 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 border border-gray-300/50 dark:border-gray-600/30'\n                : 'text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50'\n            }`}\n          >\n            {speed}x\n          </motion.button>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMessageSquare, FiTool, FiImage, FiCpu, FiBookOpen } from 'react-icons/fi';\nimport { AgentEventStream } from '@/common/types';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { useReplay } from '@/common/hooks/useReplay';\n\n/**\n * TimelineSlider - Interactive timeline for replay navigation\n *\n * Enhanced with:\n * - Monochromatic design matching the app's black/gray aesthetic\n * - Subtle markers with minimal visual noise\n * - No box shadows or gradients\n */\nexport const TimelineSlider: React.FC = () => {\n  const { replayState, jumpToPosition, getCurrentPosition, getCurrentEvent } = useReplay();\n\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoverPosition, setHoverPosition] = useState<number | null>(null);\n  const [hoverEvent, setHoverEvent] = useState<Event | null>(null);\n\n  const { events } = replayState;\n  const currentPosition = getCurrentPosition();\n  const currentEvent = getCurrentEvent();\n\n  // Handle mouse down on slider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    setIsDragging(true);\n    updatePositionFromMouse(e);\n  };\n\n  // Handle mouse move for dragging and hover feedback\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    // Update hover position and event\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    setHoverPosition(position);\n\n    // Find event closest to hover position\n    if (events.length > 0) {\n      const index = Math.floor(position * events.length);\n      const boundedIndex = Math.max(0, Math.min(index, events.length - 1));\n      setHoverEvent(events[boundedIndex]);\n    }\n\n    // Update position if dragging\n    if (isDragging) {\n      updatePositionFromMouse(e);\n    }\n  };\n\n  // Handle mouse up to end dragging\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Calculate position from mouse event\n  const updatePositionFromMouse = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    jumpToPosition(position);\n  };\n\n  // Handle mouse leave\n  const handleMouseLeave = () => {\n    setHoverPosition(null);\n    setHoverEvent(null);\n    setIsDragging(false);\n  };\n\n  // Add global mouse up handler when dragging\n  useEffect(() => {\n    if (isDragging) {\n      const handleGlobalMouseUp = () => setIsDragging(false);\n      window.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => window.removeEventListener('mouseup', handleGlobalMouseUp);\n    }\n  }, [isDragging]);\n\n  // Get color for event marker\n  const getEventColor = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'bg-gray-400 dark:bg-gray-500';\n      case 'assistant_message':\n        return 'bg-gray-600 dark:bg-gray-400';\n      case 'tool_call':\n      case 'tool_result':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'environment_input':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'plan_update':\n      case 'plan_finish':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'final_answer':\n        return 'bg-gray-700 dark:bg-gray-300';\n      default:\n        return 'bg-gray-400 dark:bg-gray-500';\n    }\n  };\n\n  // Get icon for event type (for tooltip)\n  const getEventIcon = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'assistant_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'tool_call':\n      case 'tool_result':\n        return <FiTool size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'environment_input':\n        return <FiImage size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'plan_update':\n      case 'plan_finish':\n        return <FiCpu size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'final_answer':\n        return <FiBookOpen size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      default:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n    }\n  };\n\n  // Get event description for hover tooltip\n  const getEventDescription = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'User Message';\n      case 'assistant_message':\n        return 'Assistant Response';\n      case 'tool_call':\n        return `Tool Call: ${event.name || ''}`;\n      case 'tool_result':\n        return `Tool Result: ${event.name || ''}`;\n      case 'environment_input':\n        return 'Browser Screenshot';\n      case 'plan_update':\n        return 'Plan Update';\n      case 'plan_finish':\n        return 'Plan Completed';\n      case 'final_answer':\n        return 'Research Report';\n      default:\n        return event.type;\n    }\n  };\n\n  // Get event content preview for the tooltip\n  const getEventContentPreview = (event: AgentEventStream.Event) => {\n    if (event.type === 'user_message' || event.type === 'assistant_message') {\n      const content =\n        typeof event.content === 'string'\n          ? event.content\n          : Array.isArray(event.content) &&\n              event.content.length > 0 &&\n              event.content[0].type === 'text'\n            ? event.content[0].text\n            : '';\n\n      return content.length > 50 ? content.substring(0, 47) + '...' : content;\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"relative px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\">\n      {/* Current time display */}\n      {currentEvent && (\n        <div className=\"absolute left-3 top-0 text-xs text-gray-500 dark:text-gray-400 py-1\">\n          {formatTimestamp(currentEvent.timestamp)}\n        </div>\n      )}\n\n      {/* Timeline slider with modern media player styling */}\n      <div\n        ref={sliderRef}\n        className=\"relative h-6 mt-4 cursor-pointer\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseLeave}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* Track background - simplified and more minimal */}\n        <div className=\"absolute inset-0 top-1/2 -translate-y-1/2 h-1.5 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n          {/* No texture dots, keeping it minimal */}\n        </div>\n\n        {/* Progress fill */}\n        <div\n          className=\"absolute top-1/2 -translate-y-1/2 left-0 h-1.5 bg-gray-800 dark:bg-gray-300 rounded-full\"\n          style={{ width: `${currentPosition}%` }}\n        />\n\n        {/* Event markers - more subtle, minimal style */}\n        {events.map((event, index) => {\n          const position = (index / (events.length - 1)) * 100;\n\n          return (\n            <motion.div\n              key={`${event.id}-${index}`}\n              className={`absolute top-1/2 -translate-y-1/2 w-1.5 h-3 ${getEventColor(event)} rounded-sm`}\n              style={{ left: `${position}%`, marginLeft: '-1px' }}\n              initial={{ opacity: 0.6, height: 3 }}\n              animate={{\n                opacity: 0.8,\n                height: currentEvent?.id === event.id ? 5 : 3,\n              }}\n              whileHover={{ opacity: 1, height: 5 }}\n              transition={{ duration: 0.2 }}\n            />\n          );\n        })}\n\n        {/* Playhead - larger and more prominent but without shadow */}\n        <motion.div\n          className=\"absolute top-[5px] -translate-y-1/2 w-4 h-4 rounded-full bg-white dark:bg-gray-200 border-2 border-gray-800 dark:border-gray-600 z-30\"\n          style={{ left: `calc(${currentPosition}% - 8px)` }}\n          animate={{\n            scale: isDragging ? 1.2 : 1,\n          }}\n          transition={{ duration: 0.2 }}\n        />\n\n        {/* Hover position indicator */}\n        {hoverPosition !== null && !isDragging && (\n          <motion.div\n            className=\"absolute top-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400/40 dark:bg-gray-500/40 rounded-full z-10\"\n            style={{ left: `${hoverPosition * 100}%` }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </div>\n\n      {/* Improved hover tooltip - monochromatic style */}\n      {hoverEvent && hoverPosition !== null && (\n        <motion.div\n          className=\"absolute bottom-full mb-2 p-2 bg-gray-100 dark:bg-gray-800 rounded-lg border border-gray-200/50 dark:border-gray-700/30 text-xs max-w-xs z-50\"\n          style={{\n            left: `${hoverPosition * 100}%`,\n            transform: 'translateX(-50%)',\n          }}\n          initial={{ opacity: 0, y: 5, scale: 0.95 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 flex-shrink-0\">{getEventIcon(hoverEvent)}</div>\n            <div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">\n                {getEventDescription(hoverEvent)}\n              </div>\n\n              {getEventContentPreview(hoverEvent) && (\n                <div className=\"mt-1 text-gray-600 dark:text-gray-400 italic line-clamp-2 text-[10px]\">\n                  \"{getEventContentPreview(hoverEvent)}\"\n                </div>\n              )}\n\n              <div className=\"mt-1 text-[10px] text-gray-500 dark:text-gray-400\">\n                {formatTimestamp(hoverEvent.timestamp)}\n              </div>\n            </div>\n          </div>\n\n          {/* Tooltip arrow */}\n          <div className=\"absolute left-1/2 bottom-0 w-2 h-2 bg-gray-100 dark:bg-gray-800 border-r border-b border-gray-200/50 dark:border-gray-700/30 transform rotate-45 translate-y-1 -translate-x-1\"></div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiShare2 } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { ShareModal } from './ShareModal';\n\ninterface ShareButtonProps {\n  variant?: 'default' | 'navbar';\n}\n\n/**\n * 分享按钮组件 - 显示在聊天面板底部或导航栏\n *\n * 设计原则:\n * - 简洁的单色图标，与整体黑白灰风格保持一致\n * - 圆形按钮设计，保持优雅的视觉效果\n * - 精细的悬停和点击动画，提升交互体验\n * - 支持不同的展示变体以适应不同位置\n */\nexport const ShareButton: React.FC<ShareButtonProps> = ({ variant = 'default' }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { activeSessionId } = useSession();\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  if (!activeSessionId) {\n    return null;\n  }\n\n  // Navbar variant has different styling\n  if (variant === 'navbar') {\n    return (\n      <>\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleOpenModal}\n          className=\"p-2 text-gray-600 hover:text-gray-700 dark:text-gray-500 dark:hover:text-gray-200 hover:bg-gray-100/40 dark:hover:bg-gray-700/40 rounded-full transition-all duration-200\"\n          title=\"Share this conversation\"\n        >\n          <FiShare2 size={16} />\n        </motion.button>\n\n        <ShareModal isOpen={isModalOpen} onClose={handleCloseModal} sessionId={activeSessionId} />\n      </>\n    );\n  }\n\n  // Default variant (original styling)\n  return (\n    <>\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleOpenModal}\n        className=\"flex items-center gap-1.5 px-3 py-1.5 rounded-3xl text-xs text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/30 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700/70 transition-all duration-200\"\n        title=\"Share this conversation\"\n      >\n        <FiShare2 className=\"text-gray-500 dark:text-gray-400\" size={14} />\n        <span>Share</span>\n      </motion.button>\n\n      <ShareModal isOpen={isModalOpen} onClose={handleCloseModal} sessionId={activeSessionId} />\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiX, FiShare2, FiLink, FiDownload, FiCheck, FiLoader } from 'react-icons/fi';\nimport { shareService, ShareConfig, ShareResult } from './shareService';\nimport { Dialog } from '@headlessui/react';\n\ninterface ShareModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  sessionId: string;\n}\n\n/**\n * 分享模态框组件\n *\n * 设计原则:\n * - 简洁优雅的黑白灰风格，符合整体设计语言\n * - 大圆角和精细边框，呈现精致的视觉效果\n * - 动态过渡和微妙动画，提升用户体验\n * - 清晰的状态反馈，包括加载、成功和错误状态\n */\nexport const ShareModal: React.FC<ShareModalProps> = ({ isOpen, onClose, sessionId }) => {\n  const [shareConfig, setShareConfig] = useState<ShareConfig | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shareResult, setShareResult] = useState<ShareResult | null>(null);\n  const [copied, setCopied] = useState(false);\n\n  // 获取分享配置\n  useEffect(() => {\n    if (isOpen) {\n      const fetchConfig = async () => {\n        try {\n          const config = await shareService.getShareConfig();\n          setShareConfig(config);\n        } catch (error) {\n          console.error('Failed to get share config:', error);\n          // 设置默认配置\n          setShareConfig({ hasShareProvider: false, shareProvider: null });\n        }\n      };\n\n      fetchConfig();\n    }\n  }, [isOpen]);\n\n  // 当模态框关闭时重置状态，允许重新分享\n  useEffect(() => {\n    if (!isOpen) {\n      setShareResult(null);\n    }\n  }, [isOpen]);\n\n  // 处理上传分享\n  const handleUpload = async () => {\n    if (!sessionId || !shareConfig) return;\n\n    setIsLoading(true);\n    setShareResult(null);\n\n    try {\n      const result = await shareService.shareSession(sessionId, true);\n      setShareResult(result);\n    } catch (error) {\n      console.error('Failed to share session:', error);\n      setShareResult({\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 处理下载分享\n  const handleDownload = async () => {\n    if (!sessionId) return;\n\n    setIsLoading(true);\n    setShareResult(null);\n\n    try {\n      const result = await shareService.shareSession(sessionId, false);\n      setShareResult(result);\n\n      if (result.success && result.html) {\n        shareService.downloadShareHtml(result.html, sessionId);\n      }\n    } catch (error) {\n      console.error('Failed to download share HTML:', error);\n      setShareResult({\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 复制分享链接\n  const handleCopyLink = () => {\n    if (shareResult?.url) {\n      navigator.clipboard.writeText(shareResult.url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n      {/* 背景遮罩层 */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-40 backdrop-blur-md\" aria-hidden=\"true\" />\n\n      {/* 模态框内容容器 */}\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md p-6 bg-white dark:bg-gray-800 rounded-3xl border border-[#E5E6EC] dark:border-gray-700/30 shadow-lg\">\n          {/* 标题和关闭按钮 */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <Dialog.Title className=\"text-xl font-medium text-gray-800 dark:text-gray-200 flex items-center\">\n              <FiShare2 className=\"mr-3 text-gray-500 dark:text-gray-400\" />\n              Share Conversation\n            </Dialog.Title>\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={onClose}\n              className=\"p-2 rounded-full text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700/50 transition-colors\"\n            >\n              <FiX size={20} />\n            </motion.button>\n          </div>\n\n          {/* 正在加载配置 */}\n          {!shareConfig && (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center space-x-2 text-gray-500 dark:text-gray-400\">\n                <motion.div\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n                >\n                  <FiLoader size={20} />\n                </motion.div>\n                <span>Loading share options...</span>\n              </div>\n            </div>\n          )}\n\n          {/* 分享选项 */}\n          {shareConfig && !isLoading && !shareResult && (\n            <div className=\"space-y-6\">\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                Choose how you want to share this conversation:\n              </p>\n\n              <div className=\"space-y-4\">\n                {/* 上传选项 - 仅当配置了分享提供者时显示 */}\n                {shareConfig.hasShareProvider && (\n                  <motion.button\n                    whileHover={{ y: -2 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={handleUpload}\n                    className=\"w-full flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 hover:border-gray-300 dark:hover:border-gray-600/70 transition-all duration-200\"\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-700 dark:text-gray-300 mr-3\">\n                        <FiLink size={20} />\n                      </div>\n                      <div className=\"text-left\">\n                        <h4 className=\"font-medium text-gray-800 dark:text-gray-200\">\n                          Get shareable link\n                        </h4>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          Upload and get a link to share\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                      <FiShare2 size={16} className=\"text-gray-500 dark:text-gray-400\" />\n                    </div>\n                  </motion.button>\n                )}\n\n                {/* 下载选项 - 始终显示 */}\n                <motion.button\n                  whileHover={{ y: -2 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={handleDownload}\n                  className=\"w-full flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 hover:border-gray-300 dark:hover:border-gray-600/70 transition-all duration-200\"\n                >\n                  <div className=\"flex items-center\">\n                    <div className=\"w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-700 dark:text-gray-300 mr-3\">\n                      <FiDownload size={20} />\n                    </div>\n                    <div className=\"text-left\">\n                      <h4 className=\"font-medium text-gray-800 dark:text-gray-200\">\n                        Download HTML\n                      </h4>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Save the conversation as HTML file\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                    <FiDownload size={16} className=\"text-gray-500 dark:text-gray-400\" />\n                  </div>\n                </motion.button>\n              </div>\n\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n                Sharing includes all messages and tool results in this conversation.\n              </p>\n            </div>\n          )}\n\n          {/* 加载状态 */}\n          {isLoading && (\n            <div className=\"flex flex-col items-center justify-center py-10\">\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 2, repeat: Infinity, ease: 'linear' }}\n                className=\"w-12 h-12 rounded-full border-2 border-gray-200 dark:border-gray-700 border-t-gray-600 dark:border-t-gray-300 mb-4\"\n              />\n              <p className=\"text-gray-700 dark:text-gray-300 text-center\">\n                Preparing your conversation for sharing...\n              </p>\n            </div>\n          )}\n\n          {/* 分享结果 - 成功 */}\n          {shareResult && shareResult.success && shareResult.url && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-50/50 dark:bg-green-900/20 rounded-xl p-4 border border-green-100/60 dark:border-green-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 dark:bg-green-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiCheck className=\"text-green-600 dark:text-green-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">\n                    Share link created!\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Your conversation is now available at the link below.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 bg-gray-50 dark:bg-gray-700/60 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 pr-1.5\">\n                <input\n                  type=\"text\"\n                  value={shareResult.url}\n                  readOnly\n                  className=\"flex-grow pl-4 py-3 bg-transparent text-gray-800 dark:text-gray-200 text-sm focus:outline-none\"\n                />\n                <button\n                  onClick={handleCopyLink}\n                  className=\"flex-shrink-0 px-3 py-1.5 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg text-xs font-medium text-gray-700 dark:text-gray-300 transition-colors\"\n                >\n                  {copied ? (\n                    <span className=\"flex items-center\">\n                      <FiCheck className=\"mr-1\" size={12} />\n                      Copied!\n                    </span>\n                  ) : (\n                    'Copy Link'\n                  )}\n                </button>\n              </div>\n\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n                This link will be accessible to anyone who has it.\n              </p>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n\n          {/* 分享结果 - 下载HTML成功 */}\n          {shareResult && shareResult.success && shareResult.html && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-50/50 dark:bg-green-900/20 rounded-xl p-4 border border-green-100/60 dark:border-green-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-green-100 dark:bg-green-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiCheck className=\"text-green-600 dark:text-green-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">\n                    HTML file downloaded!\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    The HTML file contains all messages and tool results from this conversation.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n\n          {/* 分享结果 - 错误 */}\n          {shareResult && !shareResult.success && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-red-50/50 dark:bg-red-900/20 rounded-xl p-4 border border-red-100/60 dark:border-red-800/30 flex items-start\">\n                <div className=\"w-8 h-8 rounded-full bg-red-100 dark:bg-red-800/40 flex items-center justify-center flex-shrink-0 mr-3\">\n                  <FiX className=\"text-red-600 dark:text-red-400\" size={16} />\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800 dark:text-gray-200\">Failed to share</p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    {shareResult.error ||\n                      'An error occurred while trying to share the conversation.'}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-xl text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Close\n                </motion.button>\n              </div>\n            </div>\n          )}\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n","export { ShareButton } from './ShareButton';\nexport { ShareModal } from './ShareModal';\n","import { API_BASE_URL, API_ENDPOINTS } from '@/common/constants';\n\n/**\n * 分享配置接口\n */\nexport interface ShareConfig {\n  hasShareProvider: boolean;\n  shareProvider: string | null;\n}\n\n/**\n * 分享结果接口\n */\nexport interface ShareResult {\n  success: boolean;\n  url?: string;\n  html?: string;\n  sessionId?: string;\n  error?: string;\n}\n\n/**\n * 分享服务类 - 处理分享相关功能\n */\nclass ShareService {\n  private shareConfig: ShareConfig | null = null;\n\n  /**\n   * 获取分享配置\n   */\n  async getShareConfig(): Promise<ShareConfig> {\n    if (this.shareConfig) {\n      return this.shareConfig;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.SHARE_CONFIG}`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get share config: ${response.statusText}`);\n      }\n\n      this.shareConfig = await response.json();\n      return this.shareConfig as ShareConfig;\n    } catch (error) {\n      console.error('Failed to get share config:', error);\n      // 默认配置\n      return { hasShareProvider: false, shareProvider: null };\n    }\n  }\n\n  /**\n   * 分享会话\n   * @param sessionId 会话ID\n   * @param upload 是否上传到分享提供者（如果存在）\n   */\n  async shareSession(sessionId: string, upload = false): Promise<ShareResult> {\n    try {\n      const response = await fetch(`${API_BASE_URL}${API_ENDPOINTS.SESSIONS_SHARE}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ sessionId, upload }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Failed to share session: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Failed to share session:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  }\n\n  /**\n   * 下载 HTML 分享文件\n   * @param html HTML 内容\n   * @param sessionId 会话ID\n   */\n  downloadShareHtml(html: string, sessionId: string): void {\n    const blob = new Blob([html], { type: 'text/html' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `agent-tars-${sessionId}-${Date.now()}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n}\n\nexport const shareService = new ShareService();\n","import React, { useState, useMemo, useCallback, useRef } from 'react';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useNavigate } from 'react-router-dom';\nimport { FiRefreshCw, FiWifiOff, FiChevronUp, FiChevronDown, FiSearch } from 'react-icons/fi';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport SessionItem from './SessionItem';\nimport { ConfirmDialog } from '@/sdk/dialog';\nimport { SessionSearch } from './SessionSearch';\n\ninterface ChatSessionProps {\n  isCollapsed: boolean;\n}\n\n/**\n * ChatSession Component - Collapsible sidebar for session management\n */\nexport const ChatSession: React.FC<ChatSessionProps> = ({ isCollapsed }) => {\n  const {\n    sessions,\n    activeSessionId,\n    setActiveSession,\n    updateSessionMetadata,\n    deleteSession,\n    loadSessions,\n    connectionStatus,\n    checkServerStatus,\n  } = useSession();\n\n  const navigate = useNavigate();\n\n  const [editingSessionId, setEditingSessionId] = useState<string | null>(null);\n  const [editedName, setEditedName] = useState('');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [loadingSessionId, setLoadingSessionId] = useState<string | null>(null);\n  const [collapsedSections, setCollapsedSections] = useState<Record<string, boolean>>({});\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [sessionToDelete, setSessionToDelete] = useState<string | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n\n  // 每个组显示的会话数量\n  const [visibleSessionsCount, setVisibleSessionsCount] = useState<Record<string, number>>({\n    today: 10,\n    yesterday: 10,\n    thisWeek: 10,\n    earlier: 10,\n    searchResults: 10,\n  });\n\n  // 使用useRef减少过多的状态更新\n  const refreshingRef = useRef(false);\n  const sessionActionInProgressRef = useRef<string | null>(null);\n\n  // 处理搜索\n  const handleSearch = useCallback((query: string) => {\n    setSearchQuery(query);\n    setIsSearchMode(!!query);\n\n    // 搜索时重置可见数量，确保搜索结果得到合理展示\n    if (query) {\n      setVisibleSessionsCount((prev) => ({\n        ...prev,\n        searchResults: 10,\n      }));\n    }\n  }, []);\n\n  // 切换折叠状态\n  const toggleSectionCollapse = useCallback((sectionKey: string) => {\n    setCollapsedSections((prev) => ({\n      ...prev,\n      [sectionKey]: !prev[sectionKey],\n    }));\n  }, []);\n\n  // 加载更多会话\n  const loadMoreSessions = useCallback((groupKey: string) => {\n    setVisibleSessionsCount((prev) => ({\n      ...prev,\n      [groupKey]: prev[groupKey] + 10,\n    }));\n  }, []);\n\n  // 筛选后的会话\n  const filteredSessions = useMemo(() => {\n    if (!searchQuery) return sessions;\n\n    return sessions.filter(\n      (session) =>\n        session.name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        session.tags?.some((tag) => tag.toLowerCase().includes(searchQuery.toLowerCase())),\n    );\n  }, [sessions, searchQuery]);\n\n  // 优化分组计算，减少不必要的重计算\n  const groupedSessions = useMemo(() => {\n    // 如果在搜索模式下，使用单独的搜索结果组\n    if (isSearchMode) {\n      return [\n        {\n          label: `Search Results`,\n          sessions: filteredSessions,\n          key: 'searchResults',\n        },\n      ];\n    }\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n\n    // 初始化组\n    const groups: Array<{ label: string; sessions: Array<any>; key: string }> = [\n      { label: 'Today', sessions: [], key: 'today' },\n      { label: 'Yesterday', sessions: [], key: 'yesterday' },\n      { label: 'This Week', sessions: [], key: 'thisWeek' },\n      { label: 'Earlier', sessions: [], key: 'earlier' },\n    ];\n\n    // 使用循环一次性完成分类，避免多次迭代\n    sessions.forEach((session) => {\n      const sessionDate = new Date(session.updatedAt || session.createdAt);\n\n      if (sessionDate >= today) {\n        groups[0].sessions.push(session);\n      } else if (sessionDate >= yesterday) {\n        groups[1].sessions.push(session);\n      } else if (sessionDate >= lastWeek) {\n        groups[2].sessions.push(session);\n      } else {\n        groups[3].sessions.push(session);\n      }\n    });\n\n    // 优化：预先过滤空组，避免渲染循环中的条件检查\n    return groups.filter((group) => group.sessions.length > 0);\n  }, [sessions, isSearchMode, filteredSessions]);\n\n  // 优化的 session 点击处理函数\n  const handleSessionClick = useCallback(\n    (sessionId: string) => {\n      if (\n        sessionActionInProgressRef.current === sessionId ||\n        !connectionStatus.connected ||\n        loadingSessionId\n      ) {\n        return;\n      }\n\n      // 使用防抖避免快速点击\n      sessionActionInProgressRef.current = sessionId;\n      setLoadingSessionId(sessionId);\n\n      // 使用 requestAnimationFrame 推迟导航操作到下一帧，减少布局抖动\n      requestAnimationFrame(() => {\n        navigate(`/${sessionId}`);\n\n        // 给状态变更一些时间来完成\n        setTimeout(() => {\n          setLoadingSessionId(null);\n          sessionActionInProgressRef.current = null;\n        }, 100);\n      });\n    },\n    [connectionStatus.connected, loadingSessionId, navigate],\n  );\n\n  // 优化的刷新会话函数\n  const refreshSessions = useCallback(async () => {\n    if (refreshingRef.current) return;\n\n    refreshingRef.current = true;\n    setIsRefreshing(true);\n\n    try {\n      // 使用 Promise.all 优化并行请求\n      const [isConnected] = await Promise.all([checkServerStatus()]);\n\n      if (isConnected) {\n        await loadSessions();\n      }\n    } catch (error) {\n      console.error('Failed to refresh sessions:', error);\n    } finally {\n      setIsRefreshing(false);\n      refreshingRef.current = false;\n    }\n  }, [checkServerStatus, loadSessions]);\n\n  // 优化的事件处理函数\n  const handleEditSession = useCallback((sessionId: string, currentName?: string) => {\n    setEditingSessionId(sessionId);\n    setEditedName(currentName || '');\n  }, []);\n\n  const handleSaveEdit = useCallback(\n    async (sessionId: string) => {\n      try {\n        await updateSessionMetadata({ sessionId, updates: { name: editedName } });\n        setEditingSessionId(null);\n      } catch (error) {\n        console.error('Failed to update session name:', error);\n      }\n    },\n    [updateSessionMetadata, editedName],\n  );\n\n  const handleDeleteSession = useCallback(async (sessionId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    setSessionToDelete(sessionId);\n    setDeleteConfirmOpen(true);\n  }, []);\n\n  const confirmDeleteSession = useCallback(async () => {\n    if (!sessionToDelete) return;\n\n    try {\n      // 在删除之前找到下一个可用的会话\n      if (sessionToDelete === activeSessionId && sessions.length > 1) {\n        // 找到不是要删除的会话的最近会话\n        const nextSession = sessions.find((s) => s.id !== sessionToDelete);\n        if (nextSession) {\n          // 先导航到新会话\n          navigate(`/${nextSession.id}`);\n\n          // 给导航一点时间完成\n          await new Promise((resolve) => setTimeout(resolve, 50));\n        }\n      }\n\n      // 然后删除会话\n      await deleteSession(sessionToDelete);\n    } catch (error) {\n      console.error('Failed to delete session:', error);\n    } finally {\n      setDeleteConfirmOpen(false);\n      setSessionToDelete(null);\n    }\n  }, [deleteSession, sessionToDelete, sessions, activeSessionId, navigate]);\n\n  // 如果折叠，返回最小侧边栏\n  if (isCollapsed) {\n    return (\n      <div className=\"flex flex-col h-full bg-transparent w-0 border-r border-gray-100/40 dark:border-gray-700/20\" />\n    );\n  }\n\n  return (\n    <div className=\"w-64 bg-white dark:bg-gray-800/95 rounded-xl flex flex-col h-full backdrop-blur-sm mr-3\">\n      {/* Header */}\n      <div className=\"p-4 flex items-center justify-between border-b border-gray-100/40 dark:border-gray-700/20\">\n        <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Recent Tasks</div>\n        <div className=\"flex items-center gap-2\">\n          {/* 连接状态指示器 */}\n          <div\n            className={`h-2 w-2 rounded-full ${\n              connectionStatus.connected\n                ? 'bg-green-500 animate-pulse'\n                : connectionStatus.reconnecting\n                  ? 'bg-yellow-500 animate-ping'\n                  : 'bg-gray-400'\n            }`}\n            title={\n              connectionStatus.connected\n                ? 'Connected to server'\n                : connectionStatus.reconnecting\n                  ? 'Reconnecting...'\n                  : 'Disconnected from server'\n            }\n          />\n\n          <motion.button\n            whileHover={{ rotate: 180 }}\n            transition={{ duration: 0.3 }}\n            onClick={refreshSessions}\n            disabled={isRefreshing || !connectionStatus.connected}\n            className={`text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 p-1 rounded-full hover:bg-gray-100/40 dark:hover:bg-gray-800/40 text-xs transition-all ${\n              !connectionStatus.connected && 'opacity-50 cursor-not-allowed'\n            }`}\n            title={connectionStatus.connected ? 'Refresh tasks' : 'Server disconnected'}\n          >\n            <FiRefreshCw className={isRefreshing ? 'animate-spin' : ''} size={12} />\n          </motion.button>\n        </div>\n      </div>\n\n      {/* 搜索框 */}\n      <SessionSearch onSearch={handleSearch} />\n\n      {/* 离线模式提示 */}\n      {!connectionStatus.connected && sessions.length > 0 && (\n        <div className=\"px-3 py-2\">\n          <div className=\"p-3 rounded-xl bg-red-50/30 dark:bg-red-900/15 text-gray-700 dark:text-gray-300 text-sm border border-red-200/50 dark:border-red-800/30 shadow-sm\">\n            <div className=\"flex items-center\">\n              <FiWifiOff className=\"mr-2 flex-shrink-0 text-red-500 dark:text-red-400\" />\n              <div className=\"font-medium text-red-700 dark:text-red-400\">Offline Mode</div>\n            </div>\n            <p className=\"mt-1 text-xs\">\n              You can view tasks but can't create new ones until reconnected.\n            </p>\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => checkServerStatus()}\n              className=\"w-full mt-2 py-1.5 px-3 bg-red-100/70 dark:bg-red-800/30 hover:bg-red-200/70 dark:hover:bg-red-700/40 rounded-xl text-xs font-medium transition-colors flex items-center justify-center border border-red-200/30 dark:border-red-700/30 text-red-700 dark:text-red-300\"\n            >\n              <FiRefreshCw\n                className={`mr-1.5 ${connectionStatus.reconnecting ? 'animate-spin' : ''}`}\n                size={12}\n              />\n              {connectionStatus.reconnecting ? 'Reconnecting...' : 'Reconnect to Server'}\n            </motion.button>\n          </div>\n        </div>\n      )}\n\n      {/* 空搜索结果提示 */}\n      {isSearchMode && filteredSessions.length === 0 && (\n        <div className=\"p-6 text-center\">\n          <div className=\"flex justify-center mb-3 text-gray-400 dark:text-gray-500\">\n            <FiSearch size={24} />\n          </div>\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-300\">No tasks found</h3>\n          <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n            Try a different search term or clear the search\n          </p>\n        </div>\n      )}\n\n      {/* 会话列表 - 优化渲染 */}\n      <div className=\"flex-1 overflow-y-auto sidebar-scrollbar p-3\">\n        <AnimatePresence>\n          {groupedSessions.map((group) => (\n            <div key={group.key} className=\"mb-4\">\n              {/* 组标题和切换按钮 */}\n              <motion.button\n                onClick={() => toggleSectionCollapse(group.key)}\n                className=\"w-full flex items-center justify-between px-1 py-2 text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider hover:text-gray-700 dark:hover:text-gray-300\"\n                whileHover={{ x: 2 }}\n              >\n                <span>\n                  {group.label} ({group.sessions.length})\n                </span>\n                <motion.div\n                  animate={{ rotate: collapsedSections[group.key] ? 0 : 180 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <FiChevronUp size={14} />\n                </motion.div>\n              </motion.button>\n\n              {/* 该组中的会话 - 避免不必要的渲染 */}\n              <AnimatePresence>\n                {!collapsedSections[group.key] && (\n                  <motion.div\n                    initial={{ height: 0, opacity: 0 }}\n                    animate={{ height: 'auto', opacity: 1 }}\n                    exit={{ height: 0, opacity: 0 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"overflow-hidden\"\n                  >\n                    <div className=\"space-y-1\">\n                      {group.sessions\n                        .slice(0, visibleSessionsCount[group.key] || 10)\n                        .map((session) => (\n                          <SessionItem\n                            key={session.id}\n                            session={session}\n                            isActive={activeSessionId === session.id}\n                            isLoading={loadingSessionId === session.id}\n                            isConnected={connectionStatus.connected}\n                            searchQuery={isSearchMode ? searchQuery : ''}\n                            onSessionClick={handleSessionClick}\n                            onEditSession={handleEditSession}\n                            onDeleteSession={handleDeleteSession}\n                            onSaveEdit={handleSaveEdit}\n                            editingSessionId={editingSessionId}\n                            editedName={editedName}\n                            setEditedName={setEditedName}\n                          />\n                        ))}\n                    </div>\n\n                    {/* 如果有更多会话未显示，显示\"加载更多\"按钮 */}\n                    {group.sessions.length > visibleSessionsCount[group.key] && (\n                      <motion.button\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        onClick={() => loadMoreSessions(group.key)}\n                        className=\"w-full mt-2 py-2 text-xs text-accent-600 dark:text-accent-400 hover:bg-gray-100/50 dark:hover:bg-gray-800/50 rounded-lg flex items-center justify-center\"\n                      >\n                        <FiChevronDown className=\"mr-1\" size={14} />\n                        Load More ({group.sessions.length - visibleSessionsCount[group.key]}{' '}\n                        remaining)\n                      </motion.button>\n                    )}\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          ))}\n        </AnimatePresence>\n      </div>\n\n      {/* 确认对话框 */}\n      <ConfirmDialog\n        isOpen={deleteConfirmOpen}\n        onClose={() => setDeleteConfirmOpen(false)}\n        onConfirm={confirmDeleteSession}\n        title=\"Delete Task\"\n        message=\"Are you sure you want to delete this task? This action cannot be undone.\"\n        confirmText=\"Delete\"\n        cancelText=\"Cancel\"\n        type=\"danger\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface HighlightTextProps {\n  text: string;\n  highlight: string;\n  className?: string;\n}\n\nexport const HighlightText: React.FC<HighlightTextProps> = ({ text, highlight, className }) => {\n  if (!highlight.trim()) {\n    return <span className={className}>{text}</span>;\n  }\n\n  const escapedHighlight = highlight.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  const regex = new RegExp(`(${escapedHighlight})`, 'gi');\n  const parts = text.split(regex);\n\n  return (\n    <span className={className}>\n      {parts.map((part, i) =>\n        regex.test(part) ? (\n          <span\n            key={i}\n            className=\"bg-accent-100 dark:bg-accent-900/40 text-accent-800 dark:text-accent-300 px-0.5 rounded\"\n          >\n            {part}\n          </span>\n        ) : (\n          <span key={i}>{part}</span>\n        ),\n      )}\n    </span>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMessageSquare, FiEdit2, FiTrash2, FiTag, FiClock, FiLoader } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { SessionMetadata } from '@/common/types';\nimport classNames from 'classnames';\nimport { HighlightText } from './HighlightText';\n\ninterface SessionItemProps {\n  session: SessionMetadata;\n  isActive: boolean;\n  isLoading: boolean;\n  isConnected: boolean;\n  searchQuery?: string;\n  onSessionClick: (sessionId: string) => void;\n  onEditSession: (sessionId: string, currentName?: string) => void;\n  onDeleteSession: (sessionId: string, e: React.MouseEvent) => void;\n  onSaveEdit: (sessionId: string) => void;\n  editingSessionId: string | null;\n  editedName: string;\n  setEditedName: (name: string) => void;\n}\n\nconst SessionItem: React.FC<SessionItemProps> = React.memo(\n  ({\n    session,\n    isActive,\n    isLoading,\n    isConnected,\n    searchQuery = '',\n    onSessionClick,\n    onEditSession,\n    onDeleteSession,\n    onSaveEdit,\n    editingSessionId,\n    editedName,\n    setEditedName,\n  }) => {\n    const handleClick = useCallback(() => {\n      onSessionClick(session.id);\n    }, [onSessionClick, session.id]);\n\n    const handleEdit = useCallback(\n      (e: React.MouseEvent) => {\n        e.stopPropagation();\n        onEditSession(session.id, session.name);\n      },\n      [onEditSession, session.id, session.name],\n    );\n\n    const handleDelete = useCallback(\n      (e: React.MouseEvent) => {\n        e.stopPropagation();\n        onDeleteSession(session.id, e);\n      },\n      [onDeleteSession, session.id],\n    );\n\n    const handleSaveEdit = useCallback(() => {\n      onSaveEdit(session.id);\n    }, [onSaveEdit, session.id]);\n\n    const handleKeyDown = useCallback(\n      (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') onSaveEdit(session.id);\n        if (e.key === 'Escape') onEditSession('', '');\n      },\n      [onSaveEdit, onEditSession, session.id],\n    );\n\n    const handleNameChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEditedName(e.target.value);\n      },\n      [setEditedName],\n    );\n\n    const isEditing = editingSessionId === session.id;\n\n    return (\n      <motion.div\n        key={session.id}\n        className=\"relative group\"\n        initial={{ opacity: 0, x: -10 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        {isEditing ? (\n          <div className=\"flex items-center p-2 glass-effect rounded-xl\">\n            <input\n              type=\"text\"\n              value={editedName}\n              onChange={handleNameChange}\n              className=\"flex-1 px-2 py-1 text-sm bg-white/90 dark:bg-gray-700/90 border border-gray-200/50 dark:border-gray-600/30 rounded-lg focus:outline-none focus:ring-1 focus:ring-accent-500 dark:focus:ring-accent-400 w-[100px]\"\n              autoFocus\n              onKeyDown={handleKeyDown}\n            />\n            <button\n              onClick={handleSaveEdit}\n              className=\"ml-2 px-2 py-1 text-accent-600 dark:text-accent-400 bg-accent-50/70 dark:bg-accent-900/20 hover:bg-accent-100 dark:hover:bg-accent-800/30 rounded-lg text-xs transition-colors border border-accent-100/40 dark:border-accent-700/20\"\n            >\n              Save\n            </button>\n          </div>\n        ) : (\n          <motion.button\n            whileTap={{ scale: 0.98 }}\n            onClick={handleClick}\n            disabled={!isConnected || isLoading}\n            className={classNames(\n              'text-left text-sm flex items-center p-2 w-full rounded-xl border',\n              {\n                'bg-[#F5F5F5] dark:bg-gray-800/80 border-gray-100/60 dark:border-gray-700/30 text-gray-900 dark:text-gray-100':\n                  isActive,\n                'hover:bg-white/60 dark:hover:bg-gray-800/60 border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/20 backdrop-blur-sm':\n                  !isActive,\n                'opacity-60 cursor-not-allowed hover:bg-transparent dark:hover:bg-transparent hover:border-transparent dark:hover:border-transparent':\n                  !isConnected || (isLoading && session.id !== isLoading),\n              },\n            )}\n          >\n            <div\n              className={`mr-3 h-9 w-9 flex-shrink-0 rounded-xl flex items-center justify-center ${\n                isActive\n                  ? 'bg-accent-50 dark:bg-gray-700/60 text-accent-500 dark:text-accent-400 border border-accent-100/30 dark:border-gray-600/30'\n                  : 'bg-gray-50/70 text-gray-500 dark:bg-gray-800/50 dark:text-gray-400 border border-gray-100/40 dark:border-gray-700/30'\n              }`}\n            >\n              {isLoading === session.id ? (\n                <FiLoader className=\"animate-spin\" size={16} />\n              ) : (\n                <FiMessageSquare size={16} />\n              )}\n            </div>\n\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"font-medium truncate\">\n                <HighlightText text={session.name || 'Untitled Task'} highlight={searchQuery} />\n              </div>\n              <div className=\"text-xs flex items-center mt-0.5 text-gray-500 dark:text-gray-400\">\n                <FiClock className=\"mr-1\" size={10} />\n                {formatTimestamp(session.updatedAt || session.createdAt)}\n              </div>\n            </div>\n\n            <div className=\"hidden group-hover:flex absolute right-2 gap-1\">\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                onClick={handleEdit}\n                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1 rounded-full hover:bg-gray-100/50 dark:hover:bg-gray-700/50 transition-all border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30 bg-white/80 dark:bg-gray-800/80\"\n                title=\"Edit task name\"\n              >\n                <FiEdit2 size={12} />\n              </motion.button>\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                onClick={handleDelete}\n                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1 rounded-full hover:bg-gray-100/50 dark:hover:bg-gray-700/50 transition-all border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30 bg-white/80 dark:bg-gray-800/80\"\n                title=\"Delete task\"\n              >\n                <FiTrash2 size={12} />\n              </motion.button>\n            </div>\n          </motion.button>\n        )}\n\n        {session.tags && session.tags.length > 0 && (\n          <div className=\"flex flex-wrap gap-1 px-4 my-1 pb-2\">\n            {session.tags.map((tag, idx) => (\n              <motion.div\n                key={idx}\n                whileHover={{ y: -2 }}\n                className=\"flex items-center bg-gray-50/60 dark:bg-gray-800/50 text-gray-600 dark:text-gray-300 rounded-full px-2 py-0.5 text-[10px] border border-gray-100/40 dark:border-gray-700/30\"\n              >\n                <FiTag size={8} className=\"mr-1\" />\n                <HighlightText text={tag} highlight={searchQuery} />\n              </motion.div>\n            ))}\n          </div>\n        )}\n      </motion.div>\n    );\n  },\n);\n\nSessionItem.displayName = 'SessionItem';\n\nexport default SessionItem;\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { FiSearch, FiX } from 'react-icons/fi';\nimport { motion } from 'framer-motion';\n\ninterface SessionSearchProps {\n  onSearch: (query: string) => void;\n}\n\nexport const SessionSearch: React.FC<SessionSearchProps> = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Handle search input change\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newQuery = e.target.value;\n      setQuery(newQuery);\n      onSearch(newQuery);\n    },\n    [onSearch],\n  );\n\n  // Clear search query\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onSearch('');\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [onSearch]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Cmd+F or Ctrl+F to focus search\n      if ((e.metaKey || e.ctrlKey) && e.key === 'f' && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n        inputRef.current?.focus();\n      }\n\n      // Escape to clear and blur search when focused\n      if (e.key === 'Escape' && document.activeElement === inputRef.current) {\n        clearSearch();\n        inputRef.current?.blur();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [clearSearch]);\n\n  return (\n    <div className=\"px-3 py-2 border-b border-gray-100/40 dark:border-gray-700/20\">\n      <motion.div\n        initial={{ opacity: 0.9, y: -5 }}\n        animate={{ opacity: 1, y: 0 }}\n        className={`flex items-center px-3 py-1.5 bg-white/80 dark:bg-gray-800/80 rounded-xl border ${\n          isFocused\n            ? 'border-accent-300/50 dark:border-accent-500/30 shadow-sm ring-2 ring-accent-100/20 dark:ring-accent-800/10'\n            : 'border-gray-300/70 dark:border-gray-600/50'\n        }`}\n      >\n        <FiSearch\n          className={`mr-2 ${\n            isFocused ? 'text-accent-500 dark:text-accent-400' : 'text-gray-400 dark:text-gray-500'\n          }`}\n          size={14}\n        />\n        <input\n          ref={inputRef}\n          value={query}\n          onChange={handleChange}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          placeholder=\"Search tasks...\"\n          className=\"bg-transparent text-sm w-full outline-none text-gray-700 dark:text-gray-300 placeholder:text-gray-400 dark:placeholder:text-gray-500\"\n          aria-label=\"Search tasks\"\n        />\n        {query && (\n          <motion.button\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            onClick={clearSearch}\n            className=\"p-1 rounded-full hover:bg-gray-100/80 dark:hover:bg-gray-700/80 text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300\"\n            title=\"Clear search\"\n          >\n            <FiX size={14} />\n          </motion.button>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolBar } from './ToolBar';\nimport { ChatSession } from './ChatSession';\nimport { useLayout } from '@/common/hooks/useLayout';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\n\n/**\n * SidebarContainer - Container component that orchestrates the sidebar layout\n *\n * Design principles:\n * - Manages the layout of ToolBar and ChatSession components\n * - Handles conditional rendering based on replay mode\n * - Maintains proper spacing and alignment between components\n * - Provides a clean interface for the main layout\n */\nexport const SidebarContainer: React.FC = () => {\n  const { isSidebarCollapsed } = useLayout();\n  const isReplayMode = useReplayMode();\n\n  // In replay mode, only show the ToolBar\n  if (isReplayMode) {\n    return (\n      <div className=\"flex h-full pb-2 lg:pb-3\">\n        <ToolBar />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-full pb-2 lg:pb-3\">\n      <ToolBar />\n      <ChatSession isCollapsed={isSidebarCollapsed} />\n    </div>\n  );\n};\n\nexport default SidebarContainer;\n","import React, { useCallback } from 'react';\nimport { motion } from 'framer-motion';\n\nimport { FiPlus, FiHome } from 'react-icons/fi';\nimport { useNavigate } from 'react-router-dom';\nimport { useSession } from '@/common/hooks/useSession';\nimport { useReplayMode } from '@/common/hooks/useReplayMode';\n\n/**\n * ToolBar Component - Vertical toolbar inspired by modern IDE designs\n *\n * Design principles:\n * - Minimalist vertical bar with icon-only actions\n * - Consistent visual language with subtle animations\n * - Quick access to essential functionality\n * - Always visible regardless of sidebar collapse state\n */\nexport const ToolBar: React.FC = () => {\n  const navigate = useNavigate();\n  const isReplayMode = useReplayMode();\n  const { createSession, connectionStatus } = useSession();\n\n  // Create new session\n  const handleNewSession = useCallback(async () => {\n    try {\n      const sessionId = await createSession();\n      navigate(`/${sessionId}`);\n    } catch (error) {\n      console.error('Failed to create new session:', error);\n    }\n  }, [createSession, navigate]);\n\n  // Navigate to home\n  const handleNavigateHome = useCallback(() => {\n    navigate('/');\n  }, [navigate]);\n\n  return (\n    <div className=\"w-14 h-full flex flex-col backdrop-blur-sm\">\n      {/* Tool buttons */}\n      <div className=\"flex-1 flex flex-col items-center gap-4\">\n        {/* New session button */}\n        {!isReplayMode && (\n          <motion.button\n            whileHover={{\n              scale: 1.08,\n            }}\n            whileTap={{ scale: 0.97 }}\n            transition={{ type: 'spring', stiffness: 400, damping: 17 }}\n            onClick={handleNewSession}\n            disabled={!connectionStatus.connected}\n            className={`w-8 h-8 rounded-lg flex items-center justify-center ${\n              connectionStatus.connected\n                ? 'bg-white dark:bg-gray-800 text-black dark:text-white hover:shadow-md'\n                : 'bg-gray-400 text-white cursor-not-allowed opacity-60'\n            }`}\n            title={connectionStatus.connected ? 'New Task' : 'Server disconnected'}\n          >\n            <FiPlus size={16} />\n          </motion.button>\n        )}\n\n        {/* Home button */}\n        {!isReplayMode && (\n          <motion.button\n            whileHover={{\n              scale: 1.08,\n            }}\n            whileTap={{ scale: 0.97 }}\n            transition={{ type: 'spring', stiffness: 400, damping: 17 }}\n            onClick={handleNavigateHome}\n            className=\"w-8 h-8 rounded-lg flex items-center justify-center bg-white dark:bg-gray-800 text-black dark:text-white hover:shadow-md\"\n            title=\"Home\"\n          >\n            <FiHome size={16} />\n          </motion.button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import SidebarContainer from './SidebarContainer';\n\nexport { SidebarContainer as Sidebar };\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  FiArrowLeft, \n  FiCpu, \n  FiCheckCircle, \n  FiClock, \n  FiTarget\n} from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { usePlan } from '@/common/hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n *\n * Features:\n * - Shows current plan status and steps\n * - Supports navigation through plan keyframes via progress bar\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex,\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center max-w-md p-8\"\n        >\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/50 dark:border-gray-700/30 shadow-sm\">\n            <FiTarget className=\"text-gray-400 dark:text-gray-500\" size={32} />\n          </div>\n          <h3 className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\">\n            No Plan Available\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            The agent hasn't created a plan for this task yet, or the task was simple enough to not\n            require planning.\n          </p>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"h-full flex flex-col bg-gradient-to-b from-gray-50/90 via-gray-50/60 to-gray-100/40 dark:from-gray-900/60 dark:via-gray-900/40 dark:to-gray-900/20 backdrop-blur-sm\"\n      >\n        {/* Header with back button */}\n        <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100/60 dark:border-gray-800/50 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md\">\n          <div className=\"flex items-center\">\n            <motion.button\n              whileHover={{ scale: 1.05, x: -2 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onBack}\n              className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50 transition-all duration-200\"\n              title=\"Back to workspace\"\n            >\n              <FiArrowLeft size={18} />\n            </motion.button>\n\n            <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden shadow-sm\">\n              <div className={`absolute inset-0 ${\n                displayedPlan.isComplete \n                  ? 'bg-gradient-to-br from-green-400/20 to-green-500/10 dark:from-green-600/30 dark:to-green-500/20'\n                  : 'bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20'\n              }`}></div>\n              <div className=\"relative z-10\">\n                {displayedPlan.isComplete ? (\n                  <FiCheckCircle className=\"text-green-500 dark:text-green-400\" size={20} />\n                ) : (\n                  <FiCpu className=\"text-accent-500 dark:text-accent-400\" size={20} />\n                )}\n              </div>\n            </div>\n\n            <div>\n              <h2 className=\"font-medium text-gray-800 dark:text-gray-100 text-lg leading-tight\">\n                Task Plan\n              </h2>\n              <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400\">\n                {displayedPlan.isComplete ? (\n                  <span className=\"flex items-center\">\n                    <FiCheckCircle className=\"mr-1 text-green-500 dark:text-green-400\" size={12} />\n                    Completed\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <FiClock className=\"mr-1 text-accent-500 dark:text-accent-400 animate-pulse\" size={12} />\n                    In progress\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Plan content */}\n        <div className=\"flex-1 overflow-auto\">\n          <PlanViewerRenderer\n            plan={{\n              ...displayedPlan,\n              keyframes: currentPlan.keyframes,\n              currentKeyframeIndex,\n            }}\n            onKeyframeChange={handleKeyframeChange}\n          />\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '@/common/hooks/useSession';\nimport { usePlan } from '@/common/hooks/usePlan';\nimport {\n  FiLayout,\n  FiCpu,\n  FiZap,\n  FiArrowRight,\n  FiLayers,\n  FiActivity,\n  FiFileText,\n} from 'react-icons/fi';\nimport './Workspace.css';\n\n/**\n * WorkspaceContent Component - Enhanced workspace with beautiful empty state\n *\n * Design principles:\n * - Focus on plan display for Pro users\n * - Beautiful empty state when no content is available\n * - Clean visual hierarchy and elegant animations\n */\nexport const WorkspaceContent: React.FC = () => {\n  const { activeSessionId, setActivePanelContent } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n\n  // Animation variants\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6, ease: [0.19, 1, 0.22, 1] },\n    },\n  };\n\n  // Plan view button for Pro users\n  const renderPlanButton = () => {\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.div variants={itemVariants} className=\"mb-6\">\n        <motion.div\n          whileHover={{\n            y: -4,\n            boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02)',\n          }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() =>\n            setActivePanelContent({\n              type: 'plan',\n              source: null,\n              title: 'Task Plan',\n              timestamp: Date.now(),\n            })\n          }\n          className=\"bg-white dark:bg-gray-800/90 rounded-2xl border border-[#E5E6EC]/70 dark:border-gray-700/40 overflow-hidden cursor-pointer transition-all duration-300 shadow-sm hover:shadow-md\"\n        >\n          <div className=\"p-5\">\n            <div className=\"flex items-start\">\n              <div\n                className={`w-14 h-14 rounded-2xl flex items-center justify-center mr-4 flex-shrink-0 ${\n                  isComplete\n                    ? 'bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 text-green-600 dark:text-green-400 border border-green-100/80 dark:border-green-800/40'\n                    : 'bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30'\n                }`}\n              >\n                {isComplete ? (\n                  <FiCpu size={24} />\n                ) : (\n                  <motion.div\n                    animate={{ scale: [1, 1.08, 1] }}\n                    transition={{ duration: 2.5, repeat: Infinity, ease: 'easeInOut' }}\n                  >\n                    <FiCpu size={24} />\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between\">\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg mb-1 truncate pr-2\">\n                    Task Plan\n                  </h4>\n                  <div className=\"flex items-center text-xs\">\n                    <span\n                      className={`w-2 h-2 rounded-full mr-1.5 ${\n                        isComplete\n                          ? 'bg-green-500 dark:bg-green-400'\n                          : 'bg-accent-500 dark:bg-accent-400'\n                      }`}\n                    />\n                    <span className=\"text-gray-500 dark:text-gray-400\">\n                      {isComplete ? 'Completed' : 'In progress'}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  {isComplete\n                    ? 'All planned steps have been completed successfully.'\n                    : 'The agent is executing a plan to accomplish your task.'}\n                </div>\n\n                {/* Progress bar */}\n                <div className=\"mt-1 mb-2\">\n                  <div className=\"flex justify-between items-center mb-1.5 text-xs\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Progress</span>\n                    <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                      {completedSteps}/{totalSteps}\n                    </span>\n                  </div>\n                  <div className=\"h-2 bg-gray-100 dark:bg-gray-700/70 rounded-full overflow-hidden\">\n                    <div\n                      className={`h-full ${\n                        isComplete\n                          ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                          : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n                      }`}\n                      style={{ width: `${totalSteps ? (completedSteps / totalSteps) * 100 : 0}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-b from-gray-50/70 to-gray-50 dark:from-gray-800/50 dark:to-gray-800/80 px-5 py-3 border-t border-[#E5E6EC]/50 dark:border-gray-700/30 flex justify-between items-center\">\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              View plan details\n            </div>\n            <div className=\"flex items-center text-sm\">\n              <FiArrowRight className=\"text-accent-500 dark:text-accent-400\" size={16} />\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  };\n\n  // Enhanced empty state when no session\n  if (!activeSessionId) {\n    return (\n      <motion.div\n        variants={containerVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        className=\"flex items-center justify-center h-full text-center py-12\"\n      >\n        <div className=\"max-w-md mx-auto px-6\">\n          <motion.div variants={itemVariants} className=\"relative mx-auto mb-8\">\n            {/* Gradient background glow effect */}\n            <div className=\"absolute inset-0 w-24 h-24 mx-auto rounded-full bg-gradient-to-br from-gray-200/50 to-gray-100/30 dark:from-gray-700/30 dark:to-gray-800/20 blur-xl\"></div>\n\n            {/* Main icon */}\n            <div className=\"relative w-24 h-24 mx-auto rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n              <FiLayout size={40} className=\"text-gray-500 dark:text-gray-400\" />\n            </div>\n          </motion.div>\n\n          <motion.h3\n            variants={itemVariants}\n            className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n\n          <motion.p\n            variants={itemVariants}\n            className=\"text-gray-600 dark:text-gray-400 leading-relaxed\"\n          >\n            Create or select a session to start working. Tool results and detailed information will\n            be displayed here automatically.\n          </motion.p>\n        </div>\n      </motion.div>\n    );\n  }\n\n  // Enhanced empty state when session exists but no content\n  const hasContent = currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header with refined styling */}\n      <div className=\"flex items-center px-6 py-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-700 dark:to-gray-800 flex items-center justify-center text-gray-600 dark:text-gray-400 border border-gray-200/60 dark:border-gray-700/40 shadow-sm\">\n          <FiLayers size={18} />\n        </div>\n        <div>\n          <h2 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg\">Workspace</h2>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            View tool outputs and plan details\n          </div>\n        </div>\n      </div>\n\n      {/* Content area with elegant empty state */}\n      <div className=\"flex-1 overflow-y-auto p-6\">\n        {hasContent ? (\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"space-y-8\"\n          >\n            {/* Plan view for Pro users */}\n            {renderPlanButton()}\n          </motion.div>\n        ) : (\n          /* Beautiful empty state for active session with no content */\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"flex items-center justify-center h-full text-center\"\n          >\n            <div className=\"max-w-lg mx-auto px-6\">\n              <motion.div variants={itemVariants} className=\"relative mb-10\">\n                {/* Animated background circles */}\n                <motion.div\n                  animate={{\n                    scale: [1, 1.1, 1],\n                    opacity: [0.3, 0.5, 0.3],\n                    rotate: [0, 5, 0, -5, 0],\n                  }}\n                  transition={{ duration: 6, repeat: Infinity, ease: 'easeInOut' }}\n                  className=\"absolute inset-0 w-28 h-28 rounded-full bg-gradient-to-br from-accent-200/30 to-accent-300/20 dark:from-accent-800/20 dark:to-accent-700/10 mx-auto blur-xl\"\n                />\n                <motion.div\n                  animate={{\n                    scale: [1.1, 1, 1.1],\n                    opacity: [0.2, 0.4, 0.2],\n                    rotate: [0, -5, 0, 5, 0],\n                  }}\n                  transition={{ duration: 5, repeat: Infinity, ease: 'easeInOut', delay: 1 }}\n                  className=\"absolute inset-0 w-32 h-32 rounded-full bg-gradient-to-br from-purple-200/20 to-purple-300/10 dark:from-purple-800/10 dark:to-purple-700/5 mx-auto mt-2 ml-2 blur-xl\"\n                />\n\n                {/* Main icon with glowing effect */}\n                <div className=\"relative mx-auto w-28 h-28 rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n                  <motion.div\n                    animate={{\n                      scale: [1, 1.05, 1],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: 'easeInOut' }}\n                  >\n                    <FiActivity size={44} className=\"text-accent-500 dark:text-accent-400\" />\n                  </motion.div>\n\n                  {/* Subtle pulsing ring */}\n                  <motion.div\n                    animate={{\n                      scale: [0.8, 1.2, 0.8],\n                      opacity: [0.3, 0.1, 0.3],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: 'easeInOut' }}\n                    className=\"absolute inset-0 rounded-3xl border-2 border-accent-400/20 dark:border-accent-400/10\"\n                  />\n                </div>\n              </motion.div>\n\n              <motion.h3\n                variants={itemVariants}\n                className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200 bg-gradient-to-r from-gray-800 to-gray-600 dark:from-gray-200 dark:to-gray-300 bg-clip-text text-transparent\"\n              >\n                Ready for Action\n              </motion.h3>\n\n              <motion.p\n                variants={itemVariants}\n                className=\"text-gray-600 dark:text-gray-400 leading-relaxed mb-8 max-w-md mx-auto\"\n              >\n                Your workspace is active. Start a conversation with Agent TARS and watch as tool\n                results, plans, and detailed information appear here in real-time.\n              </motion.p>\n\n              <motion.div\n                variants={containerVariants}\n                className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 max-w-2xl mx-auto\"\n              >\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-blue-50 dark:bg-blue-900/20 flex items-center justify-center mb-3 text-blue-500 dark:text-blue-400 border border-blue-100/80 dark:border-blue-800/30\">\n                    <FiLayout size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Tool Results\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Comprehensive outputs\n                    </div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-green-50 dark:bg-green-900/20 flex items-center justify-center mb-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n                    <FiZap size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Live Updates\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Real-time results\n                    </div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-amber-50 dark:bg-amber-900/20 flex items-center justify-center mb-3 text-amber-500 dark:text-amber-400 border border-amber-100/80 dark:border-amber-800/30\">\n                    <FiFileText size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                      Deliverables\n                    </div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Reports & Code</div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '@/common/hooks/useSession';\nimport { ToolResultRenderer } from './renderers/ToolResultRenderer';\nimport { ResearchReportRenderer } from './renderers/ResearchReportRenderer';\nimport { WorkspaceHeader } from './components/WorkspaceHeader';\nimport { ImageModal } from './components/ImageModal';\nimport { FullscreenModal } from './components/FullscreenModal';\nimport { standardizeContent } from './utils/contentStandardizer';\nimport { StandardPanelContent, ZoomedImageData, FullscreenFileData } from './types/panelContent';\n\n/**\n * WorkspaceDetail Component - Displays details of a single tool result or report\n */\nexport const WorkspaceDetail: React.FC = () => {\n  const { activePanelContent, setActivePanelContent } = useSession();\n  const [zoomedImage, setZoomedImage] = useState<ZoomedImageData | null>(null);\n  const [fullscreenData, setFullscreenData] = useState<FullscreenFileData | null>(null);\n\n  if (!activePanelContent) {\n    return null;\n  }\n\n  // Type assertion with runtime validation\n  const panelContent = activePanelContent as StandardPanelContent;\n\n  // Handle research reports and deliverables\n  if (isResearchReportType(panelContent)) {\n    return (\n      <ResearchReportRenderer\n        content={getReportContent(panelContent)}\n        title={panelContent.title || 'Research Report'}\n        isStreaming={panelContent.isStreaming}\n      />\n    );\n  }\n\n  // Handle tool result content actions\n  const handleContentAction = (action: string, data: unknown) => {\n    switch (action) {\n      case 'zoom':\n        if (isZoomData(data)) {\n          setZoomedImage({ src: data.src, alt: data.alt });\n        }\n        break;\n      case 'fullscreen':\n        if (isFullscreenData(data)) {\n          setFullscreenData(data);\n        }\n        break;\n    }\n  };\n\n  // Handle back navigation\n  const handleBack = () => {\n    setActivePanelContent(null);\n  };\n\n  // Get standardized content\n  const standardizedContent = standardizeContent(panelContent);\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"h-full flex flex-col bg-white dark:bg-gray-900/20\"\n      >\n        {/* Header */}\n        <WorkspaceHeader panelContent={panelContent} onBack={handleBack} />\n\n        {/* Content area */}\n        <div className=\"flex-1 overflow-auto p-4\">\n          <ToolResultRenderer content={standardizedContent} onAction={handleContentAction} />\n        </div>\n      </motion.div>\n\n      {/* Modals */}\n      <ImageModal imageData={zoomedImage} onClose={() => setZoomedImage(null)} />\n\n      <FullscreenModal data={fullscreenData} onClose={() => setFullscreenData(null)} />\n    </>\n  );\n};\n\n// Type guard functions\nfunction isResearchReportType(content: StandardPanelContent): boolean {\n  return (\n    content.type === 'research_report' ||\n    content.type === 'deliverable' ||\n    Boolean(content.toolCallId?.startsWith('final-answer'))\n  );\n}\n\nfunction getReportContent(content: StandardPanelContent): string {\n  if (typeof content.source === 'string') {\n    return content.source;\n  }\n  return JSON.stringify(content.source, null, 2);\n}\n\nfunction isZoomData(data: unknown): data is { src: string; alt?: string } {\n  return data !== null && typeof data === 'object' && 'src' in data && typeof data.src === 'string';\n}\n\nfunction isFullscreenData(data: unknown): data is FullscreenFileData {\n  return (\n    data !== null &&\n    typeof data === 'object' &&\n    'content' in data &&\n    'fileName' in data &&\n    'filePath' in data &&\n    'displayMode' in data &&\n    'isMarkdown' in data &&\n    typeof (data as FullscreenFileData).content === 'string' &&\n    typeof (data as FullscreenFileData).fileName === 'string' &&\n    typeof (data as FullscreenFileData).filePath === 'string'\n  );\n}\n","import React from 'react';\nimport { useSession } from '@/common/hooks/useSession';\nimport { WorkspaceContent } from './WorkspaceContent';\nimport { WorkspaceDetail } from './WorkspaceDetail';\nimport { PlanView } from './PlanView';\nimport { useReplay } from '@/common/hooks/useReplay';\nimport { TimelineSlider } from '@/standalone/replay/TimelineSlider';\nimport { ReplayControls } from '@/standalone/replay/ReplayControls';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport './Workspace.css';\n\n/**\n * WorkspacePanel Component - Container for workspace content\n */\nexport const WorkspacePanel: React.FC = () => {\n  const { activeSessionId, activePanelContent, setActivePanelContent } = useSession();\n  const { replayState } = useReplay();\n\n  // 检查是否在查看计划，同时确保只有在 Pro 模式下才允许查看计划\n  const isViewingPlan = activePanelContent?.type === 'plan';\n  const isReplayActive = replayState.isActive;\n\n  if (!activeSessionId) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center p-8 max-w-md\">\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-sm border border-gray-200/50 dark:border-gray-700/30\"\n          >\n            <svg\n              className=\"w-10 h-10 text-gray-400 dark:text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n          </motion.div>\n          <motion.h3\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n            className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n          <motion.p\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            className=\"text-gray-600 dark:text-gray-400\"\n          >\n            Create or select a session to view detailed information and tool results in this\n            workspace.\n          </motion.p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-gray-50/80 dark:bg-gray-900/30\">\n      {/* Main content area */}\n      <div className=\"flex-1 overflow-hidden\">\n        {isViewingPlan ? (\n          <PlanView onBack={() => setActivePanelContent(null)} />\n        ) : activePanelContent ? (\n          <WorkspaceDetail />\n        ) : (\n          <WorkspaceContent />\n        )}\n      </div>\n\n      {/* Refined replay controls with modern styling */}\n      <AnimatePresence>\n        {isReplayActive && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.4, ease: [0.19, 1, 0.22, 1] }}\n            className=\"p-5 border-t border-gray-100/40 dark:border-gray-700/20 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm\"\n          >\n            {/* Timeline slider */}\n            <TimelineSlider />\n\n            {/* Controls centered below the timeline */}\n            <div className=\"flex justify-center mt-4\">\n              <ReplayControls />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiX } from 'react-icons/fi';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport { MessageContent } from '../renderers/generic/components/MessageContent';\nimport { FullscreenFileData } from '../types/panelContent';\n\ninterface FullscreenModalProps {\n  data: FullscreenFileData | null;\n  onClose: () => void;\n}\n\nexport const FullscreenModal: React.FC<FullscreenModalProps> = ({ data, onClose }) => {\n  if (!data) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 z-[9999] bg-white dark:bg-gray-900\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n          <div className=\"flex items-center\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onClose}\n              className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg\"\n              title=\"Exit fullscreen\"\n            >\n              <FiX size={20} />\n            </motion.button>\n            <div>\n              <h2 className=\"font-medium text-gray-800 dark:text-gray-200\">{data.fileName}</h2>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400\">{data.filePath}</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"max-w-5xl mx-auto prose dark:prose-invert prose-lg overflow-scroll p-12 h-full pb-[100px]\">\n          {data.isMarkdown ? (\n            <MessageContent\n              message={data.content}\n              isMarkdown={true}\n              displayMode={data.displayMode}\n              isShortMessage={false}\n            />\n          ) : (\n            <MarkdownRenderer content={data.content} />\n          )}\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiX } from 'react-icons/fi';\nimport { ZoomedImageData } from '../types/panelContent';\n\ninterface ImageModalProps {\n  imageData: ZoomedImageData | null;\n  onClose: () => void;\n}\n\nexport const ImageModal: React.FC<ImageModalProps> = ({ imageData, onClose }) => {\n  if (!imageData) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 p-4 backdrop-blur-sm\"\n        onClick={onClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n          className=\"relative max-w-[95vw] max-h-[95vh]\"\n        >\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              onClose();\n            }}\n            className=\"absolute -top-2 -right-2 p-2 rounded-full bg-gray-900/90 text-white hover:bg-gray-800 shadow-lg\"\n            aria-label=\"Close\"\n          >\n            <FiX size={24} />\n          </button>\n          <img\n            src={imageData.src}\n            alt={imageData.alt || 'Zoomed image'}\n            className=\"max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl\"\n          />\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiArrowLeft, FiBookOpen } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { useTool } from '@/common/hooks/useTool';\nimport { StandardPanelContent } from '../types/panelContent';\n\ninterface WorkspaceHeaderProps {\n  panelContent: StandardPanelContent;\n  onBack: () => void;\n}\n\nexport const WorkspaceHeader: React.FC<WorkspaceHeaderProps> = ({ panelContent, onBack }) => {\n  const { getToolIcon } = useTool();\n\n  const isResearchReport = panelContent.toolCallId?.startsWith('final-answer');\n\n  return (\n    <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n      <div className=\"flex items-center\">\n        <motion.button\n          whileHover={{ scale: 1.05, x: -2 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={onBack}\n          className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n          title=\"Back to workspace\"\n        >\n          <FiArrowLeft size={18} />\n        </motion.button>\n\n        <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden relative\">\n          {isResearchReport ? (\n            <>\n              <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20\" />\n              <div className=\"relative z-10\">\n                <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={20} />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className={`absolute inset-0 ${getBackgroundGradient(panelContent.type)}`} />\n              <div className=\"relative z-10\">{getToolIcon(panelContent.type || 'other')}</div>\n            </>\n          )}\n        </div>\n\n        <div>\n          <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n            {panelContent.title}\n          </h2>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            {formatTimestamp(panelContent.timestamp)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getBackgroundGradient(type: string): string {\n  const gradients: Record<string, string> = {\n    search:\n      'bg-gradient-to-br from-blue-400/20 to-indigo-500/10 dark:from-blue-600/30 dark:to-indigo-500/20',\n    browser:\n      'bg-gradient-to-br from-purple-400/20 to-pink-500/10 dark:from-purple-600/30 dark:to-pink-500/20',\n    command:\n      'bg-gradient-to-br from-green-400/20 to-emerald-500/10 dark:from-green-600/30 dark:to-emerald-500/20',\n    file: 'bg-gradient-to-br from-yellow-400/20 to-amber-500/10 dark:from-yellow-600/30 dark:to-amber-500/20',\n    image:\n      'bg-gradient-to-br from-red-400/20 to-rose-500/10 dark:from-red-600/30 dark:to-rose-500/20',\n    browser_vision_control:\n      'bg-gradient-to-br from-cyan-400/20 to-teal-500/10 dark:from-cyan-600/30 dark:to-teal-500/20',\n  };\n\n  return (\n    gradients[type] ||\n    'bg-gradient-to-br from-gray-400/20 to-gray-500/10 dark:from-gray-500/30 dark:to-gray-600/20'\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiEye, FiMousePointer, FiType, FiChevronsRight, FiImage } from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { BrowserShell } from './BrowserShell';\n\ninterface BrowserControlRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Specialized renderer for browser_vision_control tool results\n *\n * This renderer displays:\n * 1. The screenshot from the environment input\n * 2. A mouse cursor overlay showing the action point\n * 3. The thought process of the agent\n * 4. The step being performed\n * 5. The specific action taken\n *\n * Design improvements:\n * - Shows screenshot at the top for better visual context\n * - Displays enhanced mouse cursor with artistic animations\n * - Uses browser shell wrapper for consistent styling\n * - Applies smooth transitions for mouse movements\n * - Features visually engaging click animations\n */\nexport const BrowserControlRenderer: React.FC<BrowserControlRendererProps> = ({\n  part,\n  onAction,\n}) => {\n  const { activeSessionId, messages, toolResults, replayState } = useSession();\n  const [relatedImage, setRelatedImage] = useState<string | null>(null);\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\n  const [mousePosition, setMousePosition] = useState<{ x: number; y: number } | null>(null);\n  const [previousMousePosition, setPreviousMousePosition] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  // Extract the visual operation details from the part\n  const { thought, step, action, status, toolCallId, environmentImage } = part;\n\n  // Get coordinates directly from tool result instead of parsing action string\n  useEffect(() => {\n    if (!activeSessionId || !toolCallId) return;\n\n    // Find the matching tool result for this tool call\n    const sessionResults = toolResults[activeSessionId] || [];\n    const matchingResult = sessionResults.find((result) => result.toolCallId === toolCallId);\n\n    if (matchingResult && matchingResult.content && matchingResult.content.result) {\n      const { startX, startY } = matchingResult.content.result;\n\n      // Save previous position before updating\n      if (mousePosition) {\n        setPreviousMousePosition(mousePosition);\n      }\n\n      // Set new position if coordinates are valid\n      if (typeof startX === 'number' && typeof startY === 'number') {\n        setMousePosition({\n          x: startX,\n          y: startY,\n        });\n      }\n    }\n  }, [activeSessionId, toolCallId, toolResults]);\n\n  // 如果提供了环境图像，直接使用\n  useEffect(() => {\n    if (environmentImage) {\n      setRelatedImage(environmentImage);\n    }\n  }, [environmentImage]);\n\n  // Find the most recent environment input (screenshot) before this operation\n  useEffect(() => {\n    if (!activeSessionId) return;\n\n    const sessionMessages = messages[activeSessionId] || [];\n\n    if (!toolCallId) return;\n\n    // 获取当前工具调用在消息中的索引\n    const currentToolCallIndex = sessionMessages.findIndex((msg) =>\n      msg.toolCalls?.some((tc) => tc.id === toolCallId),\n    );\n\n    if (currentToolCallIndex === -1) return;\n\n    // 查找距离当前工具调用最近的环境输入\n    let foundImage = false;\n\n    // 向前搜索环境输入，找到最近的截图\n    for (let i = currentToolCallIndex; i >= 0; i--) {\n      const msg = sessionMessages[i];\n      if (msg.role === 'environment' && Array.isArray(msg.content)) {\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          foundImage = true;\n          break;\n        }\n      }\n    }\n\n    // 如果在当前工具调用之前没有找到图片，则搜索所有环境消息作为回退\n    if (!foundImage) {\n      console.warn(\n        `[BrowserControlRenderer] Could not find preceding screenshot for toolCallId: ${toolCallId}. Falling back to search all environment messages.`,\n      );\n      const envMessages = sessionMessages.filter(\n        (msg) => msg.role === 'environment' && Array.isArray(msg.content),\n      );\n\n      // 从后往前找，找到最新的截图\n      for (let i = envMessages.length - 1; i >= 0; i--) {\n        const msg = envMessages[i];\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          break; // 找到最新的就停止\n        }\n      }\n    }\n  }, [activeSessionId, messages, toolCallId]);\n\n  // Handler to get image dimensions when loaded\n  const handleImageLoad = () => {\n    if (imageRef.current) {\n      setImageSize({\n        width: imageRef.current.naturalWidth,\n        height: imageRef.current.naturalHeight,\n      });\n    }\n  };\n\n  // If no valid data, show a placeholder\n  if (!thought && !step && !action) {\n    return <div className=\"text-gray-500 italic\">Browser control details unavailable</div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Screenshot section - moved to the top */}\n      {relatedImage && (\n        <div>\n          <BrowserShell className=\"mb-4\">\n            <div className=\"relative\">\n              <img\n                ref={imageRef}\n                src={relatedImage}\n                alt=\"Browser Screenshot\"\n                className=\"w-full h-auto object-contain\"\n                onLoad={handleImageLoad}\n              />\n\n              {/* Enhanced mouse cursor overlay */}\n              {mousePosition && imageSize && (\n                <motion.div\n                  className=\"absolute pointer-events-none\"\n                  initial={\n                    previousMousePosition\n                      ? {\n                          left: `${(previousMousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(previousMousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                      : {\n                          left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                  }\n                  animate={{\n                    left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                    top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                  }}\n                  transition={{ duration: 0.5, ease: [0.16, 1, 0.3, 1] }}\n                  style={{\n                    zIndex: 10,\n                  }}\n                >\n                  <div className=\"relative\">\n                    {/* Enhanced cursor icon with shadow effect */}\n                    <svg\n                      width=\"36\"\n                      height=\"36\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      style={{\n                        filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))',\n\n                        transform: 'translate(0px, 2px)',\n                      }}\n                    >\n                      <defs>\n                        <linearGradient id=\"cursorGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                          <stop offset=\"0%\" stopColor=\"white\" />\n                          <stop offset=\"100%\" stopColor=\"#f5f5f5\" />\n                        </linearGradient>\n                      </defs>\n                      <path\n                        d=\"M5 3L19 12L12 13L9 20L5 3Z\"\n                        fill=\"url(#cursorGradient)\"\n                        stroke=\"#000000\"\n                        strokeWidth=\"1.5\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n\n                    {/* Artistic pulse effect for click actions */}\n                    {action && action.includes('click') && (\n                      <>\n                        {/* Multiple layered ripple effects */}\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.8, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2.5 }}\n                          transition={{\n                            duration: 1.5,\n                            ease: 'easeOut',\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-8px',\n                            left: '-8px',\n                            width: '24px',\n                            height: '24px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.6) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.3)',\n                          }}\n                        />\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.9, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2 }}\n                          transition={{\n                            duration: 1.2,\n                            ease: 'easeOut',\n                            delay: 0.2,\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-6px',\n                            left: '-6px',\n                            width: '20px',\n                            height: '20px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.8) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.5)',\n                          }}\n                        />\n                        {/* Central highlight dot */}\n                        <motion.div\n                          className=\"absolute rounded-full bg-white\"\n                          initial={{ opacity: 1, scale: 0.5 }}\n                          animate={{ opacity: 0.8, scale: 1 }}\n                          transition={{\n                            duration: 0.7,\n                            repeat: Infinity,\n                            repeatType: 'reverse',\n                          }}\n                          style={{\n                            top: '2px',\n                            left: '2px',\n                            width: '4px',\n                            height: '4px',\n                            boxShadow: '0 0 10px 2px rgba(255,255,255,0.7)',\n                          }}\n                        />\n                      </>\n                    )}\n                  </div>\n                </motion.div>\n              )}\n            </div>\n          </BrowserShell>\n        </div>\n      )}\n\n      {/* Visual operation details card */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiMousePointer className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">GUI Agent Operation</div>\n          {status && (\n            <div\n              className={`ml-auto text-xs font-medium px-2 py-0.5 rounded-full ${\n                status === 'success'\n                  ? 'bg-green-100/80 dark:bg-green-900/20 text-green-700 dark:text-green-400'\n                  : 'bg-red-100/80 dark:bg-red-900/20 text-red-700 dark:text-red-400'\n              }`}\n            >\n              {status === 'success' ? 'Success' : 'Failed'}\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-4 space-y-3\">\n          {/* Thought process */}\n          {thought && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiEye className=\"mr-2 text-accent-500/70 dark:text-accent-400/70\" size={14} />\n                Thought\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-accent-100 dark:border-accent-900/30\">\n                {thought}\n              </div>\n            </div>\n          )}\n\n          {/* Step */}\n          {step && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiChevronsRight\n                  className=\"mr-2 text-primary-500/70 dark:text-primary-400/70\"\n                  size={14}\n                />\n                Action\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-primary-100 dark:border-primary-900/30\">\n                {step}\n              </div>\n            </div>\n          )}\n\n          {/* Action command */}\n          {action && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiType className=\"mr-2 text-gray-500/70 dark:text-gray-400/70\" size={14} />\n                Action Command\n              </div>\n              <div className=\"bg-gray-50 dark:bg-gray-800/90 font-mono text-xs p-2 rounded-md border border-gray-100/50 dark:border-gray-700/30 overflow-x-auto\">\n                {action}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { FiMonitor, FiExternalLink, FiGlobe, FiBookmark, FiCopy, FiCheck } from 'react-icons/fi';\nimport { BrowserShell } from './BrowserShell';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\n\ninterface BrowserResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders browser navigation and page content results with improved UI\n *\n * Design improvements:\n * - Enhanced browser shell with realistic browser chrome\n * - Better visual hierarchy and content spacing\n * - Quick action buttons for URL interaction\n * - Proper content formatting with support for different content types\n * - Smooth animations for state changes\n */\nexport const BrowserResultRenderer: React.FC<BrowserResultRendererProps> = ({ part }) => {\n  const { url, content, title, contentType, _extra } = part;\n  const [copied, setCopied] = useState(false);\n\n  const displayTitle = title || url?.split('/').pop() || 'Browser Result';\n\n  const screenshot = _extra?.currentScreenshot || null;\n\n  if (!url && !content && !screenshot) {\n    return <div className=\"text-gray-500 italic\">Browser result is empty</div>;\n  }\n\n  const copyUrl = () => {\n    if (url) {\n      navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Extract URL from text content if it's in the format \"Navigated to URL\"\n  const extractUrlFromContent = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return url || '';\n  };\n\n  // Extract content from text after URL line\n  const extractContentFromText = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      return lines.slice(1).join('\\n');\n    }\n    return content;\n  };\n\n  const extractedUrl = extractUrlFromContent();\n  const extractedContent = extractContentFromText();\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"mb-4\">\n        {/* URL actions bar */}\n        {extractedUrl && (\n          <div className=\"mb-4 flex items-center\">\n            <div className=\"flex-1 p-3 bg-gray-50 dark:bg-gray-800/80 rounded-lg text-sm border border-gray-100/30 dark:border-gray-700/20 flex items-center overflow-hidden\">\n              <FiGlobe className=\"flex-shrink-0 text-gray-400 dark:text-gray-500 mr-2\" size={16} />\n              <span className=\"truncate text-gray-700 dark:text-gray-300 mr-2\">{extractedUrl}</span>\n            </div>\n            <div className=\"flex ml-2 gap-2\">\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={copyUrl}\n                className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n                title=\"Copy URL\"\n              >\n                {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n              </motion.button>\n              <motion.a\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                href={extractedUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-lg bg-purple-50 dark:bg-purple-900/20 text-accent-600 dark:text-accent-400 hover:bg-purple-100 dark:hover:bg-purple-800/30 transition-colors border border-purple-200/50 dark:border-purple-800/30\"\n                title=\"Open in new tab\"\n              >\n                <FiExternalLink size={18} />\n              </motion.a>\n            </div>\n          </div>\n        )}\n\n        {/* Content with enhanced browser shell */}\n        <BrowserShell title={displayTitle} url={extractedUrl}>\n          <div className=\"bg-white dark:bg-gray-800 px-5 min-h-[200px] max-h-[70vh] overflow-auto border-t border-gray-100/30 dark:border-gray-700/20\">\n            {screenshot && (\n              <div className=\"py-4\">\n                <img\n                  src={screenshot}\n                  alt=\"Browser Screenshot\"\n                  className=\"w-full h-auto rounded-md\"\n                />\n              </div>\n            )}\n\n            {(contentType === 'text' || typeof extractedContent === 'string') &&\n            extractedContent ? (\n              <div className=\"prose dark:prose-invert prose-sm max-w-none py-4\">\n                <MarkdownRenderer\n                  content={typeof extractedContent === 'string' ? extractedContent : ''}\n                />\n              </div>\n            ) : (\n              !screenshot && (\n                <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n                  {JSON.stringify(extractedContent, null, 2)}\n                </pre>\n              )\n            )}\n          </div>\n        </BrowserShell>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FiLock, FiGlobe } from 'react-icons/fi';\n\ninterface BrowserShellProps {\n  children: React.ReactNode;\n  title?: string;\n  url?: string;\n  className?: string;\n}\n\n/**\n * BrowserShell - A component that mimics a browser window with improved visuals\n *\n * Design improvements:\n * - Modern browser chrome styling with authentic address bar\n * - Refined control buttons with hover effects\n * - Subtle shadows and borders for enhanced depth perception\n * - Realistic URL formatting with https indicator\n * - Tab-like interface for better visual fidelity\n */\nexport const BrowserShell: React.FC<BrowserShellProps> = ({\n  children,\n  title = 'Browser',\n  url = '',\n  className = '',\n}) => {\n  // Format URL for display\n  const displayUrl = url || '';\n  const isSecure = displayUrl.startsWith('https://');\n\n  // Extract domain for tab display\n  const getDomain = (url: string) => {\n    try {\n      if (url.startsWith('http')) {\n        const domain = new URL(url).hostname;\n        return domain || title;\n      }\n    } catch (e) {}\n    return title;\n  };\n\n  const domain = getDomain(displayUrl);\n\n  return (\n    <div\n      className={`bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${className}`}\n    >\n      {/* Browser toolbar with improved design */}\n      <div className=\"bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-800/90 dark:to-gray-800 border-b border-gray-200/80 dark:border-gray-700/40 shadow-sm\">\n        {/* Address bar with controls */}\n        <div className=\"flex items-center p-3\">\n          {/* Control buttons with enhanced styling */}\n          <div className=\"flex space-x-1.5 mr-3\">\n            <div className=\"w-3 h-3 rounded-full bg-red-400 dark:bg-red-500 border border-red-500/20 dark:border-red-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-yellow-400 dark:bg-yellow-500 border border-yellow-500/20 dark:border-yellow-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-green-400 dark:bg-green-500 border border-green-500/20 dark:border-green-400/20 shadow-sm\" />\n          </div>\n\n          {/* URL bar with secure indicator */}\n          <div className=\"flex-1 bg-white dark:bg-gray-700 rounded-md flex items-center px-3 py-1.5 text-xs text-gray-700 dark:text-gray-200 border border-gray-300/30 dark:border-gray-600/40 group hover:border-gray-400/30 dark:hover:border-gray-500/30 transition-colors shadow-inner\">\n            <div className=\"flex items-center w-full\">\n              <div className=\"flex items-center mr-2\">\n                {isSecure ? (\n                  <FiLock className=\"mr-1.5 text-green-500 dark:text-green-400\" size={12} />\n                ) : (\n                  <FiGlobe className=\"mr-1.5 text-gray-400 dark:text-gray-500\" size={12} />\n                )}\n              </div>\n              <span className=\"truncate font-mono flex-1\">{displayUrl}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"overflow-auto max-h-[100vh]\">{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../types';\n\ninterface CommandResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Custom command highlighting function\n * Breaks down command line syntax into highlightable fragments\n */\nconst highlightCommand = (command: string) => {\n  // Split the command line, preserving content within quotes\n  const tokenize = (cmd: string) => {\n    const parts: React.ReactNode[] = [];\n\n    // Regular expression patterns\n    const patterns = [\n      // Commands and subcommands (usually the first word)\n      {\n        pattern: /^[\\w.-]+|(?<=\\s|;|&&|\\|\\|)[\\w.-]+(?=\\s|$)/,\n        className: 'text-cyan-400 font-bold',\n      },\n      // Option flags (-v, --version etc.)\n      { pattern: /(?<=\\s|^)(-{1,2}[\\w-]+)(?=\\s|=|$)/, className: 'text-yellow-300' },\n      // Paths and files\n      {\n        pattern: /(?<=\\s|=|:|^)\\/[\\w./\\\\_-]+|\\.\\/?[\\w./\\\\_-]+|~\\/[\\w./\\\\_-]+/,\n        className: 'text-green-400',\n      },\n      // Quoted strings\n      { pattern: /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/, className: 'text-orange-300' },\n      // Environment variables\n      { pattern: /\\$\\w+|\\$\\{\\w+\\}/, className: 'text-accent-400' },\n      // Output redirection\n      { pattern: /(?<=\\s)(>|>>|<|<<|2>|2>>|&>)(?=\\s|$)/, className: 'text-blue-400 font-bold' },\n      // Pipes and operators\n      { pattern: /(?<=\\s)(\\||;|&&|\\|\\|)(?=\\s|$)/, className: 'text-red-400 font-bold' },\n    ];\n\n    let remainingCmd = cmd;\n    let lastIndex = 0;\n\n    // Iterate to parse the command line\n    while (remainingCmd) {\n      let foundMatch = false;\n\n      for (const { pattern, className } of patterns) {\n        const match = remainingCmd.match(pattern);\n        if (match && match.index === 0) {\n          const value = match[0];\n          if (lastIndex < match.index) {\n            parts.push(\n              <span key={`plain-${lastIndex}`}>{remainingCmd.slice(0, match.index)}</span>,\n            );\n          }\n\n          parts.push(\n            <span key={`highlight-${lastIndex}`} className={className}>\n              {value}\n            </span>,\n          );\n\n          remainingCmd = remainingCmd.slice(match.index + value.length);\n          lastIndex += match.index + value.length;\n          foundMatch = true;\n          break;\n        }\n      }\n\n      // If no pattern matches, add a plain character and continue\n      if (!foundMatch) {\n        parts.push(<span key={`char-${lastIndex}`}>{remainingCmd[0]}</span>);\n        remainingCmd = remainingCmd.slice(1);\n        lastIndex += 1;\n      }\n    }\n\n    return parts;\n  };\n\n  const lines = command.split('\\n');\n  return lines.map((line, index) => (\n    <div key={index} className=\"command-line whitespace-nowrap\">\n      {tokenize(line)}\n    </div>\n  ));\n};\n\n/**\n * Renders a terminal-like command and output result\n */\nexport const CommandResultRenderer: React.FC<CommandResultRendererProps> = ({ part }) => {\n  const { command, stdout, stderr, exitCode } = part;\n\n  if (!command && !stdout && !stderr) {\n    return <div className=\"text-gray-500 italic\">Command result is empty</div>;\n  }\n\n  // Exit code styling\n  const isError = exitCode !== 0 && exitCode !== undefined;\n  const exitCodeDisplay =\n    exitCode !== undefined ? (\n      <span className={`ml-2 text-xs ${isError ? 'text-red-500' : 'text-green-500'}`}>\n        (exit code: {exitCode})\n      </span>\n    ) : null;\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"mb-2\">\n        {/* Terminal interface with aligned styling */}\n        <div className=\"rounded-lg overflow-hidden border border-gray-900 shadow-[0_8px_24px_rgba(0,0,0,0.3)]\">\n          {/* Terminal title bar with aligned control buttons */}\n          <div className=\"bg-[#111111] px-3 py-1.5 border-b border-gray-900 flex items-center\">\n            <div className=\"flex space-x-1.5 mr-3\">\n              <div className=\"w-3 h-3 rounded-full bg-red-500 shadow-sm\"></div>\n              <div className=\"w-3 h-3 rounded-full bg-yellow-500 shadow-sm\"></div>\n              <div className=\"w-3 h-3 rounded-full bg-green-500 shadow-sm\"></div>\n            </div>\n            <div className=\"text-gray-400 text-xs font-medium mx-auto\">user@agent-tars</div>\n          </div>\n\n          {/* Terminal content area - use horizontal scrolling instead of auto-wrapping */}\n          <div className=\"bg-black px-3 py-2 font-mono text-sm terminal-content overflow-auto max-h-[80vh]\">\n            <div className=\"overflow-x-auto min-w-full\">\n              {/* Command section */}\n              {command && (\n                <div className=\"flex items-start whitespace-nowrap\">\n                  <span className=\"select-none text-green-400 mr-2 font-bold terminal-prompt-symbol\">\n                    $\n                  </span>\n                  <div className=\"flex-1 text-gray-200\">{highlightCommand(command)}</div>\n                </div>\n              )}\n\n              {/* Output section - disable auto-wrapping */}\n              {stdout && (\n                <pre className=\"whitespace-pre overflow-x-visible text-gray-200 mt-3 ml-3\">\n                  {stdout}\n                </pre>\n              )}\n\n              {/* Error output */}\n              {stderr && (\n                <pre className=\"whitespace-pre overflow-x-visible text-red-400 my-3 ml-3\">\n                  {stderr}\n                </pre>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiCode, FiDownload, FiExternalLink, FiCopy, FiCheck } from 'react-icons/fi';\nimport { ToolResultContentPart } from '..//types';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface DeliverableRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * DeliverableRenderer - Specialized component for rendering deliverable content\n * such as reports, code artifacts, and other final products\n *\n * Features:\n * - Categorizes deliverables by type (code, document, data)\n * - Provides download and copy functionality\n * - Offers appropriate preview for different content types\n * - Visual design consistent with other workspace renderers\n */\nexport const DeliverableRenderer: React.FC<DeliverableRendererProps> = ({ part, onAction }) => {\n  const { title, text, data, name } = part;\n  const [copied, setCopied] = React.useState(false);\n  \n  // Determine deliverable type based on available data\n  const getDeliverableType = () => {\n    if (!part) return 'unknown';\n    \n    // Check extensions if name exists\n    if (name) {\n      if (/\\.(js|ts|jsx|tsx|py|java|c|cpp|php|html|css|json)$/i.test(name)) return 'code';\n      if (/\\.(md|txt|docx|pdf|rtf)$/i.test(name)) return 'document';\n      if (/\\.(csv|xlsx|xls|xml)$/i.test(name)) return 'data';\n    }\n    \n    // Check title\n    if (title) {\n      if (title.toLowerCase().includes('report')) return 'document';\n      if (title.toLowerCase().includes('code')) return 'code';\n      if (title.toLowerCase().includes('data')) return 'data';\n    }\n    \n    // Default\n    return 'document';\n  };\n  \n  const deliverableType = getDeliverableType();\n  const content = text || (typeof data === 'string' ? data : JSON.stringify(data, null, 2));\n  \n  if (!content) {\n    return <div className=\"text-gray-500 italic\">No deliverable content available</div>;\n  }\n  \n  // Handle copy to clipboard\n  const handleCopy = () => {\n    navigator.clipboard.writeText(content);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  \n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name || title || 'deliverable';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      {/* Deliverable header with metadata */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/50 dark:border-gray-700/30\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 rounded-xl flex items-center justify-center mr-3 border border-gray-200/50 dark:border-gray-700/30 shadow-sm \n            bg-gradient-to-br \n            from-amber-50 to-amber-100 dark:from-amber-900/20 dark:to-amber-800/20 \n            text-amber-500 dark:text-amber-400\">\n            {deliverableType === 'code' ? (\n              <FiCode size={18} />\n            ) : (\n              <FiFileText size={18} />\n            )}\n          </div>\n          <div>\n            <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n              {title || name || 'Deliverable'}\n            </h3>\n            <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n              <span className=\"mr-2\">{deliverableType === 'code' ? 'Code artifact' : 'Document'}</span>\n              {name && <span className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full\">{name}</span>}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n          </motion.button>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Download file\"\n          >\n            <FiDownload size={18} />\n          </motion.button>\n        </div>\n      </div>\n      \n      {/* Content preview with appropriate rendering */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiFileText className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={16} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">Content Preview</div>\n        </div>\n        \n        <div className=\"p-4 max-h-[70vh] overflow-auto\">\n          {deliverableType === 'code' ? (\n            <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n              {content}\n            </pre>\n          ) : (\n            <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n              <MarkdownRenderer content={content} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '..//types';\nimport { motion } from 'framer-motion';\nimport { FiDownload, FiZoomIn } from 'react-icons/fi';\nimport { BrowserShell } from './BrowserShell';\n\ninterface ImageRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders image content with zoom and download actions\n */\nexport const ImageRenderer: React.FC<ImageRendererProps> = ({ part, onAction }) => {\n  const { imageData, mimeType = 'image/png', name } = part;\n\n  if (!imageData) {\n    return <div className=\"text-gray-500 italic\">Image data missing</div>;\n  }\n\n  const imgSrc = `data:${mimeType};base64,${imageData}`;\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = imgSrc;\n    link.download = name || 'image';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleZoom = () => {\n    if (onAction) {\n      onAction('zoom', { src: imgSrc, alt: name });\n    }\n  };\n\n  const isScreenshot =\n    name?.toLowerCase().includes('screenshot') || name?.toLowerCase().includes('browser');\n\n  const actionButtons = (\n    <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-2\">\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleZoom}\n        className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n        title=\"Zoom\"\n      >\n        <FiZoomIn size={16} />\n      </motion.button>\n\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={handleDownload}\n        className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n        title=\"Download\"\n      >\n        <FiDownload size={16} />\n      </motion.button>\n    </div>\n  );\n\n  if (isScreenshot) {\n    return (\n      <div className=\"relative group\">\n        <BrowserShell title={name || 'Browser Screenshot'}>\n          <img src={imgSrc} alt={name || 'Image'} className=\"w-full h-auto object-contain\" />\n        </BrowserShell>\n        {actionButtons}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative group\">\n      <motion.div\n        whileHover={{ scale: 1.01 }}\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-2 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n      >\n        <div className=\"relative\">\n          <img\n            src={imgSrc}\n            alt={name || 'Image'}\n            className=\"max-h-[70vh] object-contain rounded-lg mx-auto\"\n          />\n\n          {actionButtons}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '..//types';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink } from 'react-icons/fi';\n\ninterface LinkRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders link content with external icon\n */\nexport const LinkRenderer: React.FC<LinkRendererProps> = ({ part }) => {\n  const { url, title } = part;\n\n  if (!url) {\n    return <div className=\"text-gray-500 italic\">Link URL missing</div>;\n  }\n\n  return (\n    <motion.a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      whileHover={{ scale: 1.01, x: 2 }}\n      className=\"flex items-center gap-2 p-3 bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 text-accent-600 dark:text-accent-400 hover:text-accent-700 dark:hover:text-accent-300 shadow-sm group\"\n    >\n      <FiExternalLink\n        className=\"flex-shrink-0 text-gray-400 group-hover:text-accent-500 transition-colors\"\n        size={18}\n      />\n\n      <div className=\"flex-1 truncate\">\n        <div className=\"font-medium\">{title || url}</div>\n        {title && <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{url}</div>}\n      </div>\n\n      <div className=\"flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity\">\n        <FiExternalLink size={14} className=\"text-gray-400\" />\n      </div>\n    </motion.a>\n  );\n};\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiCheck, FiClock, FiTarget, FiCheckCircle, FiArrowRight, FiLoader } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { AgentEventStream } from '@/common/types';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: AgentEventStream.PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator with keyframe navigation\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // Calculate progress percentage\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n\n  const completedStepsCount = steps.filter((step) => step.done).length;\n\n  // If no plan, show empty state\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-24 h-24 rounded-full bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800/80 dark:to-gray-900/90 flex items-center justify-center mb-6 border border-gray-200/30 dark:border-gray-700/40 shadow-sm\"\n        >\n          <FiTarget size={36} className=\"text-gray-400 dark:text-gray-500\" />\n        </motion.div>\n        <motion.h3\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n        >\n          No Plan Generated\n        </motion.h3>\n        <motion.p\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"text-gray-600 dark:text-gray-400 max-w-md\"\n        >\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </motion.p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 md:p-8 h-full flex flex-col\">\n      {/* Title and Plan Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"mb-8\"\n      >\n        {isComplete ? (\n          <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-green-50/80 to-green-100/30 dark:from-green-900/20 dark:to-green-800/10 flex items-center justify-center mr-4 text-green-500 dark:text-green-400 border border-green-100/50 dark:border-green-800/30 shadow-sm\">\n            <FiCheckCircle size={22} />\n          </div>\n        ) : (\n          <motion.div\n            animate={{\n              boxShadow: [\n                '0 0 0 rgba(99, 102, 241, 0.2)',\n                '0 0 12px rgba(99, 102, 241, 0.4)',\n                '0 0 0 rgba(99, 102, 241, 0.2)',\n              ],\n            }}\n            transition={{ duration: 3, repeat: Infinity }}\n            className=\"w-12 h-12 rounded-full bg-gradient-to-br from-accent-50/80 to-accent-100/30 dark:from-accent-900/20 dark:to-accent-800/10 flex items-center justify-center mr-4 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30\"\n          >\n            <motion.div\n              animate={{ rotate: 360 }}\n              transition={{ duration: 8, repeat: Infinity, ease: 'linear' }}\n            >\n              <FiTarget size={22} />\n            </motion.div>\n          </motion.div>\n        )}\n        <div>\n          <h2 className=\"text-2xl font-medium text-gray-800 dark:text-gray-100\">Execution Plan</h2>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            {isComplete\n              ? 'All steps have been completed successfully.'\n              : 'The agent is executing this plan to complete your task.'}\n          </p>\n        </div>\n      </motion.div>\n\n      {/* Progress indicator with keyframe navigation */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center gap-2\">\n            <FiLoader size={14} className={isComplete ? '' : 'animate-spin-slow'} />\n            <span>Progress</span>\n          </span>\n          <div className=\"flex items-center gap-3\">\n            <span className=\"text-sm font-medium flex items-center gap-1.5\">\n              <span\n                className={\n                  isComplete\n                    ? 'text-green-600 dark:text-green-400'\n                    : 'text-accent-600 dark:text-accent-400'\n                }\n              >\n                {completedStepsCount}/{steps.length}\n              </span>\n              <span className=\"text-gray-500 dark:text-gray-400\">steps</span>\n            </span>\n\n            {/* Show keyframe info if available */}\n            {keyframes && keyframes.length > 1 && currentKeyframeIndex !== undefined && (\n              <div className=\"text-xs bg-gray-100 dark:bg-gray-800 px-3 py-1.5 rounded-full border border-gray-200/50 dark:border-gray-700/40 text-gray-600 dark:text-gray-400 font-medium shadow-sm\">\n                Keyframe {currentKeyframeIndex + 1}/{keyframes.length}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Interactive Progress Bar with keyframe navigation */}\n        {keyframes && keyframes.length > 1 ? (\n          <div\n            className=\"relative h-6 bg-gray-100 dark:bg-gray-800/80 rounded-full overflow-hidden shadow-inner cursor-pointer\"\n            onClick={(e) => {\n              if (!onKeyframeChange || !keyframes) return;\n\n              // Calculate position relative to container\n              const rect = e.currentTarget.getBoundingClientRect();\n              const relX = e.clientX - rect.left;\n              const percentage = relX / rect.width;\n\n              // Calculate keyframe index based on click position\n              const targetIndex = Math.min(\n                Math.floor(percentage * keyframes.length),\n                keyframes.length - 1,\n              );\n              onKeyframeChange(targetIndex);\n            }}\n          >\n            {/* Progress fill */}\n            <motion.div\n              initial={{ width: 0 }}\n              animate={{ width: `${progressPercentage}%` }}\n              transition={{ duration: 0.8, ease: [0.34, 1.56, 0.64, 1] }}\n              className={`h-full ${\n                isComplete\n                  ? 'bg-gradient-to-r from-green-400 to-green-500/90 dark:from-green-500/90 dark:to-green-400/80'\n                  : 'bg-gradient-to-r from-accent-400 to-accent-500/90 dark:from-accent-500 dark:to-accent-400/90'\n              }`}\n            />\n\n            {/* Keyframe markers */}\n            {keyframes.map((keyframe, index) => {\n              const position = (index / (keyframes.length - 1)) * 100;\n              const isActive = index === currentKeyframeIndex;\n              const isPast = currentKeyframeIndex !== undefined && index <= currentKeyframeIndex;\n\n              return (\n                <div\n                  key={index}\n                  className=\"absolute top-0 bottom-0 z-10 flex items-center justify-center\"\n                  style={{ left: `${position}%`, transform: 'translateX(-50%)' }}\n                >\n                  <motion.div\n                    className={`w-3 h-3 rounded-full border-2 ${\n                      isActive\n                        ? 'bg-white dark:bg-gray-900 border-accent-500 dark:border-accent-400 transform scale-125 shadow-sm'\n                        : isPast\n                          ? 'bg-white dark:bg-gray-900 border-green-500 dark:border-green-400'\n                          : 'bg-white dark:bg-gray-900 border-gray-300 dark:border-gray-500'\n                    }`}\n                    whileHover={{ scale: 1.3 }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (onKeyframeChange) onKeyframeChange(index);\n                    }}\n                    title={formatTimestamp(keyframe.timestamp)}\n                  />\n\n                  {/* Active keyframe indicator */}\n                  {isActive && (\n                    <motion.div\n                      className=\"absolute inset-0 rounded-full bg-accent-400 dark:bg-accent-500\"\n                      animate={{\n                        scale: [1, 1.8],\n                        opacity: [0.4, 0],\n                      }}\n                      transition={{\n                        duration: 1.5,\n                        repeat: Infinity,\n                        ease: 'easeOut',\n                      }}\n                    />\n                  )}\n                </div>\n              );\n            })}\n\n            {/* Timestamp indicator for active keyframe */}\n            {currentKeyframeIndex !== undefined && keyframes[currentKeyframeIndex] && (\n              <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                {formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n              </div>\n            )}\n          </div>\n        ) : (\n          // Simple progress bar without keyframe navigation\n          <div className=\"h-2 bg-gray-100 dark:bg-gray-800/80 rounded-full overflow-hidden shadow-inner\">\n            <motion.div\n              initial={{ width: 0 }}\n              animate={{ width: `${progressPercentage}%` }}\n              transition={{ duration: 0.8, ease: [0.34, 1.56, 0.64, 1] }}\n              className={`h-full ${\n                isComplete\n                  ? 'bg-gradient-to-r from-green-400 to-green-500/90 dark:from-green-500/90 dark:to-green-400/80'\n                  : 'bg-gradient-to-r from-accent-400 to-accent-500/90 dark:from-accent-500 dark:to-accent-400/90'\n              }`}\n            />\n          </div>\n        )}\n      </motion.div>\n\n      {/* Steps list with elegant cards */}\n      <div className=\"flex-1 overflow-auto pr-2 workspace-scrollbar\">\n        <motion.div\n          className=\"space-y-4\"\n          variants={{\n            visible: { transition: { staggerChildren: 0.08 } },\n          }}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {steps.map((step, index) => {\n            const isActive = index === completedStepsCount && !isComplete;\n            return (\n              <motion.div\n                key={index}\n                variants={{\n                  hidden: { opacity: 0, y: 20 },\n                  visible: {\n                    opacity: 1,\n                    y: 0,\n                    transition: { duration: 0.6, ease: [0.22, 1, 0.36, 1] },\n                  },\n                }}\n                className=\"relative\"\n              >\n                {/* Connecting line */}\n                {index < steps.length - 1 && (\n                  <div\n                    className={`absolute left-6 w-0.5 top-12 bottom-0 \n                      ${\n                        step.done && steps[index + 1].done\n                          ? 'bg-gradient-to-b from-green-400 to-green-300/50 dark:from-green-500/80 dark:to-green-400/30'\n                          : isActive && index + 1 === completedStepsCount\n                            ? 'bg-gradient-to-b from-accent-400 to-accent-300/50 dark:from-accent-500/80 dark:to-accent-400/30'\n                            : 'bg-gradient-to-b from-gray-300 to-gray-200/50 dark:from-gray-600/80 dark:to-gray-500/30'\n                      }`}\n                  />\n                )}\n\n                <div className=\"flex items-start gap-4\">\n                  {/* Status indicator */}\n                  <div\n                    className={`flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center transition-all duration-500 shadow-sm backdrop-blur-sm\n                      ${\n                        step.done\n                          ? 'bg-gradient-to-br from-green-400/90 to-green-500/90 dark:from-green-500/90 dark:to-green-400/80 text-white'\n                          : isActive\n                            ? 'bg-gradient-to-br from-accent-400/90 to-accent-500/90 dark:from-accent-500/90 dark:to-accent-400/80 text-white animate-pulse'\n                            : 'bg-gradient-to-br from-gray-200 to-gray-300/80 dark:from-gray-700/90 dark:to-gray-600/70 text-gray-500 dark:text-gray-400'\n                      }`}\n                  >\n                    {step.done ? (\n                      <FiCheck size={22} />\n                    ) : isActive ? (\n                      <motion.div\n                        animate={{ rotate: 360 }}\n                        transition={{ duration: 3, repeat: Infinity, ease: 'linear' }}\n                      >\n                        <FiLoader size={22} />\n                      </motion.div>\n                    ) : (\n                      <FiClock size={20} />\n                    )}\n                  </div>\n\n                  {/* Step content card */}\n                  <div className=\"flex-1\">\n                    <motion.div\n                      whileHover={{ y: -2, boxShadow: '0 8px 16px -6px rgba(0,0,0,0.05)' }}\n                      transition={{ duration: 0.2 }}\n                      className={`bg-white dark:bg-gray-800/90 rounded-xl p-4 border shadow-sm transition-all duration-200\n                        ${\n                          step.done\n                            ? 'border-l-4 border-green-500 dark:border-green-400 border-gray-100/80 dark:border-gray-700/60'\n                            : isActive\n                              ? 'border-l-4 border-accent-500 dark:border-accent-400 border-gray-100/80 dark:border-gray-700/60'\n                              : 'border-gray-200/70 dark:border-gray-700/50 opacity-70'\n                        }`}\n                    >\n                      <div\n                        className={`text-sm leading-relaxed \n                          ${\n                            step.done\n                              ? 'text-gray-800 dark:text-gray-200'\n                              : isActive\n                                ? 'text-gray-800 dark:text-gray-200'\n                                : 'text-gray-500 dark:text-gray-400'\n                          }`}\n                      >\n                        {step.content}\n                      </div>\n\n                      {/* Step status indicator */}\n                      <div className=\"flex justify-between items-center mt-3 text-xs\">\n                        <div\n                          className={`flex items-center ${\n                            step.done\n                              ? 'text-green-600 dark:text-green-400'\n                              : isActive\n                                ? 'text-accent-600 dark:text-accent-400'\n                                : 'text-gray-500 dark:text-gray-400'\n                          }`}\n                        >\n                          {step.done ? (\n                            <>\n                              <FiCheckCircle size={12} className=\"mr-1\" />\n                              <span>Completed</span>\n                            </>\n                          ) : isActive ? (\n                            <>\n                              <FiLoader size={12} className=\"mr-1 animate-spin\" />\n                              <span>In progress</span>\n                            </>\n                          ) : (\n                            <>\n                              <FiClock size={12} className=\"mr-1\" />\n                              <span>Pending</span>\n                            </>\n                          )}\n                        </div>\n                        <div className=\"px-2 py-0.5 rounded-full text-[0.65rem] bg-gray-100/70 dark:bg-gray-700/50 text-gray-500 dark:text-gray-400\">\n                          Step {index + 1}\n                        </div>\n                      </div>\n                    </motion.div>\n                  </div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n      </div>\n\n      {/* Plan Summary (shown only when complete) */}\n      <AnimatePresence>\n        {isComplete && summary && (\n          <motion.div\n            initial={{ opacity: 0, y: 20, height: 0 }}\n            animate={{ opacity: 1, y: 0, height: 'auto' }}\n            transition={{ duration: 0.5, delay: 0.3 }}\n            className=\"mt-8 pt-6 border-t border-gray-200/60 dark:border-gray-700/30\"\n          >\n            <div className=\"flex items-center mb-3\">\n              <div className=\"w-8 h-8 rounded-full bg-gradient-to-br from-green-50/80 to-green-100/30 dark:from-green-900/20 dark:to-green-800/10 flex items-center justify-center mr-3 text-green-500 dark:text-green-400 border border-green-100/50 dark:border-green-800/30\">\n                <FiCheck size={16} />\n              </div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">Plan Summary</div>\n            </div>\n            <motion.div\n              initial={{ opacity: 0.5, y: 5 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"text-sm text-gray-700 dark:text-gray-300 bg-gradient-to-r from-white to-gray-50/80 dark:from-gray-800 dark:to-gray-800/80 p-5 rounded-xl border border-gray-200/60 dark:border-gray-700/40 shadow-sm\"\n            >\n              {summary}\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nimport { FiDownload, FiBookOpen, FiLoader, FiShare2, FiCopy, FiCheck } from 'react-icons/fi';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface ResearchReportRendererProps {\n  content: string;\n  title?: string;\n  isStreaming?: boolean;\n}\n\n/**\n * Research Report Renderer - Displays a detailed research report with proper formatting\n *\n * Features:\n * - Elegant markdown rendering with document styling\n * - Download capability for saving reports\n * - Animated indicators for streaming content\n * - Smooth transitions for content updates\n * - Auto-scrolling during streaming updates\n */\nexport const ResearchReportRenderer: React.FC<ResearchReportRendererProps> = ({\n  content,\n  title = 'Research Report',\n  isStreaming = false,\n}) => {\n  const [scrollToBottom, setScrollToBottom] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  // 处理内容格式化，确保始终是字符串\n  const formattedContent = React.useMemo(() => {\n    if (typeof content === 'string') {\n      return content;\n    }\n\n    // 如果不是字符串，尝试转换为 JSON 字符串\n    try {\n      return JSON.stringify(content, null, 2);\n    } catch (e) {\n      return String(content);\n    }\n  }, [content]);\n\n  // Auto-scroll to bottom when streaming content\n  useEffect(() => {\n    if (isStreaming && scrollToBottom && contentRef.current) {\n      contentRef.current.scrollTop = contentRef.current.scrollHeight;\n    }\n  }, [content, isStreaming, scrollToBottom]);\n\n  // Handle content scroll\n  const handleScroll = () => {\n    if (!contentRef.current) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = contentRef.current;\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n\n    setScrollToBottom(isNearBottom);\n  };\n\n  // Handle report download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title.replace(/[^\\w\\s-]/g, '')}.md`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle copy content\n  const handleCopy = () => {\n    navigator.clipboard.writeText(formattedContent);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\">\n      {/* Report header */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center border border-accent-100/50 dark:border-accent-800/30 text-accent-600 dark:text-accent-400 shadow-sm\">\n            <FiBookOpen size={18} />\n          </div>\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center\">\n              {isStreaming ? (\n                <>\n                  <FiLoader className=\"mr-1.5 animate-spin\" size={10} />\n                  Generating report...\n                </>\n              ) : (\n                'Research Report'\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={20} className=\"text-green-500\" /> : <FiCopy size={20} />}\n          </motion.button>\n\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Download Report\"\n          >\n            <FiDownload size={20} />\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Report content */}\n      <div\n        ref={contentRef}\n        className=\"flex-1 overflow-auto workspace-scrollbar bg-white dark:bg-gray-800 \"\n        onScroll={handleScroll}\n      >\n        <div className=\"p-8\">\n          <div className=\"research-report prose prose-slate lg:prose-lg dark:prose-invert max-w-none\">\n            <MarkdownRenderer content={formattedContent} />\n          </div>\n\n          {/* Loading indicator for streaming content */}\n          {isStreaming && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5 }}\n              className=\"flex items-center justify-center py-6 mt-4 text-accent-500 dark:text-accent-400\"\n            >\n              <div className=\"flex items-center gap-3 px-4 py-2 bg-accent-50/70 dark:bg-accent-900/20 rounded-full border border-accent-100/60 dark:border-accent-800/30\">\n                <FiLoader className=\"animate-spin\" size={16} />\n                <span className=\"text-sm font-medium\">Generating report...</span>\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiPlay, FiCode, FiTerminal } from 'react-icons/fi';\nimport { CodeEditor } from '@/sdk/code-editor';\n\ninterface ScriptResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Custom script highlighting function for command display\n */\nconst highlightCommand = (command: string) => {\n  return (\n    <div className=\"command-line whitespace-nowrap\">\n      <span className=\"text-cyan-400 font-bold\">{command}</span>\n    </div>\n  );\n};\n\n/**\n * Language to file extension mapping\n */\nconst LANGUAGE_EXTENSIONS: Record<string, string> = {\n  javascript: 'js',\n  typescript: 'ts',\n  python: 'py',\n};\n\n/**\n * Get language identifier for syntax highlighting\n */\nconst getLanguageFromInterpreter = (interpreter: string): string => {\n  const languageMap: Record<string, string> = {\n    python: 'python',\n    python3: 'python',\n    node: 'javascript',\n    nodejs: 'javascript',\n    bash: 'bash',\n    sh: 'bash',\n    ruby: 'ruby',\n    php: 'php',\n    java: 'java',\n    go: 'go',\n    rust: 'rust',\n    cpp: 'cpp',\n    'c++': 'cpp',\n    gcc: 'c',\n    clang: 'c',\n  };\n\n  return languageMap[interpreter.toLowerCase()] || 'text';\n};\n\n/**\n * Renders script execution results with professional code editor and terminal output\n */\nexport const ScriptResultRenderer: React.FC<ScriptResultRendererProps> = ({ part }) => {\n  const { script, interpreter = 'python', cwd, stdout, stderr, exitCode } = part;\n  const [displayMode, setDisplayMode] = useState<'both' | 'script' | 'execution'>('both');\n\n  if (!script && !stdout && !stderr) {\n    return <div className=\"text-gray-500 italic\">Script result is empty</div>;\n  }\n\n  // Exit code styling\n  const isError = exitCode !== 0 && exitCode !== undefined;\n  const hasOutput = stdout || stderr;\n\n  // Get language for syntax highlighting\n  const language = getLanguageFromInterpreter(interpreter);\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Display mode toggle */}\n      <div className=\"flex justify-center\">\n        <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n          <button\n            type=\"button\"\n            onClick={() => setDisplayMode('both')}\n            className={`px-3 py-1.5 text-xs font-medium ${\n              displayMode === 'both'\n                ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n                : 'bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n            } rounded-l-lg border border-gray-200 dark:border-gray-600`}\n          >\n            <div className=\"flex items-center\">\n              <FiCode size={12} className=\"mr-1.5\" />\n              <span>Both</span>\n            </div>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setDisplayMode('script')}\n            className={`px-3 py-1.5 text-xs font-medium ${\n              displayMode === 'script'\n                ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n                : 'bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n            } border-t border-b border-gray-200 dark:border-gray-600`}\n          >\n            <div className=\"flex items-center\">\n              <FiCode size={12} className=\"mr-1.5\" />\n              <span>Script</span>\n            </div>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setDisplayMode('execution')}\n            className={`px-3 py-1.5 text-xs font-medium ${\n              displayMode === 'execution'\n                ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n                : 'bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n            } rounded-r-lg border border-gray-200 dark:border-gray-600 border-l-0`}\n          >\n            <div className=\"flex items-center\">\n              <FiTerminal size={12} className=\"mr-1.5\" />\n              <span>Execution</span>\n            </div>\n          </button>\n        </div>\n      </div>\n\n      {/* Script content with professional code editor */}\n      {(displayMode === 'both' || displayMode === 'script') && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-2\"\n        >\n          {/* Professional code editor */}\n          <CodeEditor\n            code={script || ''}\n            language={language}\n            fileName={`script.${LANGUAGE_EXTENSIONS[language]}`}\n            showLineNumbers={true}\n            maxHeight={displayMode === 'both' ? '40vh' : '80vh'}\n          />\n        </motion.div>\n      )}\n\n      {/* Execution results with terminal interface */}\n      {(displayMode === 'both' || displayMode === 'execution') && hasOutput && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: displayMode === 'both' ? 0.1 : 0 }}\n        >\n          <div className=\"rounded-lg overflow-hidden border border-gray-900 shadow-[0_8px_24px_rgba(0,0,0,0.3)]\">\n            {/* Terminal title bar */}\n            <div className=\"bg-[#111111] px-3 py-1.5 border-b border-gray-900 flex items-center\">\n              <div className=\"flex space-x-1.5 mr-3\">\n                <div className=\"w-3 h-3 rounded-full bg-red-500 shadow-sm\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-yellow-500 shadow-sm\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-green-500 shadow-sm\"></div>\n              </div>\n              <div className=\"text-gray-400 text-xs font-medium mx-auto flex items-center gap-2\">\n                <FiPlay size={10} />\n                <span>Script Execution - {interpreter}</span>\n                {exitCode !== undefined && (\n                  <span\n                    className={`ml-2 px-1.5 py-0.5 rounded text-[10px] ${\n                      isError\n                        ? 'bg-red-900/30 text-red-400 border border-red-800/50'\n                        : 'bg-green-900/30 text-green-400 border border-green-800/50'\n                    }`}\n                  >\n                    exit {exitCode}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Terminal content area */}\n            <div className=\"bg-black p-3 font-mono text-sm terminal-content overflow-auto max-h-[80vh]\">\n              <div className=\"space-y-1\">\n                {/* Command section */}\n                <div className=\"flex items-start\">\n                  <span className=\"select-none text-green-400 mr-2 font-bold\">$</span>\n                  <div className=\"flex-1 text-gray-200\">\n                    {highlightCommand(`${interpreter} << 'EOF'`)}\n                  </div>\n                </div>\n\n                {/* Output section */}\n                {stdout && (\n                  <div className=\"ml-4 mt-2\">\n                    <pre className=\"text-gray-200 whitespace-pre-wrap leading-relaxed\">\n                      {stdout}\n                    </pre>\n                  </div>\n                )}\n\n                {/* Error output */}\n                {stderr && (\n                  <div className=\"ml-4 mt-2\">\n                    <pre className=\"text-red-400 whitespace-pre-wrap leading-relaxed\">{stderr}</pre>\n                  </div>\n                )}\n\n                {/* End marker */}\n                <div className=\"flex items-start mt-2\">\n                  <span className=\"select-none text-green-400 mr-2 font-bold\">$</span>\n                  <span className=\"text-gray-500 text-xs\">EOF</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","// /multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/SearchResultRenderer.tsx\nimport React from 'react';\nimport { ToolResultContentPart } from '../types';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink, FiSearch, FiInfo, FiGlobe } from 'react-icons/fi';\n\ninterface SearchResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders search results with refined visual design\n *\n * Design improvements:\n * - Clean, minimalist card layout with subtle animations\n * - Consistent typography with proper hierarchy\n * - Refined spacing and subtle borders\n * - Simplified URL display\n * - Elegant interaction feedback\n * - Support for structured web_search results\n */\nexport const SearchResultRenderer: React.FC<SearchResultRendererProps> = ({ part }) => {\n  const { results, query } = part;\n\n  if (!results || !Array.isArray(results)) {\n    return <div className=\"text-gray-500 italic\">Search results missing</div>;\n  }\n\n  return (\n    <div className=\"space-y-5\">\n      {/* Search query section with minimal styling */}\n      {query && (\n        <div className=\"mb-5\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-10 h-10 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/50 flex items-center justify-center mr-4 text-gray-600 dark:text-gray-400\">\n              <FiSearch size={20} />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-medium text-gray-800 dark:text-gray-200\">\n                Search Results\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {results.length} results found for your query\n              </p>\n            </div>\n          </div>\n\n          <div className=\"bg-[#f9fafb] dark:bg-slate-800/60 rounded-xl px-4 py-3 text-sm text-gray-800 dark:text-gray-200 border border-gray-200/70 dark:border-gray-700/50\">\n            <div className=\"flex items-center\">\n              <FiSearch className=\"text-gray-500 dark:text-gray-400 mr-2\" size={14} />\n              <span>{query}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No results state with simplified design */}\n      {results.length === 0 && (\n        <div className=\"bg-[#f9fafb] dark:bg-slate-800/60 rounded-xl p-5 text-center border border-gray-200/70 dark:border-gray-700/50\">\n          <div className=\"w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center mx-auto mb-3\">\n            <FiInfo className=\"text-gray-400\" size={24} />\n          </div>\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            No search results found\n          </h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 max-w-md mx-auto\">\n            Try using different search terms or broaden your query.\n          </p>\n        </div>\n      )}\n\n      {/* Results list with refined card design */}\n      <div className=\"space-y-4\">\n        {results.map((result, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: index * 0.05 }}\n            whileHover={{ y: -2 }}\n            className=\"group\"\n          >\n            {/* Simplified result card with minimal styling */}\n            <div className=\"bg-[#f9fafb] dark:bg-slate-800/60 rounded-xl border border-gray-200/70 dark:border-gray-700/50 overflow-hidden transition-all duration-200 hover:border-gray-300/70 dark:hover:border-gray-600/50\">\n              <div className=\"p-4\">\n                {/* Title and link with improved layout */}\n                <div className=\"flex items-start\">\n                  <div className=\"min-w-0 flex-1\">\n                    {/* Title with subtle external link icon */}\n                    <a\n                      href={result.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"group/link\"\n                    >\n                      <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors\">\n                        <span className=\"mr-2\">\n                          {index + 1}. {result.title}\n                        </span>\n                        <FiExternalLink\n                          className=\"text-gray-400 dark:text-gray-500 opacity-0 group-hover/link:opacity-100 transition-opacity duration-200\"\n                          size={14}\n                        />\n                      </h3>\n                    </a>\n\n                    {/* URL with simplified display */}\n                    <div className=\"mb-3\">\n                      <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                        <FiGlobe size={12} className=\"mr-1.5\" />\n                        <span className=\"truncate\">{result.url}</span>\n                      </div>\n                    </div>\n\n                    {/* Snippet with clean typography */}\n                    <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-300 leading-relaxed\">\n                      {result.snippet}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ImageRenderer } from './ImageRenderer';\nimport { LinkRenderer } from './LinkRenderer';\nimport { SearchResultRenderer } from './SearchResultRenderer';\nimport { CommandResultRenderer } from './CommandResultRenderer';\nimport { ScriptResultRenderer } from './ScriptResultRenderer';\nimport { BrowserResultRenderer } from './BrowserResultRenderer';\nimport { BrowserControlRenderer } from './BrowserControlRenderer';\nimport { PlanViewerRenderer } from './PlanViewerRenderer';\nimport { ResearchReportRenderer } from './ResearchReportRenderer';\nimport { GenericResultRenderer } from './generic/GenericResultRenderer';\nimport { DeliverableRenderer } from './DeliverableRenderer';\nimport { ToolResultContentPart } from '../types';\n\n/**\n * Registry of content part renderers\n * Maps content types to their renderer components\n *\n * Design pattern: Component Registry pattern - allows dynamic registration of\n * renderers for different content types without modifying the core renderer\n */\nconst CONTENT_RENDERERS: Record<\n  string,\n  React.FC<{ part: ToolResultContentPart; onAction?: (action: string, data: any) => void }>\n> = {\n  image: ImageRenderer,\n  link: LinkRenderer,\n  search_result: SearchResultRenderer,\n  command_result: CommandResultRenderer,\n  script_result: ScriptResultRenderer,\n  browser_result: BrowserResultRenderer,\n  browser_control: BrowserControlRenderer,\n  plan: PlanViewerRenderer,\n  research_report: ResearchReportRenderer,\n  json: GenericResultRenderer,\n  deliverable: DeliverableRenderer,\n  file_result: GenericResultRenderer,\n};\n\ninterface ToolResultRendererProps {\n  /**\n   * Array of content parts to render\n   */\n  content: ToolResultContentPart[];\n\n  /**\n   * Optional handler for interactive actions\n   */\n  onAction?: (action: string, data: any) => void;\n\n  /**\n   * Optional className for the container\n   */\n  className?: string;\n}\n\n/**\n * Renders tool result content parts using the appropriate renderer for each part\n *\n * This component acts as a router that delegates rendering to specialized components\n * based on the content type, making it easily extensible to new content types.\n *\n * Improvements:\n * - Special handling for browser_get_markdown content\n * - Uses browser shell for browser-related tool results\n * - Consistent styling across all tool result types\n * - Intelligent generic renderer for unknown formats\n */\nexport const ToolResultRenderer: React.FC<ToolResultRendererProps> = ({\n  content,\n  onAction,\n  className = '',\n}) => {\n  if (!content || content.length === 0) {\n    return (\n      <div className=\"p-4 text-gray-500 dark:text-gray-400 text-sm italic\">\n        No content to display\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {content.map((part, index) => {\n        if (part.type === 'json') {\n          return (\n            <div key={`json-${part.name || ''}-${index}`} className=\"tool-result-part\">\n              <GenericResultRenderer part={part} onAction={onAction} />\n            </div>\n          );\n        }\n\n        const Renderer = CONTENT_RENDERERS[part.type] || GenericResultRenderer;\n\n        return (\n          <div key={`${part.type}-${part.name || ''}-${index}`} className=\"tool-result-part\">\n            <Renderer part={part} onAction={onAction} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\n/**\n * Register a custom renderer for a specific content type\n * This allows extending the system with new renderers without modifying this file\n */\nexport function registerRenderer(\n  contentType: string,\n  renderer: React.FC<{\n    part: ToolResultContentPart;\n    onAction?: (action: string, data: any) => void;\n  }>,\n): void {\n  CONTENT_RENDERERS[contentType] = renderer;\n}\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nimport { ToolResultContentPart } from '../../types';\nimport { DisplayMode, AnalyzedResult } from './types';\nimport { analyzeResult, extractImagesFromContent, isPossibleMarkdown } from './utils';\nimport { BrowserShell } from '../BrowserShell';\nimport {\n  ImageContent,\n  MessageContent,\n  JsonContent,\n  OperationHeader,\n  StatusIndicator,\n  FileResultRenderer,\n  ToggleSwitch,\n} from './components';\nimport { formatKey, formatValue } from './utils';\n\ninterface GenericResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * 包装公共容器逻辑的卡片组件\n */\nconst ResultCard: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <div className=\"w-full\">\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden w-full transform transition-all duration-300 hover:shadow-md\">\n      {children}\n    </div>\n  </div>\n);\n\n/**\n * GenericResultRenderer - 智能分析和渲染任何格式的工具结果\n */\nexport const GenericResultRenderer: React.FC<GenericResultRendererProps> = ({ part, onAction }) => {\n  // 状态管理\n  const [displayMode, setDisplayMode] = useState<DisplayMode>('source');\n\n  // 首先检查是否是文件结果，如果是，直接使用专门的渲染器\n  if (part.type === 'file_result') {\n    return <FileResultRenderer part={part} onAction={onAction} />;\n  }\n\n  // 统一内容处理逻辑\n  const content = React.useMemo(() => {\n    if (Array.isArray(part.data)) {\n      const textContent = part.data.find((item) => item.type === 'text');\n      if (textContent?.text) return textContent.text;\n    }\n    return part.text || part.data || {};\n  }, [part.data, part.text]);\n\n  // 提取图像URL并分析内容类型\n  const { images, hasImages, textContent } = React.useMemo(\n    () =>\n      typeof content === 'string'\n        ? extractImagesFromContent(content)\n        : { images: [], hasImages: false, textContent: content },\n    [content],\n  );\n\n  // 特殊内容类型标记\n  const isPureImageUrl = hasImages && images.length === 1 && textContent === '';\n  const hasScreenshot = part._extra && part._extra.currentScreenshot;\n\n  // 内容解析与分析\n  const parsedContent = React.useMemo(() => {\n    if (typeof content === 'string' && !isPureImageUrl) {\n      try {\n        return JSON.parse(content);\n      } catch (e) {\n        return content;\n      }\n    }\n    return content;\n  }, [content, isPureImageUrl]);\n\n  // 结果信息分析\n  const resultInfo = React.useMemo(() => {\n    const result = analyzeResult(parsedContent, part.name);\n\n    // 特殊处理：导航URL提取\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const splits = content.split('\\n');\n      const url = splits[0].replace('Navigated to ', '').trim();\n      return {\n        ...result,\n        operation: 'navigate' as const,\n        url,\n        type: 'success' as const,\n        title: 'Navigation Successful',\n        details: splits.slice(1),\n      };\n    }\n\n    return result;\n  }, [parsedContent, part.name, content]);\n\n  // 内容类型检测\n  const isMarkdownContent = React.useMemo(() => {\n    return (\n      part.name?.includes('markdown') ||\n      part.name?.includes('browser_get_markdown') ||\n      (typeof content === 'string' && isPossibleMarkdown(content))\n    );\n  }, [part.name, content]);\n\n  // UI控制标记\n  const shouldOfferToggle =\n    isMarkdownContent && typeof resultInfo.message === 'string' && resultInfo.message.length > 100;\n  const isShortString =\n    typeof resultInfo.message === 'string' && resultInfo.message.length < 80 && !isMarkdownContent;\n\n  // 纯图像URL渲染\n  if (isPureImageUrl) {\n    return (\n      <ResultCard>\n        <ImageContent imageUrl={images[0]} name={part.name} />\n      </ResultCard>\n    );\n  }\n\n  // 截图渲染\n  if (hasScreenshot) {\n    return (\n      <ResultCard>\n        <BrowserShell title={resultInfo.title} url={resultInfo.url}>\n          <img\n            src={part._extra.currentScreenshot}\n            alt=\"Browser Screenshot\"\n            className=\"w-full h-auto object-contain\"\n          />\n        </BrowserShell>\n      </ResultCard>\n    );\n  }\n\n  // 主要内容渲染\n  return (\n    <ResultCard>\n      <div className=\"p-5 relative\">\n        {/* 渲染嵌入的图像（如果存在） */}\n        {hasImages && images.length > 0 && (\n          <div className=\"mb-4 space-y-4\">\n            {images.map((imageUrl, index) => (\n              <ImageContent key={index} imageUrl={imageUrl} alt={`Embedded image ${index + 1}`} />\n            ))}\n          </div>\n        )}\n\n        {/* markdown 内容的切换按钮 */}\n        {shouldOfferToggle && (\n          <ToggleSwitch\n            leftLabel=\"Source\"\n            rightLabel=\"Rendered\"\n            value={displayMode}\n            onChange={(value) => setDisplayMode(value as DisplayMode)}\n            leftValue=\"source\"\n            rightValue=\"rendered\"\n            className=\"mb-3\"\n          />\n        )}\n\n        {/* 主要消息区域 */}\n        <AnimatePresence mode=\"wait\">\n          {resultInfo.message && (\n            <motion.div\n              key=\"message\"\n              initial={{ opacity: 0, y: 5 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: 0.1 }}\n              className=\"text-gray-700 dark:text-gray-300 text-[12px]\"\n            >\n              {typeof resultInfo.message === 'string' ? (\n                <MessageContent\n                  message={resultInfo.message}\n                  isMarkdown={isMarkdownContent}\n                  displayMode={displayMode}\n                  isShortMessage={isShortString && !hasScreenshot}\n                />\n              ) : (\n                <JsonContent data={resultInfo.message} />\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* 导航操作信息 */}\n        <OperationHeader\n          title={resultInfo.title}\n          url={resultInfo.url}\n          operationType={resultInfo.operation}\n          resultType={resultInfo.type}\n        />\n\n        {/* 详情展示 */}\n        {resultInfo.details && Object.keys(resultInfo.details).length > 0 && (\n          <div className=\"grid gap-2\">\n            {Object.entries(resultInfo.details).map(([key, value]) => (\n              <motion.div\n                key={key}\n                initial={{ opacity: 0, y: 5 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.2 }}\n                className=\"flex items-start\"\n              >\n                {!isNaN(Number(key)) ? null : (\n                  <div className=\"text-sm font-light text-gray-500 dark:text-gray-400 w-[auto] flex-shrink-0\">\n                    {formatKey(key)} &nbsp;\n                  </div>\n                )}\n                <div className=\"text-sm text-gray-700 dark:text-gray-300\">{formatValue(value)}</div>\n              </motion.div>\n            ))}\n          </div>\n        )}\n\n        {/* 空状态处理 */}\n        {!resultInfo.message &&\n          !resultInfo.url &&\n          (!resultInfo.details || Object.keys(resultInfo.details).length === 0) && (\n            <StatusIndicator\n              type={resultInfo.type}\n              operation={resultInfo.operation}\n              details={resultInfo.details}\n            />\n          )}\n      </div>\n    </ResultCard>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMaximize } from 'react-icons/fi';\nimport { ToolResultContentPart } from '../../../types';\nimport { MessageContent } from './MessageContent';\nimport { ToggleSwitch } from './ToggleSwitch';\nimport { DisplayMode } from '../types';\nimport { CodeEditor } from '@/sdk/code-editor';\n\ninterface FileResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\nexport const FileResultRenderer: React.FC<FileResultRendererProps> = ({ part, onAction }) => {\n  const [htmlPreviewMode, setHtmlPreviewMode] = useState<'code' | 'preview'>('code');\n  const [displayMode, setDisplayMode] = useState<DisplayMode>('rendered');\n\n  // If not a file result, don't render\n  if (part.type !== 'file_result') return null;\n\n  // File metadata parsing\n  const fileName = part.path ? part.path.split('/').pop() || part.path : '';\n  const fileExtension = fileName ? fileName.split('.').pop()?.toLowerCase() || '' : '';\n\n  const fileType = determineFileType(fileExtension);\n  const isHtmlFile = fileExtension === 'html' || fileExtension === 'htm';\n  const isImageFile = ['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp', 'bmp'].includes(fileExtension);\n  const isMarkdownFile = ['md', 'markdown'].includes(fileExtension);\n  const isCodeFile = fileType === 'code';\n\n  const approximateSize =\n    typeof part.content === 'string' ? formatBytes(part.content.length) : 'Unknown size';\n\n  // Check if toggle should be offered\n  const shouldOfferToggle =\n    isMarkdownFile && typeof part.content === 'string' && part.content.length > 100;\n\n  // Get language for code highlighting\n  const getLanguage = (): string => {\n    const langMap: Record<string, string> = {\n      js: 'javascript',\n      jsx: 'jsx',\n      ts: 'typescript',\n      tsx: 'tsx',\n      py: 'python',\n      rb: 'ruby',\n      java: 'java',\n      html: 'html',\n      css: 'css',\n      json: 'json',\n      yaml: 'yaml',\n      yml: 'yaml',\n      md: 'markdown',\n      xml: 'xml',\n      sh: 'bash',\n      bash: 'bash',\n      go: 'go',\n      c: 'c',\n      cpp: 'cpp',\n      rs: 'rust',\n      php: 'php',\n      sql: 'sql',\n      scss: 'scss',\n      less: 'less',\n      vue: 'vue',\n      svelte: 'svelte',\n    };\n\n    return langMap[fileExtension] || fileExtension || 'text';\n  };\n\n  // Format file size\n  function formatBytes(bytes: number): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  // Handle file download\n  const handleDownload = () => {\n    const blob = new Blob([part.content], { type: isHtmlFile ? 'text/html' : 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName || 'download';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle fullscreen preview\n  const handleFullscreen = () => {\n    if (onAction) {\n      onAction('fullscreen', {\n        content: part.content,\n        fileName,\n        filePath: part.path,\n        displayMode,\n        isMarkdown: isMarkdownFile,\n      });\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Content preview area */}\n      <div className=\"overflow-hidden\">\n        {/* HTML file toggle */}\n        {isHtmlFile && (\n          <ToggleSwitch\n            leftLabel=\"Source Code\"\n            rightLabel=\"Preview\"\n            value={htmlPreviewMode}\n            onChange={(value) => setHtmlPreviewMode(value as 'code' | 'preview')}\n            leftValue=\"code\"\n            rightValue=\"preview\"\n            className=\"border-b border-gray-100/60 dark:border-gray-700/30 py-2\"\n          />\n        )}\n\n        {/* Markdown file toggle and fullscreen button */}\n        {isMarkdownFile && shouldOfferToggle && (\n          <div className=\"px-4 py-4 flex items-center justify-between\">\n            <div></div>\n            <ToggleSwitch\n              leftLabel=\"Source\"\n              rightLabel=\"Rendered\"\n              value={displayMode}\n              onChange={(value) => setDisplayMode(value as DisplayMode)}\n              leftValue=\"source\"\n              rightValue=\"rendered\"\n            />\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={handleFullscreen}\n              className=\"ml-3 p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n              title=\"Fullscreen preview\"\n            >\n              <FiMaximize size={16} />\n            </motion.button>\n          </div>\n        )}\n\n        {/* File content display */}\n        <div className=\"overflow-hidden\">\n          {isHtmlFile && htmlPreviewMode === 'preview' ? (\n            <div className=\"border border-gray-200/50 dark:border-gray-700/30 rounded-lg overflow-hidden bg-white dark:bg-gray-900/30 m-4\">\n              <iframe\n                srcDoc={part.content}\n                className=\"w-full border-0 min-h-[100vh]\"\n                title=\"HTML Preview\"\n                sandbox=\"allow-scripts allow-same-origin\"\n              />\n            </div>\n          ) : isImageFile ? (\n            <div className=\"text-center p-4\">\n              <img\n                src={`data:image/${fileExtension};base64,${part.content}`}\n                alt={part.path}\n                className=\"max-w-full mx-auto border border-gray-200/50 dark:border-gray-700/30 rounded-lg\"\n              />\n            </div>\n          ) : isCodeFile || (isHtmlFile && htmlPreviewMode === 'code') ? (\n            <div className=\"p-0\">\n              <CodeEditor\n                code={part.content}\n                language={getLanguage()}\n                fileName={fileName}\n                filePath={part.path}\n                fileSize={approximateSize}\n                showLineNumbers={true}\n                maxHeight=\"75vh\"\n                className=\"rounded-none border-0\"\n                onCopy={handleDownload}\n              />\n            </div>\n          ) : isMarkdownFile ? (\n            displayMode === 'source' ? (\n              <div className=\"p-0\">\n                <CodeEditor\n                  code={part.content}\n                  language=\"markdown\"\n                  fileName={fileName}\n                  filePath={part.path}\n                  fileSize={approximateSize}\n                  showLineNumbers={true}\n                  maxHeight=\"67vh\"\n                  className=\"rounded-none border-0\"\n                />\n              </div>\n            ) : (\n              <div className=\"prose dark:prose-invert prose-sm max-w-none p-8\">\n                <MessageContent\n                  message={part.content}\n                  isMarkdown={true}\n                  displayMode={displayMode}\n                  isShortMessage={false}\n                />\n              </div>\n            )\n          ) : (\n            <div className=\"p-0\">\n              <CodeEditor\n                code={part.content}\n                language=\"text\"\n                fileName={fileName}\n                filePath={part.path}\n                fileSize={approximateSize}\n                showLineNumbers={true}\n                maxHeight=\"75vh\"\n                className=\"rounded-none border-0\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function for file type determination\nfunction determineFileType(extension: string): 'code' | 'document' | 'image' | 'other' {\n  if (\n    [\n      'js',\n      'jsx',\n      'ts',\n      'tsx',\n      'py',\n      'java',\n      'c',\n      'cpp',\n      'php',\n      'html',\n      'css',\n      'json',\n      'xml',\n    ].includes(extension)\n  ) {\n    return 'code';\n  }\n  if (['md', 'txt', 'docx', 'pdf', 'rtf', 'markdown'].includes(extension)) {\n    return 'document';\n  }\n  if (['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp', 'bmp'].includes(extension)) {\n    return 'image';\n  }\n  return 'other';\n}\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiArrowRight } from 'react-icons/fi';\n\ninterface ImageContentProps {\n  imageUrl: string;\n  alt?: string;\n  name?: string;\n}\n\nexport const ImageContent: React.FC<ImageContentProps> = ({ imageUrl, alt = 'Image', name }) => {\n  return (\n    <div className=\"relative group p-4\">\n      <img\n        src={imageUrl}\n        alt={alt}\n        className=\"max-w-full h-auto mx-auto rounded-lg border border-gray-200/50 dark:border-gray-700/30\"\n      />\n      <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-2\">\n        <motion.a\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.95 }}\n          href={imageUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n          title=\"Open in new tab\"\n        >\n          <FiArrowRight size={16} />\n        </motion.a>\n      </div>\n      {name && name !== 'JSON_DATA' && (\n        <div className=\"text-center mt-2 text-sm text-gray-500 dark:text-gray-400\">{name}</div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface JsonContentProps {\n  data: any;\n}\n\nexport const JsonContent: React.FC<JsonContentProps> = ({ data }) => {\n  const formattedJson = JSON.stringify(data, null, 2);\n\n  return (\n    <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-3 rounded font-mono overflow-auto\">\n      {formattedJson}\n    </pre>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport { wrapMarkdown } from '@/common/utils/markdown';\nimport { DisplayMode } from '../types';\n\ninterface MessageContentProps {\n  message: string;\n  isMarkdown?: boolean;\n  displayMode?: DisplayMode;\n  isShortMessage?: boolean;\n}\n\nexport const MessageContent: React.FC<MessageContentProps> = ({\n  message,\n  isMarkdown = false,\n  displayMode = 'source',\n  isShortMessage = false,\n}) => {\n  if (isShortMessage) {\n    return (\n      <motion.div\n        initial={{ scale: 0.9 }}\n        animate={{ scale: 1 }}\n        transition={{\n          duration: 0.5,\n          ease: 'easeOut',\n        }}\n        className=\"text-center bg-gradient-to-r from-gray-700 to-gray-900 dark:from-blue-400 dark:to-teal-400 bg-clip-text text-transparent\"\n        style={{\n          fontSize: '30px',\n          height: '120px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontWeight: 700,\n          WebkitBackgroundClip: 'text',\n          padding: '3rem',\n          borderRadius: '8px',\n        }}\n      >\n        {message}\n      </motion.div>\n    );\n  }\n\n  if (isMarkdown && displayMode === 'source') {\n    return <MarkdownRenderer content={wrapMarkdown(message)} />;\n  }\n\n  return (\n    <MarkdownRenderer className=\"prose dark:prose-invert prose-sm max-w-none\" content={message} />\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCornerUpRight, FiGlobe } from 'react-icons/fi';\nimport { ResultType, OperationType } from '../types';\n\ninterface OperationHeaderProps {\n  title: string;\n  url?: string;\n  operationType?: OperationType;\n  resultType: ResultType;\n}\n\nexport const OperationHeader: React.FC<OperationHeaderProps> = ({\n  title,\n  url,\n  operationType,\n  resultType,\n}) => {\n  if (!operationType || operationType !== 'navigate' || resultType !== 'success') {\n    return null;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay: 0.2 }}\n      className=\"mb-4\"\n    >\n      <div className=\"flex items-center mt-1\">\n        <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n          <FiCornerUpRight className=\"text-accent-500 dark:text-accent-400\" size={16} />\n        </div>\n        <div className=\"ml-3\">\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">Navigated to</div>\n          <div className=\"font-medium text-accent-600 dark:text-accent-400 flex items-center\">\n            {url}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"my-5 px-3\">\n        <div className=\"relative h-0.5 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden\">\n          <motion.div\n            initial={{ width: 0, x: 0 }}\n            animate={{ width: '100%', x: ['0%', '100%'] }}\n            transition={{\n              duration: 1.5,\n              width: { duration: 0 },\n              x: { duration: 1.5, ease: 'easeInOut' },\n            }}\n            className=\"absolute top-0 left-0 h-full bg-accent-500 dark:bg-accent-400 rounded-full\"\n            style={{ width: '30%' }}\n          />\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCheck, FiInfo } from 'react-icons/fi';\nimport { ResultType, OperationType } from '../types';\nimport { getOperationDescription } from '../utils';\n\ninterface StatusIndicatorProps {\n  type: ResultType;\n  operation?: OperationType;\n  details?: Record<string, any>;\n}\n\nexport const StatusIndicator: React.FC<StatusIndicatorProps> = ({\n  type,\n  operation,\n  details = {},\n}) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center py-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{\n          duration: 0.5,\n          delay: 0.2,\n          type: 'spring',\n          stiffness: 100,\n        }}\n        className=\"flex flex-col items-center\"\n      >\n        {type === 'success' ? (\n          <>\n            <div className=\"w-12 h-12 mb-3 rounded-full bg-green-50 dark:bg-green-900/20 flex items-center justify-center text-green-500 dark:text-green-400\">\n              <motion.div\n                animate={{\n                  scale: [1, 1.15, 1],\n                }}\n                transition={{\n                  duration: 1,\n                  repeat: Infinity,\n                  repeatType: 'reverse',\n                  repeatDelay: 1,\n                }}\n              >\n                <FiCheck size={24} />\n              </motion.div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                The operation completed successfully\n              </div>\n              {operation && (\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {getOperationDescription(operation, { type, details })}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"w-12 h-12 mb-3 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center text-gray-400 dark:text-gray-500\">\n              <FiInfo size={24} />\n            </div>\n            <div className=\"text-center text-gray-500 dark:text-gray-400\">\n              {type === 'empty' ? 'No content available' : 'Operation completed'}\n            </div>\n          </>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FiCode, FiEye } from 'react-icons/fi';\n\ninterface ToggleSwitchProps {\n  leftLabel: string;\n  rightLabel: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n  leftValue: string;\n  rightValue: string;\n  className?: string;\n}\n\nexport const ToggleSwitch: React.FC<ToggleSwitchProps> = ({\n  leftLabel,\n  rightLabel,\n  leftIcon = <FiCode size={12} />,\n  rightIcon = <FiEye size={12} />,\n  value,\n  onChange,\n  leftValue,\n  rightValue,\n  className = '',\n}) => {\n  return (\n    <div className={`flex justify-center ${className}`}>\n      <div className=\"inline-flex rounded-md\" role=\"group\">\n        <button\n          type=\"button\"\n          onClick={() => onChange(leftValue)}\n          className={`px-3 py-1.5 text-xs font-medium ${\n            value === leftValue\n              ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n              : 'bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n          } rounded-l-lg border border-gray-200 dark:border-gray-600`}\n        >\n          <div className=\"flex items-center\">\n            {leftIcon && <span className=\"mr-1.5\">{leftIcon}</span>}\n            <span>{leftLabel}</span>\n          </div>\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => onChange(rightValue)}\n          className={`px-3 py-1.5 text-xs font-medium ${\n            value === rightValue\n              ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n              : 'bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700/30'\n          } rounded-r-lg border border-gray-200 dark:border-gray-600 border-l-0`}\n        >\n          <div className=\"flex items-center\">\n            {rightIcon && <span className=\"mr-1.5\">{rightIcon}</span>}\n            <span>{rightLabel}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n};\n","export * from './ImageContent';\nexport * from './MessageContent';\nexport * from './JsonContent';\nexport * from './OperationHeader';\nexport * from './StatusIndicator';\nexport * from './FileResultRenderer';\nexport * from './ToggleSwitch';\n","import React from 'react';\nimport {\n  FiCheck,\n  FiX,\n  FiAlertCircle,\n  FiInfo,\n  FiRefreshCw,\n  FiGlobe,\n  FiNavigation,\n  FiMousePointer,\n  FiLayers,\n  FiFile,\n  FiFileText,\n  FiImage,\n  FiCode,\n  FiDatabase,\n} from 'react-icons/fi';\nimport { AnalyzedResult, ResultType, OperationType } from './types';\n\n/**\n * Determines if a URL points to an image by checking file extension or patterns\n *\n * @param url - The URL to check\n * @returns Boolean indicating if the URL is likely an image\n */\nexport function isImageUrl(url: string): boolean {\n  // Check for common image file extensions\n  const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.svg', '.webp', '.bmp', '.tiff'];\n  const hasImageExtension = imageExtensions.some((ext) => url.toLowerCase().endsWith(ext));\n\n  // Check for image-specific URL patterns\n  const imageUrlPatterns = [\n    /\\/img\\//i,\n    /\\/image\\//i,\n    /\\/afts\\/img\\//i,\n    /\\.cdninstagram\\.com/i,\n    /cloudinary\\.com/i,\n    /data:image\\//i,\n  ];\n  const matchesImagePattern = imageUrlPatterns.some((pattern) => pattern.test(url));\n\n  // Handle URLs with query parameters that might hide the extension\n  const hasImageParam = /[?&](img|image|type=image)/i.test(url);\n\n  return hasImageExtension || matchesImagePattern || hasImageParam;\n}\n\n/**\n * Extracts image URLs from mixed content\n *\n * @param content - String that may contain image URLs\n * @returns Object with extracted image URLs and remaining text\n */\nexport function extractImagesFromContent(content: string): {\n  images: string[];\n  hasImages: boolean;\n  textContent: string;\n} {\n  // Default result\n  const result = {\n    images: [],\n    hasImages: false,\n    textContent: content,\n  };\n\n  if (!content || typeof content !== 'string') {\n    return result;\n  }\n\n  // Regular expression to match URLs\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  const urls = content.match(urlRegex);\n\n  if (!urls) {\n    return result;\n  }\n\n  // Filter URLs to only include images\n  const imageUrls = urls.filter((url) => isImageUrl(url));\n\n  if (imageUrls.length > 0) {\n    // If there's only one URL and it's the entire content, return it as a pure image\n    if (imageUrls.length === 1 && content.trim() === imageUrls[0].trim()) {\n      return {\n        images: imageUrls,\n        hasImages: true,\n        textContent: '',\n      };\n    }\n\n    // Otherwise, return both images and text content\n    return {\n      images: imageUrls,\n      hasImages: true,\n      textContent: content,\n    };\n  }\n\n  return result;\n}\n\n/**\n * Analyzes tool result content and extracts key information\n *\n * @param content - The raw content from the tool result\n * @param toolName - Optional tool name to help determine operation type\n * @returns Structured analysis of the result\n */\nexport function analyzeResult(content: any, toolName?: string): AnalyzedResult {\n  // Default values\n  const result: AnalyzedResult = {\n    type: 'info',\n    title: 'Operation Result',\n    message: null,\n    details: {},\n  };\n\n  // Try to infer operation type from tool name\n  let operation: OperationType = '';\n  if (toolName) {\n    if (toolName.includes('navigate')) operation = 'navigate';\n    else if (toolName.includes('click')) operation = 'click';\n    else if (toolName.includes('type')) operation = 'type';\n    else if (toolName.includes('scroll')) operation = 'scroll';\n    else if (toolName.includes('browser')) operation = 'browser';\n  }\n\n  // Handle empty content\n  if (!content || (typeof content === 'object' && Object.keys(content).length === 0)) {\n    return { ...result, type: 'empty', title: 'Empty Result', operation };\n  }\n\n  // Handle string content\n  if (typeof content === 'string') {\n    // Detect if this is a navigation success message\n    if (content.includes('Navigated to ')) {\n      const url = content.split('\\n')[0].replace('Navigated to ', '').trim();\n      return {\n        ...result,\n        type: 'success',\n        title: 'Navigation Successful',\n        message: null,\n        details: { url },\n        url,\n        operation: 'navigate',\n      };\n    }\n    return { ...result, message: content, operation };\n  }\n\n  // Handle object content\n  if (typeof content === 'object') {\n    // Special handling for navigation-related results\n    if (content.url) {\n      operation = operation || 'navigate';\n      result.url = content.url;\n    }\n\n    // Detect status field\n    if ('status' in content) {\n      const status = String(content.status).toLowerCase();\n      if (status === 'success' || status === 'ok' || status === 'completed') {\n        result.type = 'success';\n        result.title = 'Success';\n      } else if (status === 'error' || status === 'fail' || status === 'failed') {\n        result.type = 'error';\n        result.title = 'Error';\n      }\n    }\n\n    // Detect message field\n    if ('message' in content) {\n      result.message = String(content.message);\n    } else if ('error' in content) {\n      result.message = String(content.error);\n      result.type = 'error';\n      result.title = 'Error';\n    } else if ('msg' in content) {\n      result.message = String(content.msg);\n    } else if ('content' in content && typeof content.content === 'string') {\n      result.message = content.content;\n    }\n\n    // Extract title\n    if ('title' in content && typeof content.title === 'string' && content.title.trim()) {\n      result.title = content.title;\n    } else if (result.message && result.message.length < 50) {\n      // If message is very short, use it as title\n      result.title = result.message;\n      result.message = null;\n    }\n\n    // Special handling for URL (for browser tool results)\n    let url: string | undefined = undefined;\n    if ('url' in content && typeof content.url === 'string') {\n      url = content.url;\n    }\n\n    // Collect other important fields as details\n    for (const [key, value] of Object.entries(content)) {\n      // Skip already processed fields\n      if (['status', 'message', 'error', 'msg', 'title', 'url'].includes(key)) continue;\n\n      // Special handling for pagination info\n      if (key === 'pagination' && typeof value === 'object') {\n        for (const [pKey, pValue] of Object.entries(value)) {\n          result.details[`pagination.${pKey}`] = pValue;\n        }\n        continue;\n      }\n\n      // Prioritize display of important fields\n      const importantFields = ['name', 'description', 'type', 'value', 'data'];\n      if (importantFields.includes(key)) {\n        result.details = { [key]: value, ...result.details };\n      } else {\n        // Add to details\n        result.details[key] = value;\n      }\n    }\n\n    return { ...result, url, operation };\n  }\n\n  return { ...result, operation };\n}\n\n/**\n * Gets the appropriate status icon based on result type and operation\n *\n * @param type - The result type\n * @param operation - Optional operation type\n * @returns React component for the status icon\n */\nexport function getStatusIcon(type: ResultType, operation?: OperationType): React.ReactNode {\n  // First check for operation-specific icons\n  if (operation) {\n    switch (operation) {\n      case 'navigate':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-accent-50 dark:bg-accent-900/20 text-accent-500 dark:text-accent-400\">\n            <FiNavigation size={16} />\n          </div>\n        );\n      case 'click':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-purple-50 dark:bg-purple-900/20 text-accent-500 dark:text-accent-400\">\n            <FiMousePointer size={16} />\n          </div>\n        );\n      case 'browser':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n            <FiGlobe size={16} />\n          </div>\n        );\n    }\n  }\n\n  // Fall back to status type icons\n  switch (type) {\n    case 'success':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-green-50 dark:bg-green-900/20 text-green-500 dark:text-green-400\">\n          <FiCheck size={16} />\n        </div>\n      );\n    case 'error':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-red-50 dark:bg-red-900/20 text-red-500 dark:text-red-400\">\n          <FiX size={16} />\n        </div>\n      );\n    case 'empty':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gray-100 dark:bg-gray-700 text-gray-400 dark:text-gray-500\">\n          <FiLayers size={16} />\n        </div>\n      );\n    case 'info':\n    default:\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n          <FiInfo size={16} />\n        </div>\n      );\n  }\n}\n\n/**\n * Generates a human-readable description based on the operation type\n *\n * @param operation - The operation type\n * @param resultInfo - The analyzed result information\n * @returns Descriptive text for the operation\n */\nexport function getOperationDescription(\n  operation: string,\n  resultInfo: { type: ResultType; details: any },\n): string {\n  switch (operation) {\n    case 'navigate':\n      return resultInfo.details?.url ? `Navigated to ${resultInfo.details.url}` : 'Page Navigation';\n    case 'click':\n      return 'Element Click';\n    case 'type':\n      return 'Text Input';\n    case 'scroll':\n      return 'Page Scroll';\n    case 'browser':\n      return 'Browser Operation';\n    default:\n      return 'Operation Completed';\n  }\n}\n\n/**\n * Gets CSS classes for the header based on result type\n *\n * @param type - The result type\n * @returns CSS class string\n */\nexport function getHeaderClasses(type: ResultType): string {\n  switch (type) {\n    case 'success':\n      return 'border-green-100/50 dark:border-green-800/30 bg-green-50/50 dark:bg-green-900/20';\n    case 'error':\n      return 'border-red-100/50 dark:border-red-800/30 bg-red-50/50 dark:bg-red-900/20';\n    case 'empty':\n      return 'border-gray-100/50 dark:border-gray-700/30 bg-gray-50/50 dark:bg-gray-800/50';\n    case 'info':\n    default:\n      return 'border-blue-100/50 dark:border-blue-800/30 bg-blue-50/50 dark:bg-blue-900/20';\n  }\n}\n\n/**\n * Formats a key name for better display\n *\n * @param key - The raw key name\n * @returns Formatted key name\n */\nexport function formatKey(key: string): string {\n  return key\n    .replace(/([A-Z])/g, ' $1') // Insert space before capital letters\n    .replace(/^./, (str) => str.toUpperCase()) // Capitalize first letter\n    .replace(/[._]/g, ' '); // Replace underscores and dots with spaces\n}\n\n/**\n * Formats a value for display\n *\n * @param value - The value to format\n * @returns React node representing the formatted value\n */\nexport function formatValue(value: any): React.ReactNode {\n  if (value === null || value === undefined) {\n    return <span className=\"text-gray-400 dark:text-gray-500 italic\">None</span>;\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return <span className=\"text-gray-400 dark:text-gray-500 italic\">Empty array</span>;\n    }\n\n    if (\n      value.length <= 3 &&\n      value.every((item) => typeof item === 'string' || typeof item === 'number')\n    ) {\n      return value.join(', ');\n    }\n\n    return (\n      <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n        {JSON.stringify(value, null, 2)}\n      </pre>\n    );\n  }\n\n  if (typeof value === 'object') {\n    try {\n      return (\n        <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n          {JSON.stringify(value, null, 2)}\n        </pre>\n      );\n    } catch (e) {\n      return String(value);\n    }\n  }\n\n  // Make URLs clickable\n  if (typeof value === 'string' && (value.startsWith('http://') || value.startsWith('https://'))) {\n    return (\n      <a\n        href={value}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-accent-600 dark:text-accent-400 hover:underline\"\n      >\n        {value}\n      </a>\n    );\n  }\n\n  return String(value);\n}\n\n/**\n * Check if content is possibly Markdown\n */\nexport function isPossibleMarkdown(text: string): boolean {\n  // Check for common Markdown syntax patterns\n  const markdownPatterns = [\n    /^#+\\s+.+$/m, // Headers\n    /\\[.+\\]\\(.+\\)/, // Links\n    /\\*\\*.+\\*\\*/, // Bold\n    /\\*.+\\*/, // Italic\n    /```[\\s\\S]*```/, // Code blocks\n    /^\\s*-\\s+.+$/m, // Unordered lists\n    /^\\s*\\d+\\.\\s+.+$/m, // Ordered lists\n    />\\s+.+/, // Blockquotes\n    /!\\[.+\\]\\(.+\\)/, // Images\n    /^---$/m, // Horizontal rules\n    /^\\|.+\\|$/m, // Tables\n    /^\\s*\\[\\d+\\].*$/m, // Numbered references like [1], [2]\n    /^\\s*\\[FILE\\].*$/m, // File annotations\n    /^\\s*\\[DIR\\].*$/m, // Directory annotations\n  ];\n\n  // If content matches at least two Markdown patterns, or is lengthy with one pattern, consider it Markdown\n  const matchCount = markdownPatterns.filter((pattern) => pattern.test(text)).length;\n  return matchCount >= 2 || (text.length > 500 && matchCount >= 1);\n}\n\n/**\n * Determines the type of file based on extension\n */\nexport function determineFileType(extension: string): 'code' | 'document' | 'image' | 'other' {\n  if (\n    [\n      'js',\n      'jsx',\n      'ts',\n      'tsx',\n      'py',\n      'java',\n      'c',\n      'cpp',\n      'php',\n      'html',\n      'css',\n      'json',\n      'xml',\n    ].includes(extension)\n  ) {\n    return 'code';\n  }\n  if (['md', 'txt', 'docx', 'pdf', 'rtf', 'markdown'].includes(extension)) {\n    return 'document';\n  }\n  if (['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp', 'bmp'].includes(extension)) {\n    return 'image';\n  }\n  return 'other';\n}\n\n/**\n * Get appropriate file icon based on extension\n */\nexport function getFileIcon(extension: string): React.ReactNode {\n  if (['html', 'htm', 'xml'].includes(extension)) {\n    return <FiCode size={18} className=\"text-orange-500 dark:text-orange-400\" />;\n  }\n  if (['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp', 'bmp'].includes(extension)) {\n    return <FiImage size={18} className=\"text-blue-500 dark:text-blue-400\" />;\n  }\n  if (['js', 'jsx', 'ts', 'tsx', 'py', 'java', 'c', 'cpp', 'php', 'css'].includes(extension)) {\n    return <FiCode size={18} className=\"text-accent-500 dark:text-accent-400\" />;\n  }\n  if (['json', 'yaml', 'yml', 'toml', 'ini', 'env', 'conf'].includes(extension)) {\n    return <FiFileText size={18} className=\"text-amber-500 dark:text-amber-400\" />;\n  }\n  if (['md', 'markdown'].includes(extension)) {\n    return <FiFileText size={18} className=\"text-emerald-500 dark:text-emerald-400\" />;\n  }\n  if (['csv', 'xlsx', 'xls', 'xml'].includes(extension)) {\n    return <FiDatabase size={18} className=\"text-purple-500 dark:text-purple-400\" />;\n  }\n  return <FiFile size={18} className=\"text-gray-600 dark:text-gray-400\" />;\n}\n","import {\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n} from '@multimodal/agent-interface';\nimport {\n  MultimodalContent,\n  MultimodalTextContent,\n  MultimodalImageContent,\n  ImageContentData,\n  SearchResultData,\n  CommandResultData,\n  ScriptResultData,\n  FileContentData,\n  SearchResult,\n} from './types';\n\nexport function extractImageUrl(content: ChatCompletionContentPart[]): string | null {\n  const imgPart = content.find(\n    (part): part is ChatCompletionContentPartImage =>\n      part?.type === 'image_url' && Boolean(part.image_url?.url),\n  );\n\n  return imgPart?.image_url.url || null;\n}\n\nexport function parseImageContent(source: string): ImageContentData | null {\n  if (!source.startsWith('data:image/')) {\n    return null;\n  }\n\n  const [mimeTypePrefix, base64Data] = source.split(',');\n  if (!mimeTypePrefix || !base64Data) {\n    return null;\n  }\n\n  const mimeType = mimeTypePrefix.split(':')[1]?.split(';')[0];\n  if (!mimeType) {\n    return null;\n  }\n\n  return { mimeType, base64Data };\n}\n\nexport function extractSearchResults(source: MultimodalContent[]): SearchResultData {\n  const resultsItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'RESULTS',\n  );\n  const queryItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'QUERY',\n  );\n\n  if (!resultsItem?.text) {\n    return { results: [] };\n  }\n\n  const resultBlocks = resultsItem.text.split('---').filter(Boolean);\n  const results = resultBlocks.map((block): SearchResult => {\n    const lines = block.trim().split('\\n');\n    const titleLine = lines[0] || '';\n    const urlLine = lines[1] || '';\n    const snippet = lines.slice(2).join('\\n');\n\n    const title = titleLine.replace(/^\\[\\d+\\]\\s*/, '').trim();\n    const url = urlLine.replace(/^URL:\\s*/, '').trim();\n\n    return { title, url, snippet };\n  });\n\n  return {\n    results,\n    query: queryItem?.text,\n  };\n}\n\nexport function extractCommandResult(source: MultimodalContent[]): CommandResultData {\n  const commandItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'COMMAND',\n  );\n  const stdoutItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'STDOUT',\n  );\n  const stderrItem = source.find(\n    (item): item is MultimodalTextContent =>\n      item.type === 'text' && (item.name === 'STDERR' || item.name === 'ERROR'),\n  );\n  const exitCodeItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'EXIT_CODE',\n  );\n\n  return {\n    command: commandItem?.text,\n    stdout: stdoutItem?.text || '',\n    stderr: stderrItem?.text || '',\n    exitCode: exitCodeItem?.value as number | undefined,\n  };\n}\n\nexport function extractScriptResult(source: MultimodalContent[]): ScriptResultData {\n  const errorItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'ERROR',\n  );\n  const stderrItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'STDERR',\n  );\n  const stdoutItem = source.find(\n    (item): item is MultimodalTextContent => item.type === 'text' && item.name === 'STDOUT',\n  );\n\n  return {\n    stdout: stdoutItem?.text || '',\n    stderr: errorItem?.text || stderrItem?.text || '',\n    exitCode: 1, // Script failures typically have exit code 1\n  };\n}\n\nexport function extractFileContent(source: MultimodalContent[]): FileContentData {\n  const textContent = source.find((part): part is MultimodalTextContent => part.type === 'text');\n\n  return {\n    content: textContent?.text,\n  };\n}\n\nexport function findImageContent(source: MultimodalContent[]): MultimodalImageContent | null {\n  return (\n    source.find(\n      (part): part is MultimodalImageContent =>\n        part?.type === 'image_url' && Boolean(part.image_url?.url),\n    ) || null\n  );\n}\n","import { ToolResultContentPart } from '../../types';\nimport { StandardPanelContent, SearchResult } from '../../types/panelContent';\nimport {\n  isMultimodalContent,\n  isSearchResults,\n  isCommandResult,\n  isScriptResult,\n  isFileResult,\n  isObjectWithResults,\n} from './typeGuards';\nimport {\n  extractImageUrl,\n  parseImageContent,\n  extractSearchResults,\n  extractCommandResult,\n  extractScriptResult,\n  extractFileContent,\n  findImageContent,\n} from './extractors';\n\nexport function handleImageContent(source: unknown, title: string): ToolResultContentPart[] {\n  if (typeof source === 'string') {\n    const imageData = parseImageContent(source);\n    if (imageData) {\n      return [\n        {\n          type: 'image',\n          imageData: imageData.base64Data,\n          mimeType: imageData.mimeType,\n          name: title,\n        },\n      ];\n    }\n  }\n\n  if (Array.isArray(source)) {\n    const imagePart = findImageContent(source);\n    if (imagePart?.image_url?.url) {\n      const imgSrc = imagePart.image_url.url;\n      const imageData = parseImageContent(imgSrc);\n\n      if (imageData) {\n        return [\n          {\n            type: 'image',\n            imageData: imageData.base64Data,\n            mimeType: imageData.mimeType,\n            name: title,\n          },\n        ];\n      }\n    }\n  }\n\n  return [\n    {\n      type: 'text',\n      text: 'Image could not be displayed',\n    },\n  ];\n}\n\nexport function handleSearchContent(\n  source: unknown,\n  toolArguments?: Record<string, unknown>,\n  title?: string,\n): ToolResultContentPart[] {\n  if (isSearchResults(source)) {\n    return [\n      {\n        type: 'search_result',\n        name: 'SEARCH_RESULTS',\n        results: source.map(\n          (item): SearchResult => ({\n            title: item.title,\n            url: item.url,\n            snippet: item.content || item.snippet || '',\n          }),\n        ),\n        query: (toolArguments?.query as string) || title?.replace(/^Search: /i, ''),\n      },\n    ];\n  }\n\n  if (isMultimodalContent(source)) {\n    const { results, query } = extractSearchResults(source);\n    return [\n      {\n        type: 'search_result',\n        name: 'SEARCH_RESULTS',\n        results,\n        query,\n      },\n    ];\n  }\n\n  if (isObjectWithResults(source)) {\n    return [\n      {\n        type: 'search_result',\n        name: 'SEARCH_RESULTS',\n        results: source.results,\n        query: source.query,\n      },\n    ];\n  }\n\n  return [\n    {\n      type: 'text',\n      text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n    },\n  ];\n}\n\nexport function handleCommandContent(\n  source: unknown,\n  toolArguments?: Record<string, unknown>,\n): ToolResultContentPart[] {\n  if (isMultimodalContent(source)) {\n    const commandResult = extractCommandResult(source);\n    return [\n      {\n        type: 'command_result',\n        name: 'COMMAND_RESULT',\n        command: commandResult.command || (toolArguments?.command as string),\n        stdout: commandResult.stdout || '',\n        stderr: commandResult.stderr || '',\n        exitCode: commandResult.exitCode,\n      },\n    ];\n  }\n\n  if (isCommandResult(source)) {\n    return [\n      {\n        type: 'command_result',\n        name: 'COMMAND_RESULT',\n        command: source.command || (toolArguments?.command as string),\n        stdout: source.output || source.stdout || '',\n        stderr: source.stderr || '',\n        exitCode: source.exitCode,\n      },\n    ];\n  }\n\n  return [\n    {\n      type: 'text',\n      text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n    },\n  ];\n}\n\nexport function handleScriptContent(\n  source: unknown,\n  toolArguments?: Record<string, unknown>,\n): ToolResultContentPart[] {\n  if (isMultimodalContent(source)) {\n    const scriptResult = extractScriptResult(source);\n    return [\n      {\n        type: 'script_result',\n        name: 'SCRIPT_RESULT',\n        script: (toolArguments?.script as string) || '',\n        interpreter: (toolArguments?.interpreter as string) || 'python',\n        cwd: (toolArguments?.cwd as string) || undefined,\n        stdout: scriptResult.stdout || '',\n        stderr: scriptResult.stderr || '',\n        exitCode: scriptResult.exitCode,\n      },\n    ];\n  }\n\n  if (isScriptResult(source)) {\n    return [\n      {\n        type: 'script_result',\n        name: 'SCRIPT_RESULT',\n        script: source.script || (toolArguments?.script as string) || '',\n        interpreter: source.interpreter || (toolArguments?.interpreter as string) || 'python',\n        cwd: source.cwd || (toolArguments?.cwd as string) || undefined,\n        stdout: source.stdout || '',\n        stderr: source.stderr || '',\n        exitCode: source.exitCode,\n      },\n    ];\n  }\n\n  return [\n    {\n      type: 'text',\n      text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n    },\n  ];\n}\n\nexport function handleFileContent(\n  source: unknown,\n  toolArguments?: Record<string, unknown>,\n): ToolResultContentPart[] {\n  if (isMultimodalContent(source)) {\n    const { content } = extractFileContent(source);\n    if (content) {\n      return [\n        {\n          type: 'file_result',\n          name: 'FILE_RESULT',\n          path: (toolArguments?.path as string) || 'Unknown file',\n          content,\n        },\n      ];\n    }\n  }\n\n  if (isFileResult(source)) {\n    return [\n      {\n        type: 'file_result',\n        name: 'FILE_RESULT',\n        path: source.path || (toolArguments?.path as string) || 'Unknown file',\n        content: source.content || 'No content available',\n      },\n    ];\n  }\n\n  if (typeof source === 'string') {\n    return [\n      {\n        type: 'file_result',\n        name: 'FILE_RESULT',\n        path: (toolArguments?.path as string) || 'Unknown file',\n        content: source,\n      },\n    ];\n  }\n\n  return [\n    {\n      type: 'text',\n      text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n    },\n  ];\n}\n\nexport function handleBrowserControlContent(\n  panelContent: StandardPanelContent,\n  source: unknown,\n): ToolResultContentPart[] {\n  const { toolCallId, arguments: toolArguments, originalContent } = panelContent;\n\n  const environmentImage = Array.isArray(originalContent) ? extractImageUrl(originalContent) : null;\n\n  return [\n    {\n      type: 'browser_control',\n      name: 'BROWSER_CONTROL',\n      toolCallId,\n      thought: (toolArguments?.thought as string) || '',\n      step: (toolArguments?.step as string) || '',\n      action: (toolArguments?.action as string) || '',\n      status: isCommandResult(source) ? source.command || 'unknown' : 'unknown',\n      environmentImage,\n    },\n  ];\n}\n\nexport function handleDefaultContent(source: unknown): ToolResultContentPart[] {\n  if (typeof source === 'object' && source !== null) {\n    return [\n      {\n        type: 'json',\n        name: 'JSON_DATA',\n        data: source,\n      },\n    ];\n  }\n\n  return [\n    {\n      type: 'text',\n      text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n    },\n  ];\n}\n","export * from './types';\nexport * from './typeGuards';\nexport * from './extractors';\nexport * from './handlers';\nexport { standardizeContent } from './standardizer';\n","import { ToolResultContentPart } from '../../types';\nimport { StandardPanelContent } from '../../types/panelContent';\nimport {\n  handleImageContent,\n  handleSearchContent,\n  handleCommandContent,\n  handleScriptContent,\n  handleFileContent,\n  handleBrowserControlContent,\n  handleDefaultContent,\n} from './handlers';\n\nexport function standardizeContent(panelContent: StandardPanelContent): ToolResultContentPart[] {\n  const { type, source, title, error, arguments: toolArguments, _extra } = panelContent;\n\n  // Handle error first\n  if (error) {\n    return [\n      {\n        type: 'text',\n        name: 'ERROR',\n        text: error,\n      },\n    ];\n  }\n\n  // Handle file operations with explicit path\n  if (type === 'file' && toolArguments?.path) {\n    const content = toolArguments.content || (typeof source === 'string' ? source : null);\n\n    if (content && typeof content === 'string') {\n      return [\n        {\n          type: 'file_result',\n          name: 'FILE_RESULT',\n          path: toolArguments.path as string,\n          content,\n        },\n      ];\n    }\n\n    return handleFileContent(source, toolArguments);\n  }\n\n  // Handle browser vision control\n  if (type === 'browser_vision_control') {\n    return handleBrowserControlContent(panelContent, source);\n  }\n\n  // Handle image content in multimodal format\n  if (Array.isArray(source) && source.some((part) => part?.type === 'image_url')) {\n    return handleImageContent(source, title);\n  }\n\n  console.log('type', type);\n\n  // Handle different content types\n  switch (type) {\n    case 'image':\n      return handleImageContent(source, title);\n\n    case 'search':\n      return handleSearchContent(source, toolArguments, title);\n\n    case 'command':\n      return handleCommandContent(source, toolArguments);\n\n    case 'script':\n      return handleScriptContent(source, toolArguments);\n\n    case 'browser':\n      return [\n        {\n          type: 'json',\n          name: title || 'BROWSER_DATA',\n          data: source,\n          _extra,\n        },\n      ];\n\n    case 'file':\n    case 'read_file':\n    case 'write_file':\n      return handleFileContent(source, toolArguments);\n\n    default:\n      return handleDefaultContent(source);\n  }\n}\n","import { ChatCompletionContentPart } from '@multimodal/agent-interface';\nimport { MultimodalContent, SearchResult, CommandResult, FileResult, ScriptResult } from './types';\n\nexport function isMultimodalContent(source: unknown): source is MultimodalContent[] {\n  return (\n    Array.isArray(source) &&\n    source.length > 0 &&\n    typeof source[0] === 'object' &&\n    source[0] !== null &&\n    'type' in source[0]\n  );\n}\n\nexport function isSearchResults(source: unknown): source is SearchResult[] {\n  return (\n    Array.isArray(source) &&\n    source.length > 0 &&\n    typeof source[0] === 'object' &&\n    source[0] !== null &&\n    'title' in source[0] &&\n    'url' in source[0]\n  );\n}\n\nexport function isCommandResult(source: unknown): source is CommandResult {\n  return (\n    source !== null &&\n    typeof source === 'object' &&\n    ('command' in source || 'output' in source || 'stdout' in source)\n  );\n}\n\nexport function isFileResult(source: unknown): source is FileResult {\n  return source !== null && typeof source === 'object' && ('path' in source || 'content' in source);\n}\n\nexport function isScriptResult(source: unknown): source is ScriptResult {\n  return (\n    source !== null && typeof source === 'object' && ('script' in source || 'interpreter' in source)\n  );\n}\n\nexport function isObjectWithResults(\n  source: unknown,\n): source is { results: SearchResult[]; query?: string } {\n  return (\n    source !== null &&\n    typeof source === 'object' &&\n    'results' in source &&\n    Array.isArray((source as { results: unknown }).results)\n  );\n}\n","import { ChatCompletionContentPart } from '@multimodal/agent-interface';\n\nexport interface MultimodalTextContent {\n  type: 'text';\n  text: string;\n  name?: string;\n  value?: unknown;\n}\n\nexport interface MultimodalImageContent {\n  type: 'image_url';\n  image_url: {\n    url: string;\n  };\n}\n\nexport type MultimodalContent = MultimodalTextContent | MultimodalImageContent;\n\nexport interface ImageContentData {\n  mimeType: string;\n  base64Data: string;\n}\n\nexport interface SearchResultData {\n  results: SearchResult[];\n  query?: string;\n}\n\nexport interface CommandResultData {\n  command?: string;\n  stdout?: string;\n  stderr?: string;\n  exitCode?: number;\n}\n\nexport interface FileContentData {\n  content?: string;\n}\n\nexport interface SearchResult {\n  title: string;\n  url: string;\n  snippet?: string;\n  content?: string;\n}\n\nexport interface CommandResult {\n  command?: string;\n  output?: string;\n  stdout?: string;\n  stderr?: string;\n  exitCode?: number;\n}\n\nexport interface FileResult {\n  path?: string;\n  content?: string;\n}\n\nexport interface ScriptResultData {\n  script?: string;\n  interpreter?: string;\n  cwd?: string;\n  stdout?: string;\n  stderr?: string;\n  exitCode?: number;\n}\n\nexport interface ScriptResult {\n  script?: string;\n  interpreter?: string;\n  cwd?: string;\n  stdout?: string;\n  stderr?: string;\n  exitCode?: number;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;;AAEA;AAIA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;;;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AAEA;;;;;;;AAOA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;;;;;;;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3XA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;AAGA;AAhHA;;AAEA;AACA;AACA;AACA;AACA;;;AANA;AAkHA;;AAEA;;AAEA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAUA;AAIA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMA;AACA;AACA;AASA;AAEA;;;;AAIA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChFA;AAEA;AAGA;;;;;;;AAOA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAMA;AAWA;AAVA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5WA;AACA;AAGA;;AAEA;AAQA;;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AAAA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AA2DA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;AAEA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApTA;AACA;AACA;AACA;AACA;AAyLA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAIA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;;AAiEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AChUA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAGA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AASA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;AAGA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAYA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA;AASA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACndA;AAGA;;;AAGA;AAGA;;;;AAIA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;AAQA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxHA;AAwBA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAGA;;AAEA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;AC/CA;AAkCA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAEA;AA0BA;;AAEA;AACA;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAEA;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;AAEA;;AAIA;AAEA;AAEA;AAKA;AAEA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAEA;;AAEA;AAAA;AAAA;;;;;;;;;;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;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A;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;AASA;;;;;;AAGA;AA7JA;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;;;;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;;;;;;;;AAQA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;;;;AAGA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AAAA;AAEA;AACA;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AAEA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;;;;;AAKA;AAEA;AACA;AACA;;;;;;AAIA;AAEA;AACA;AACA;AACA;;;;;;AAIA;AAEA;AACA;AACA;;;;;;;;;;;;;AAQA;AAKA;AACA;AACA;;;;;;;;;;;;AAKA;AAvOA;;AAOA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AASA;;AAEA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;AAIA;AAEA;AACA;AAAA;;AAEA;AACA;AAAA;;;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;AAMA;AACA;;AAKA;AACA;;;;;;AAQA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;AAIA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAIA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAbA;;;;AAgBA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAAA;;;;;AAAA;AAAA;;;;;;AAhBA;;;;AAmBA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AAAA;;;;;;AAdA;;;;;;;;;;;;;;;;;;;;;;AAqBA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;;;;;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;;;;;AACA;;;;;AACA;;;;;;;;;;;AACA;;;;;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAOA;AAzcA;;AAWA;AASA;AAEA;;;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AAQA;;;;;;;;AAQA;AACA;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAKA;AA5DA;;AAKA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;AACA;AAjCA;;AACA;AACA;AACA;;;AAHA;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;;AACA;AAAA;;AAEA;AAAA;;;;;;AAGA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA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AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAKA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;;;;;AAYA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;;AACA;AAAA;AACA;;;;;;AAGA;AACA;;AAAA;AACA;AAAA;;;;;;;AAIA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAzQA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;AAQA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AApDA;;AAEA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAQA;;;;;;;;AAQA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AAAA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;;;;;;AAAA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;AAEA;AAAA;;;;;;;;;;;;;;;;;AAMA;AACA;;AACA;AAAA;AAAA;;;;;;AAIA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;;;;;;;;;;;;AAOA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;AAOA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;;;;;;;;;;;;AAKA;AAAA;AAAA;;;;;;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAQA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAnUA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAqBA;;AAEA;AAIA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxEA;;AAyEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;AAEA;AACA;;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;AAEA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AAEA;AACA;AAOA;;;;;;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAMA;AAAA;;;;;;AAGA;AACA;AACA;AAAA;;AACA;AAAA;;AACA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;AAOA;AACA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAOA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAA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ACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;AAEA;AAEA;AAAA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAKA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA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;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAjNA;AAAA;AAmNA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA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AAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;;;;;;AAMA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AAEA;AAEA;AACA;AACA;AAEA;;;;;AAKA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAGA;AAEA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9dA;AACA;AAEA;AAAA;;AAGA;AACA;AAEA;AAUA;AATA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIA;AAQA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACFA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AAOA;AAEA;AACA;AAQA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAGA;AAMA;;;;;;;;;;;;;;;;;ACiBA"}