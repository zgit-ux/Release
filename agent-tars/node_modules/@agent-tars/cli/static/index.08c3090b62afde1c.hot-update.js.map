{"version":3,"file":"index.08c3090b62afde1c.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/GenericResultRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749957716778\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\nimport {\n  FiCheck,\n  FiX,\n  FiAlertCircle,\n  FiInfo,\n  FiRefreshCw,\n  FiGlobe,\n  FiNavigation,\n  FiMousePointer,\n  FiLink,\n  FiArrowRight,\n  FiCornerUpRight,\n  FiLayers,\n} from 'react-icons/fi';\nimport { ToolResultContentPart } from '..//types';\n\ninterface GenericResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * GenericResultRenderer - 智能分析并渲染任意格式的工具结果\n *\n * 特点:\n * - 自动识别常见的状态模式（成功/失败/信息）\n * - 提取并突出显示关键信息\n * - 优雅处理各种数据结构\n * - 美观一致的卡片式布局\n * - 丝滑的动画过渡效果\n * - 针对不同操作类型的特殊可视化处理\n */\nexport const GenericResultRenderer: React.FC<GenericResultRendererProps> = ({ part }) => {\n  const content = part.text || part.data || {};\n  const [showDetails, setShowDetails] = useState(false);\n  const [animateSuccess, setAnimateSuccess] = useState(false);\n\n  // 尝试将字符串内容解析为JSON\n  let parsedContent = content;\n  if (typeof content === 'string') {\n    try {\n      parsedContent = JSON.parse(content);\n    } catch (e) {\n      // 不是有效的JSON，保持字符串格式\n      parsedContent = content;\n    }\n  }\n\n  // 智能检测结果类型\n  const resultInfo = analyzeResult(parsedContent, part.name);\n\n  console.log('resultInfo', resultInfo);\n\n  // 触发成功动画\n  useEffect(() => {\n    if (resultInfo.type === 'success') {\n      setAnimateSuccess(true);\n      const timer = setTimeout(() => setAnimateSuccess(false), 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [resultInfo.type]);\n\n  // 添加对导航类操作的特殊处理\n  const isNavigationOperation =\n    part.name?.includes('navigate') || (typeof parsedContent === 'object' && parsedContent?.url);\n\n  console.log('isNavigationOperation', isNavigationOperation);\n\n  // 检测内容是否为 Markdown\n  const isPossibleMarkdown = (text: string): boolean => {\n    // 检查常见的 Markdown 语法特征\n    const markdownPatterns = [\n      /^#+\\s+.+$/m, // 标题\n      /\\[.+\\]\\(.+\\)/, // 链接\n      /\\*\\*.+\\*\\*/, // 粗体\n      /\\*.+\\*/, // 斜体\n      /```[\\s\\S]*```/, // 代码块\n      /^\\s*-\\s+.+$/m, // 无序列表\n      /^\\s*\\d+\\.\\s+.+$/m, // 有序列表\n      />\\s+.+/, // 引用块\n      /!\\[.+\\]\\(.+\\)/, // 图片\n      /^---$/m, // 分隔线\n      /^\\|.+\\|$/m, // 表格\n    ];\n\n    // 如果满足至少两个 Markdown 特征，或者内容较长并包含一个特征，认为是 Markdown\n    const matchCount = markdownPatterns.filter((pattern) => pattern.test(text)).length;\n    return matchCount >= 2 || (text.length > 500 && matchCount >= 1);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3, ease: [0.16, 1, 0.3, 1] }}\n      className=\"w-full\"\n    >\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden w-full transform transition-all duration-300 hover:shadow-md\">\n        {/* 状态头部 */}\n        <div\n          className={`py-4 px-5 flex items-center justify-between border-b ${getHeaderClasses(resultInfo.type)}`}\n        >\n          <div className=\"flex items-center\">\n            <div className=\"mr-3 relative\">\n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={resultInfo.type}\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  exit={{ opacity: 0, scale: 0.8 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {getStatusIcon(resultInfo.type, resultInfo.operation)}\n                </motion.div>\n              </AnimatePresence>\n\n              {/* 成功动画效果 */}\n              {animateSuccess && resultInfo.type === 'success' && (\n                <motion.div\n                  initial={{ scale: 0.5, opacity: 0.8 }}\n                  animate={{ scale: 1.5, opacity: 0 }}\n                  transition={{ duration: 1.2, ease: 'easeOut' }}\n                  className=\"absolute inset-0 rounded-full bg-green-500 dark:bg-green-400 z-0\"\n                />\n              )}\n            </div>\n            <div>\n              <motion.span\n                className=\"font-medium\"\n                initial={{ opacity: 0.8 }}\n                animate={{ opacity: 1 }}\n              >\n                {part.name || resultInfo.title}\n              </motion.span>\n              {resultInfo.operation && (\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {getOperationDescription(resultInfo.operation, resultInfo)}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 添加URL显示（适用于浏览器工具） */}\n          {resultInfo.url && (\n            <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors group\">\n              <FiLink size={12} className=\"mr-1 group-hover:text-accent-500\" />\n              <a\n                href={resultInfo.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"max-w-[200px] truncate hover:underline transition-all\"\n              >\n                {resultInfo.url}\n              </a>\n            </div>\n          )}\n        </div>\n\n        {/* 内容区域 */}\n        <div className=\"p-5 relative\">\n          {/* 主要消息区 */}\n          <AnimatePresence mode=\"wait\">\n            {resultInfo.message ? (\n              <motion.div\n                key=\"message\"\n                initial={{ opacity: 0, y: 5 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: 0.1 }}\n                className=\"text-gray-700 dark:text-gray-300 mb-4\"\n              >\n                {typeof resultInfo.message === 'string' &&\n                isPossibleMarkdown(resultInfo.message) ? (\n                  <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n                    <MarkdownRenderer content={`\\`\\`\\`md\\n${resultInfo.message}\\n\\`\\`\\``} />\n                  </div>\n                ) : (\n                  resultInfo.message\n                )}\n              </motion.div>\n            ) : null}\n          </AnimatePresence>\n\n          {/* 针对导航类操作的特殊处理 */}\n          {isNavigationOperation && resultInfo.type === 'success' && (\n            <motion.div\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              className=\"mb-4\"\n            >\n              <div className=\"flex items-center mt-1\">\n                <div className=\"w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center\">\n                  <FiCornerUpRight className=\"text-accent-500 dark:text-accent-400\" size={16} />\n                </div>\n                <div className=\"ml-3\">\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">导航至</div>\n                  <div className=\"font-medium text-accent-600 dark:text-accent-400 flex items-center\">\n                    {resultInfo.url}\n                  </div>\n                </div>\n              </div>\n\n              {/* 导航动画 */}\n              <div className=\"my-5 px-3\">\n                <div className=\"relative h-0.5 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden\">\n                  <motion.div\n                    initial={{ width: 0, x: 0 }}\n                    animate={{ width: '100%', x: ['0%', '100%'] }}\n                    transition={{\n                      duration: 1.5,\n                      width: { duration: 0 },\n                      x: { duration: 1.5, ease: 'easeInOut' },\n                    }}\n                    className=\"absolute top-0 left-0 h-full bg-accent-500 dark:bg-accent-400 rounded-full\"\n                    style={{ width: '30%' }}\n                  />\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* 详细信息切换按钮 - 只在有额外信息时显示 */}\n          {resultInfo.details && Object.keys(resultInfo.details).length > 0 && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.3, delay: 0.3 }}\n              className=\"mt-2 mb-3\"\n            >\n              <button\n                onClick={() => setShowDetails(!showDetails)}\n                className=\"text-xs flex items-center text-gray-500 dark:text-gray-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors\"\n              >\n                <motion.div\n                  animate={{ rotate: showDetails ? 90 : 0 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <FiArrowRight size={12} className=\"mr-1.5\" />\n                </motion.div>\n                {showDetails ? '隐藏详情' : '查看详情'}\n              </button>\n            </motion.div>\n          )}\n\n          {/* 详细信息区 - 只在有额外信息时显示 */}\n          <AnimatePresence>\n            {showDetails && resultInfo.details && Object.keys(resultInfo.details).length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"overflow-hidden\"\n              >\n                <div className=\"mt-3 pt-3 border-t border-gray-100 dark:border-gray-700/30\">\n                  <div className=\"grid gap-2\">\n                    {Object.entries(resultInfo.details).map(([key, value]) => (\n                      <motion.div\n                        key={key}\n                        initial={{ opacity: 0, y: 5 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"flex items-start\"\n                      >\n                        <div className=\"text-xs font-medium text-gray-500 dark:text-gray-400 w-24 flex-shrink-0\">\n                          {formatKey(key)}:\n                        </div>\n                        <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                          {formatValue(value)}\n                        </div>\n                      </motion.div>\n                    ))}\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* 空状态处理 - 美化版 */}\n          {!resultInfo.message &&\n            !resultInfo.url &&\n            (!resultInfo.details || Object.keys(resultInfo.details).length === 0) && (\n              <div className=\"flex flex-col items-center justify-center py-4\">\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{\n                    duration: 0.5,\n                    delay: 0.2,\n                    type: 'spring',\n                    stiffness: 100,\n                  }}\n                  className=\"flex flex-col items-center\"\n                >\n                  {resultInfo.type === 'success' ? (\n                    <>\n                      <div className=\"w-12 h-12 mb-3 rounded-full bg-green-50 dark:bg-green-900/20 flex items-center justify-center text-green-500 dark:text-green-400\">\n                        <motion.div\n                          animate={{\n                            scale: [1, 1.15, 1],\n                          }}\n                          transition={{\n                            duration: 1,\n                            repeat: Infinity,\n                            repeatType: 'reverse',\n                            repeatDelay: 1,\n                          }}\n                        >\n                          <FiCheck size={24} />\n                        </motion.div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n                          The operation completed successfully\n                        </div>\n                        {resultInfo.operation && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {getOperationDescription(resultInfo.operation, resultInfo)}\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div className=\"w-12 h-12 mb-3 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center text-gray-400 dark:text-gray-500\">\n                        <FiInfo size={24} />\n                      </div>\n                      <div className=\"text-center text-gray-500 dark:text-gray-400\">\n                        {resultInfo.type === 'empty' ? '无可用内容' : '操作已完成'}\n                      </div>\n                    </>\n                  )}\n                </motion.div>\n              </div>\n            )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\n/**\n * Analyzes tool result and extracts key information\n */\nfunction analyzeResult(\n  content: any,\n  toolName?: string,\n): {\n  type: 'success' | 'error' | 'info' | 'empty';\n  title: string;\n  message: string | null;\n  details: Record<string, any>;\n  url?: string;\n  operation?: string; // 添加操作类型\n} {\n  // Default values\n  const result = {\n    type: 'info' as const,\n    title: 'Operation Result',\n    message: null,\n    details: {} as Record<string, any>,\n  };\n\n  // Try to infer operation type from tool name\n  let operation = '';\n  if (toolName) {\n    if (toolName.includes('navigate')) operation = 'navigate';\n    else if (toolName.includes('click')) operation = 'click';\n    else if (toolName.includes('type')) operation = 'type';\n    else if (toolName.includes('scroll')) operation = 'scroll';\n    else if (toolName.includes('browser')) operation = 'browser';\n    else if (toolName.includes('directory')) operation = 'directory';\n  }\n\n  // Handle empty content\n  if (!content || (typeof content === 'object' && Object.keys(content).length === 0)) {\n    return { ...result, type: 'empty', title: 'Empty Result', operation };\n  }\n\n  // Handle string content\n  if (typeof content === 'string') {\n    // Check if content is a directory listing\n    if (content.match(/^\\[(FILE|DIR)\\]/m)) {\n      operation = operation || 'directory';\n      return {\n        ...result,\n        type: 'success',\n        title: 'Directory Listing',\n        message: content,\n        operation,\n      };\n    }\n    \n    // Check if content is a navigation success message\n    if (content.includes('Navigated to ')) {\n      const url = content.replace('Navigated to ', '').trim();\n      return {\n        ...result,\n        type: 'success',\n        title: 'Navigation Successful',\n        message: null,\n        details: { url },\n        url,\n        operation: 'navigate',\n      };\n    }\n    return { ...result, message: content, operation };\n  }\n\n  // Handle object content\n  if (typeof content === 'object') {\n    // Special handling for navigation related content\n    if (content.url) {\n      operation = operation || 'navigate';\n      result.url = content.url;\n    }\n\n    // Check for status field\n    if ('status' in content) {\n      const status = String(content.status).toLowerCase();\n      if (status === 'success' || status === 'ok' || status === 'completed') {\n        result.type = 'success';\n        result.title = 'Success';\n      } else if (status === 'error' || status === 'fail' || status === 'failed') {\n        result.type = 'error';\n        result.title = 'Error';\n      }\n    }\n\n    // Check for message field\n    if ('message' in content) {\n      result.message = String(content.message);\n    } else if ('error' in content) {\n      result.message = String(content.error);\n      result.type = 'error';\n      result.title = 'Error';\n    } else if ('msg' in content) {\n      result.message = String(content.msg);\n    } else if ('content' in content && typeof content.content === 'string') {\n      result.message = content.content;\n    }\n\n    // Extract title\n    if ('title' in content && typeof content.title === 'string' && content.title.trim()) {\n      result.title = content.title;\n    } else if (result.message && result.message.length < 50) {\n      // If message is very short, use it as the title\n      result.title = result.message;\n      result.message = null;\n    }\n\n    // Special handling for URL (for browser tool results)\n    let url: string | undefined = undefined;\n    if ('url' in content && typeof content.url === 'string') {\n      url = content.url;\n    }\n\n    // Collect other important fields as details\n    for (const [key, value] of Object.entries(content)) {\n      // Skip already processed fields\n      if (['status', 'message', 'error', 'msg', 'title', 'url'].includes(key)) continue;\n\n      // Special handling for pagination information\n      if (key === 'pagination' && typeof value === 'object') {\n        for (const [pKey, pValue] of Object.entries(value)) {\n          result.details[`pagination.${pKey}`] = pValue;\n        }\n        continue;\n      }\n\n      // Prioritize these important fields\n      const importantFields = ['name', 'description', 'type', 'value', 'data'];\n      if (importantFields.includes(key)) {\n        result.details = { [key]: value, ...result.details };\n      } else {\n        // Add to details\n        result.details[key] = value;\n      }\n    }\n\n    return { ...result, url, operation };\n  }\n\n  return { ...result, operation };\n}\n\n/**\n * Get status icon\n */\nfunction getStatusIcon(type: string, operation?: string) {\n  // First, try to select icon based on operation type\n  if (operation) {\n    switch (operation) {\n      case 'navigate':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-accent-50 dark:bg-accent-900/20 text-accent-500 dark:text-accent-400\">\n            <FiNavigation size={16} />\n          </div>\n        );\n      case 'click':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-purple-50 dark:bg-purple-900/20 text-purple-500 dark:text-purple-400\">\n            <FiMousePointer size={16} />\n          </div>\n        );\n      case 'browser':\n        return (\n          <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n            <FiGlobe size={16} />\n          </div>\n        );\n    }\n  }\n\n  // Fallback to icon based on result type\n  switch (type) {\n    case 'success':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-green-50 dark:bg-green-900/20 text-green-500 dark:text-green-400\">\n          <FiCheck size={16} />\n        </div>\n      );\n    case 'error':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-red-50 dark:bg-red-900/20 text-red-500 dark:text-red-400\">\n          <FiX size={16} />\n        </div>\n      );\n    case 'empty':\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gray-100 dark:bg-gray-700 text-gray-400 dark:text-gray-500\">\n          <FiLayers size={16} />\n        </div>\n      );\n    case 'info':\n    default:\n      return (\n        <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-blue-50 dark:bg-blue-900/20 text-blue-500 dark:text-blue-400\">\n          <FiInfo size={16} />\n        </div>\n      );\n  }\n}\n\n/**\n * Get operation description\n */\nfunction getOperationDescription(operation: string, resultInfo: any): string {\n  switch (operation) {\n    case 'navigate':\n      return resultInfo.url ? `导航至 ${resultInfo.url}` : '页面导航';\n    case 'click':\n      return '点击元素';\n    case 'type':\n      return '输入文本';\n    case 'scroll':\n      return '滚动页面';\n    case 'browser':\n      return '浏览器操作';\n    case 'directory':\n      return '目录列表';\n    default:\n      return '操作已完成';\n  }\n}\n\n/**\n * Get header classes\n */\nfunction getHeaderClasses(type: string): string {\n  switch (type) {\n    case 'success':\n      return 'border-green-100/50 dark:border-green-800/30 bg-green-50/50 dark:bg-green-900/20';\n    case 'error':\n      return 'border-red-100/50 dark:border-red-800/30 bg-red-50/50 dark:bg-red-900/20';\n    case 'empty':\n      return 'border-gray-100/50 dark:border-gray-700/30 bg-gray-50/50 dark:bg-gray-800/50';\n    case 'info':\n    default:\n      return 'border-blue-100/50 dark:border-blue-800/30 bg-blue-50/50 dark:bg-blue-900/20';\n  }\n}\n\n/**\n * Format key name\n */\nfunction formatKey(key: string): string {\n  return key\n    .replace(/([A-Z])/g, ' $1') // Insert space before uppercase letters\n    .replace(/^./, (str) => str.toUpperCase()) // Capitalize first letter\n    .replace(/[._]/g, ' '); // Replace underscores and dots with spaces\n}\n\n/**\n * Format value for display\n */\nfunction formatValue(value: any): React.ReactNode {\n  if (value === null || value === undefined) {\n    return <span className=\"text-gray-400 dark:text-gray-500 italic\">None</span>;\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return <span className=\"text-gray-400 dark:text-gray-500 italic\">Empty array</span>;\n    }\n\n    if (\n      value.length <= 3 &&\n      value.every((item) => typeof item === 'string' || typeof item === 'number')\n    ) {\n      return value.join(', ');\n    }\n\n    return (\n      <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n        {JSON.stringify(value, null, 2)}\n      </pre>\n    );\n  }\n\n  if (typeof value === 'object') {\n    try {\n      return (\n        <pre className=\"text-xs bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n          {JSON.stringify(value, null, 2)}\n        </pre>\n      );\n    } catch (e) {\n      return String(value);\n    }\n  }\n\n  // Check if value is a URL and make it clickable\n  if (typeof value === 'string' && (value.startsWith('http://') || value.startsWith('https://'))) {\n    return (\n      <a\n        href={value}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-accent-600 dark:text-accent-400 hover:underline\"\n      >\n        {value}\n      </a>\n    );\n  }\n\n  return String(value);\n}"],"names":[],"mappings":"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CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAGA;AAEA;AACA"}