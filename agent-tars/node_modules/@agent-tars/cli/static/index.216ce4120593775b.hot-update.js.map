{"version":3,"file":"index.216ce4120593775b.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/Workspace.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/PlanView.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/PlanViewerRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749666985462\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749666985428\n        var cssReload = require(\"../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  FiArrowLeft, \n  FiCpu, \n  FiCheckCircle, \n  FiClock, \n  FiTarget,\n  FiSettings \n} from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { usePlan } from '@/common/hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n *\n * Features:\n * - Shows current plan status and steps\n * - Supports timeline navigation through plan keyframes\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex,\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center max-w-md p-8\"\n        >\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/50 dark:border-gray-700/30 shadow-sm\">\n            <FiTarget className=\"text-gray-400 dark:text-gray-500\" size={32} />\n          </div>\n          <h3 className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\">\n            No Plan Available\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            The agent hasn't created a plan for this task yet, or the task was simple enough to not\n            require planning.\n          </p>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"h-full flex flex-col bg-gradient-to-b from-gray-50/90 via-gray-50/60 to-gray-100/40 dark:from-gray-900/60 dark:via-gray-900/40 dark:to-gray-900/20 backdrop-blur-sm\"\n      >\n        {/* Header with back button */}\n        <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100/60 dark:border-gray-800/50 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md\">\n          <div className=\"flex items-center\">\n            <motion.button\n              whileHover={{ scale: 1.05, x: -2 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onBack}\n              className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50 transition-all duration-200\"\n              title=\"Back to workspace\"\n            >\n              <FiArrowLeft size={18} />\n            </motion.button>\n\n            <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden shadow-sm\">\n              <div className={`absolute inset-0 ${\n                displayedPlan.isComplete \n                  ? 'bg-gradient-to-br from-green-400/20 to-green-500/10 dark:from-green-600/30 dark:to-green-500/20'\n                  : 'bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20'\n              }`}></div>\n              <div className=\"relative z-10\">\n                {displayedPlan.isComplete ? (\n                  <FiCheckCircle className=\"text-green-500 dark:text-green-400\" size={20} />\n                ) : (\n                  <FiCpu className=\"text-accent-500 dark:text-accent-400\" size={20} />\n                )}\n              </div>\n            </div>\n\n            <div>\n              <h2 className=\"font-medium text-gray-800 dark:text-gray-100 text-lg leading-tight\">\n                Task Plan\n              </h2>\n              <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400\">\n                {displayedPlan.isComplete ? (\n                  <span className=\"flex items-center\">\n                    <FiCheckCircle className=\"mr-1 text-green-500 dark:text-green-400\" size={12} />\n                    Completed\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <FiClock className=\"mr-1 text-accent-500 dark:text-accent-400 animate-pulse\" size={12} />\n                    In progress\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            {currentPlan.keyframes && currentPlan.keyframes.length > 1 && (\n              <motion.div \n                initial={{ opacity: 0, y: -10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"flex items-center gap-2\"\n              >\n                <div className=\"text-xs bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full text-gray-600 dark:text-gray-400 border border-gray-200/50 dark:border-gray-700/30 font-medium\">\n                  {currentKeyframeIndex !== undefined && (\n                    <span>\n                      Keyframe {currentKeyframeIndex + 1} of {currentPlan.keyframes.length}\n                    </span>\n                  )}\n                </div>\n              </motion.div>\n            )}\n          </div>\n        </div>\n\n        {/* Plan content */}\n        <div className=\"flex-1 overflow-auto\">\n          <PlanViewerRenderer\n            plan={{\n              ...displayedPlan,\n              keyframes: currentPlan.keyframes,\n              currentKeyframeIndex,\n            }}\n            onKeyframeChange={handleKeyframeChange}\n          />\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  FiCheck, \n  FiClock, \n  FiTarget, \n  FiCheckCircle, \n  FiArrowRight, \n  FiMapPin, \n  FiLoader\n} from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { AgentEventStream } from '@/common/types';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: AgentEventStream.PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator\n * - Supports keyframe navigation for plan history\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // Calculate progress percentage\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n  \n  const completedStepsCount = steps.filter(step => step.done).length;\n\n  // If no plan, show empty state\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-24 h-24 rounded-full bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800/80 dark:to-gray-900/90 flex items-center justify-center mb-6 border border-gray-200/30 dark:border-gray-700/40 shadow-sm\"\n        >\n          <FiTarget size={36} className=\"text-gray-400 dark:text-gray-500\" />\n        </motion.div>\n        <motion.h3\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n        >\n          No Plan Generated\n        </motion.h3>\n        <motion.p\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"text-gray-600 dark:text-gray-400 max-w-md\"\n        >\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </motion.p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 md:p-8 h-full flex flex-col\">\n      {/* Title and Plan Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex items-center\">\n          {isComplete ? (\n            <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-green-50/80 to-green-100/30 dark:from-green-900/20 dark:to-green-800/10 flex items-center justify-center mr-4 text-green-500 dark:text-green-400 border border-green-100/50 dark:border-green-800/30 shadow-sm\">\n              <FiCheckCircle size={22} />\n            </div>\n          ) : (\n            <motion.div\n              animate={{ \n                boxShadow: [\"0 0 0 rgba(99, 102, 241, 0.2)\", \"0 0 12px rgba(99, 102, 241, 0.4)\", \"0 0 0 rgba(99, 102, 241, 0.2)\"],\n              }}\n              transition={{ duration: 3, repeat: Infinity }}\n              className=\"w-12 h-12 rounded-full bg-gradient-to-br from-accent-50/80 to-accent-100/30 dark:from-accent-900/20 dark:to-accent-800/10 flex items-center justify-center mr-4 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30\"\n            >\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 8, repeat: Infinity, ease: \"linear\" }}\n              >\n                <FiTarget size={22} />\n              </motion.div>\n            </motion.div>\n          )}\n          <div>\n            <h2 className=\"text-2xl font-medium text-gray-800 dark:text-gray-100\">\n              Execution Plan\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              {isComplete\n                ? 'All steps have been completed successfully.'\n                : 'The agent is executing this plan to complete your task.'}\n            </p>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Timeline navigation (if keyframes exist) */}\n      {keyframes && keyframes.length > 1 && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"mb-8\"\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center gap-2\">\n              <FiMapPin size={14} />\n              <span>Plan Timeline</span>\n            </div>\n            <div className=\"text-xs bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-full border border-gray-200/50 dark:border-gray-700/40 text-gray-600 dark:text-gray-400 font-medium\">\n              {currentKeyframeIndex !== undefined &&\n                keyframes[currentKeyframeIndex] &&\n                formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n            </div>\n          </div>\n          \n          {/* Elegant timeline component */}\n          <div className=\"relative h-16 bg-gradient-to-r from-gray-50/50 to-gray-100/50 dark:from-gray-800/50 dark:to-gray-850/30 rounded-xl overflow-hidden border border-gray-200/40 dark:border-gray-700/30 shadow-sm backdrop-blur-sm\">\n            {/* Timeline track */}\n            <div className=\"absolute top-1/2 left-4 right-4 h-0.5 bg-gray-200 dark:bg-gray-700 transform -translate-y-1/2\"></div>\n            \n            {/* Keyframe markers */}\n            <div className=\"absolute inset-0 flex items-center px-4\">\n              {keyframes.map((keyframe, index) => {\n                // Calculate position percentage\n                const position = keyframes.length <= 1 ? 50 : (index / (keyframes.length - 1)) * 100;\n                \n                return (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.5, delay: index * 0.07 }}\n                    onClick={() => onKeyframeChange && onKeyframeChange(index)}\n                    className=\"absolute transform -translate-x-1/2 cursor-pointer group\"\n                    style={{ left: `${position}%` }}\n                  >\n                    <div className=\"flex flex-col items-center\">\n                      <div \n                        className={`w-4 h-4 rounded-full mb-1.5 transition-all duration-200 transform group-hover:scale-110\n                          ${index === currentKeyframeIndex \n                            ? 'bg-accent-500 dark:bg-accent-400 ring-4 ring-accent-200/40 dark:ring-accent-700/30' \n                            : 'bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\n                          }`}\n                      >\n                        {/* Inner dot for current keyframe */}\n                        {index === currentKeyframeIndex && (\n                          <motion.div \n                            animate={{ scale: [1, 1.3, 1] }}\n                            transition={{ duration: 2, repeat: Infinity }}\n                            className=\"w-1.5 h-1.5 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                          />\n                        )}\n                      </div>\n                      <div className=\"text-[0.65rem] text-gray-500 dark:text-gray-400 whitespace-nowrap opacity-80 group-hover:opacity-100 transition-opacity\">\n                        {formatTimestamp(keyframe.timestamp, true)}\n                      </div>\n                    </div>\n                  </motion.div>\n                );\n              })}\n              \n              {/* Progress connection line */}\n              {currentKeyframeIndex !== undefined && currentKeyframeIndex > 0 && (\n                <motion.div \n                  initial={{ width: 0 }}\n                  animate={{ width: `${(currentKeyframeIndex / (keyframes.length - 1)) * 100}%` }}\n                  transition={{ duration: 0.7, ease: 'easeOut' }}\n                  className=\"absolute top-1/2 left-4 h-1 bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400 transform -translate-y-1/2 rounded-full\"\n                />\n              )}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Progress indicator */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center gap-2\">\n            <FiLoader size={14} className={isComplete ? \"\" : \"animate-spin-slow\"} />\n            <span>Progress</span>\n          </span>\n          <span className=\"text-sm font-medium flex items-center gap-1.5\">\n            <span className={isComplete ? \"text-green-600 dark:text-green-400\" : \"text-accent-600 dark:text-accent-400\"}>\n              {completedStepsCount}/{steps.length}\n            </span> \n            <span className=\"text-gray-500 dark:text-gray-400\">steps</span>\n          </span>\n        </div>\n        \n        <div className=\"h-2 bg-gray-100 dark:bg-gray-800/80 rounded-full overflow-hidden shadow-inner\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progressPercentage}%` }}\n            transition={{ duration: 0.8, ease: [0.34, 1.56, 0.64, 1] }}\n            className={`h-full ${\n              isComplete\n                ? 'bg-gradient-to-r from-green-400 to-green-500/90 dark:from-green-500 dark:to-green-400/90'\n                : 'bg-gradient-to-r from-accent-400 to-accent-500/90 dark:from-accent-500 dark:to-accent-400/90'\n            }`}\n          />\n        </div>\n      </motion.div>\n\n      {/* Steps list with elegant cards */}\n      <div className=\"flex-1 overflow-auto pr-2 workspace-scrollbar\">\n        <motion.div\n          className=\"space-y-4\"\n          variants={{\n            visible: { transition: { staggerChildren: 0.08 } },\n          }}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {steps.map((step, index) => {\n            const isActive = index === completedStepsCount && !isComplete;\n            return (\n              <motion.div\n                key={index}\n                variants={{\n                  hidden: { opacity: 0, y: 20 },\n                  visible: {\n                    opacity: 1,\n                    y: 0,\n                    transition: { duration: 0.6, ease: [0.22, 1, 0.36, 1] },\n                  },\n                }}\n                className=\"relative\"\n              >\n                {/* Connecting line */}\n                {index < steps.length - 1 && (\n                  <div \n                    className={`absolute left-6 w-0.5 top-12 bottom-0 \n                      ${step.done && steps[index + 1].done \n                        ? 'bg-gradient-to-b from-green-400 to-green-300/50 dark:from-green-500/80 dark:to-green-400/30' \n                        : isActive && index + 1 === completedStepsCount\n                          ? 'bg-gradient-to-b from-accent-400 to-accent-300/50 dark:from-accent-500/80 dark:to-accent-400/30'\n                          : 'bg-gradient-to-b from-gray-300 to-gray-200/50 dark:from-gray-600/80 dark:to-gray-500/30'}`} \n                  />\n                )}\n\n                <div className=\"flex items-start gap-4\">\n                  {/* Status indicator */}\n                  <div\n                    className={`flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center transition-all duration-500 shadow-sm backdrop-blur-sm\n                      ${step.done\n                        ? 'bg-gradient-to-br from-green-400/90 to-green-500/90 dark:from-green-500/90 dark:to-green-400/80 text-white'\n                        : isActive\n                          ? 'bg-gradient-to-br from-accent-400/90 to-accent-500/90 dark:from-accent-500/90 dark:to-accent-400/80 text-white animate-pulse'\n                          : 'bg-gradient-to-br from-gray-200 to-gray-300/80 dark:from-gray-700/90 dark:to-gray-600/70 text-gray-500 dark:text-gray-400'\n                      }`}\n                  >\n                    {step.done ? (\n                      <FiCheck size={22} />\n                    ) : isActive ? (\n                      <motion.div\n                        animate={{ rotate: 360 }}\n                        transition={{ duration: 3, repeat: Infinity, ease: 'linear' }}\n                      >\n                        <FiLoader size={22} />\n                      </motion.div>\n                    ) : (\n                      <FiClock size={20} />\n                    )}\n                  </div>\n\n                  {/* Step content card */}\n                  <div className=\"flex-1\">\n                    <motion.div\n                      whileHover={{ y: -2, boxShadow: \"0 8px 16px -6px rgba(0,0,0,0.05)\" }}\n                      transition={{ duration: 0.2 }}\n                      className={`bg-white dark:bg-gray-800/90 rounded-xl p-4 border shadow-sm transition-all duration-200\n                        ${step.done\n                          ? 'border-l-4 border-green-500 dark:border-green-400 border-gray-100/80 dark:border-gray-700/60'\n                          : isActive\n                            ? 'border-l-4 border-accent-500 dark:border-accent-400 border-gray-100/80 dark:border-gray-700/60'\n                            : 'border-gray-200/70 dark:border-gray-700/50 opacity-70'\n                        }`}\n                    >\n                      <div\n                        className={`text-sm leading-relaxed \n                          ${step.done\n                            ? 'text-gray-800 dark:text-gray-200'\n                            : isActive\n                              ? 'text-gray-800 dark:text-gray-200'\n                              : 'text-gray-500 dark:text-gray-400'\n                          }`}\n                      >\n                        {step.content}\n                      </div>\n\n                      {/* Step status indicator */}\n                      <div className=\"flex justify-between items-center mt-3 text-xs\">\n                        <div\n                          className={`flex items-center ${\n                            step.done\n                              ? 'text-green-600 dark:text-green-400'\n                              : isActive\n                                ? 'text-accent-600 dark:text-accent-400'\n                                : 'text-gray-500 dark:text-gray-400'\n                          }`}\n                        >\n                          {step.done ? (\n                            <>\n                              <FiCheckCircle size={12} className=\"mr-1\" />\n                              <span>Completed</span>\n                            </>\n                          ) : isActive ? (\n                            <>\n                              <FiLoader size={12} className=\"mr-1 animate-spin\" />\n                              <span>In progress</span>\n                            </>\n                          ) : (\n                            <>\n                              <FiClock size={12} className=\"mr-1\" />\n                              <span>Pending</span>\n                            </>\n                          )}\n                        </div>\n                        <div className=\"px-2 py-0.5 rounded-full text-[0.65rem] bg-gray-100/70 dark:bg-gray-700/50 text-gray-500 dark:text-gray-400\">\n                          Step {index + 1}\n                        </div>\n                      </div>\n                    </motion.div>\n                  </div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n      </div>\n\n      {/* Plan Summary (shown only when complete) */}\n      <AnimatePresence>\n        {isComplete && summary && (\n          <motion.div\n            initial={{ opacity: 0, y: 20, height: 0 }}\n            animate={{ opacity: 1, y: 0, height: 'auto' }}\n            transition={{ duration: 0.5, delay: 0.3 }}\n            className=\"mt-8 pt-6 border-t border-gray-200/60 dark:border-gray-700/30\"\n          >\n            <div className=\"flex items-center mb-3\">\n              <div className=\"w-8 h-8 rounded-full bg-gradient-to-br from-green-50/80 to-green-100/30 dark:from-green-900/20 dark:to-green-800/10 flex items-center justify-center mr-3 text-green-500 dark:text-green-400 border border-green-100/50 dark:border-green-800/30\">\n                <FiCheck size={16} />\n              </div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">Plan Summary</div>\n            </div>\n            <motion.div \n              initial={{ opacity: 0.5, y: 5 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"text-sm text-gray-700 dark:text-gray-300 bg-gradient-to-r from-white to-gray-50/80 dark:from-gray-800 dark:to-gray-800/80 p-5 rounded-xl border border-gray-200/60 dark:border-gray-700/40 shadow-sm\"\n            >\n              {summary}\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAQA;AACA;AACA;AAMA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;;;;;;AAKA;AAAA;AACA;AACA;AAAA;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAKA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;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"}