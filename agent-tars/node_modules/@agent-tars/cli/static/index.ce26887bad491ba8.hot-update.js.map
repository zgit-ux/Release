{"version":3,"file":"index.ce26887bad491ba8.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/state/atoms/ui.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749543949121\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import { atom } from 'jotai';\nimport { ConnectionStatus, PanelContent } from '../../types';\n\n/**\n * Atom for the content currently displayed in the panel\n */\nexport const activePanelContentAtom = atom<PanelContent | null>(null);\n\n/**\n * Atom for server connection status\n */\nexport const connectionStatusAtom = atom<ConnectionStatus>({\n  connected: false,\n  lastConnected: null,\n  lastError: null,\n  reconnecting: false,\n});\n\n/**\n * Atom for model info (provider and model name)\n */\nexport const modelInfoAtom = atom<{ provider: string; model: string }>({\n  provider: '',\n  model: '',\n});\n\n/**\n * Atom for sidebar collapsed state\n */\nexport const sidebarCollapsedAtom = atom<boolean>(true);\n\n/**\n * Atom for workspace panel collapsed state\n */\nexport const workspacePanelCollapsedAtom = atom<boolean>(false);\n\n/**\n * Atom for tracking processing status (when agent is running)\n */\nexport const isProcessingAtom = atom<boolean>(false);\n\n/**\n * Atom for offline mode state (view-only when disconnected)\n */\nexport const offlineModeAtom = atom<boolean>(false);\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;AAGA;;AAEA;AAGA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AAGA;;AAEA;AAGA;;AAEA;AAGA;;AAEA"}