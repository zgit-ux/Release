"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1751744572568
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/standalone/workspace/utils/contentStandardizer/standardizer.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  standardizeContent: () => (standardizeContent)
});
/* ESM import */var _handlers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/standalone/workspace/utils/contentStandardizer/handlers.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

function standardizeContent(panelContent) {
    console.log('panelContent', panelContent);
    const { type, source, title, error, arguments: toolArguments, _extra } = panelContent;
    // Handle error first
    if (error) {
        return [
            {
                type: 'text',
                name: 'ERROR',
                text: error
            }
        ];
    }
    // Handle file operations with explicit path
    if (type === 'file' && (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path)) {
        const content = toolArguments.content || (typeof source === 'string' ? source : null);
        // Handle streaming write_file operation
        if ((toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.path) && (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.content) !== undefined) {
            return [
                {
                    type: 'file_result',
                    name: 'FILE_RESULT',
                    path: toolArguments.path,
                    content: toolArguments.content
                }
            ];
        }
        if (content && typeof content === 'string') {
            return [
                {
                    type: 'file_result',
                    name: 'FILE_RESULT',
                    path: toolArguments.path,
                    content
                }
            ];
        }
        return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleFileContent)(source, toolArguments);
    }
    // Handle browser vision control
    if (type === 'browser_vision_control') {
        return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleBrowserControlContent)(panelContent, source);
    }
    // Handle image content in multimodal format
    if (Array.isArray(source) && source.some((part)=>(part === null || part === void 0 ? void 0 : part.type) === 'image_url')) {
        return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleImageContent)(source, title);
    }
    console.log('type', type);
    // Handle different content types
    switch(type){
        case 'image':
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleImageContent)(source, title);
        case 'search':
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleSearchContent)(source, toolArguments, title);
        case 'command':
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleCommandContent)(source, toolArguments);
        case 'script':
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleScriptContent)(source, toolArguments);
        case 'browser':
            return [
                {
                    type: 'json',
                    name: title || 'BROWSER_DATA',
                    data: source,
                    _extra
                }
            ];
        case 'file':
        case 'read_file':
        case 'write_file':
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleFileContent)(source, toolArguments);
        default:
            return (0,_handlers__WEBPACK_IMPORTED_MODULE_0__.handleDefaultContent)(source);
    }
}

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("6e60feffe50f0a91")
})();

}
);
//# sourceMappingURL=index.798f0a26bd83c653.hot-update.js.map