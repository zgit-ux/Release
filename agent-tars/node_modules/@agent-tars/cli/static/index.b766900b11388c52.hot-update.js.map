{"version":3,"file":"index.b766900b11388c52.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/Workspace.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Replay/ReplayControls.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Replay/TimelineSlider.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/PlanView.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/CommandResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/ImageRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/LinkRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/PlanViewerRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/ResearchReportRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/SearchResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/TextRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/ToolResultRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/hooks/useReplay.ts"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1748713399179\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1748713399140\n        var cssReload = require(\"../../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { Sidebar } from '../Sidebar';\nimport { ChatPanel } from '../Chat/ChatPanel';\nimport { WorkspacePanel } from '../Workspace/WorkspacePanel';\nimport { useLayout } from '../../hooks/useLayout';\nimport { useSession } from '../../hooks/useSession';\nimport { motion } from 'framer-motion';\nimport { Shell } from '../Common/Shell';\nimport { useReplayMode } from '../../context/ReplayModeContext';\nimport './Layout.css';\n\ninterface LayoutProps {\n  isReplayMode?: boolean;\n}\n\n/**\n * Layout Component - Main application layout\n *\n * Design principles:\n * - Clean, minimalist aesthetic with refined borders and subtle shadows\n * - Neutral color palette with elegant accent colors\n * - Consistent spacing and typography for optimal readability\n * - Seamless visual flow between different interface elements\n * - Adapts layout based on replay mode status\n */\nexport const Layout: React.FC<LayoutProps> = ({ isReplayMode: propIsReplayMode }) => {\n  const { isSidebarCollapsed, toggleSidebar } = useLayout();\n  const { connectionStatus } = useSession();\n  \n  // Use the context hook to get global replay mode status\n  const contextIsReplayMode = useReplayMode();\n  \n  // Prioritize props for backward compatibility, but fall back to context\n  const isReplayMode = propIsReplayMode !== undefined ? propIsReplayMode : contextIsReplayMode;\n\n  return (\n    <div className=\"flex h-screen bg-[#F2F3F5] dark:bg-white/5 text-gray-900 dark:text-gray-100 overflow-hidden\">\n      {/* Only show sidebar when not in replay mode */}\n      {!isReplayMode && (\n        <Sidebar isCollapsed={isSidebarCollapsed} onToggleCollapse={toggleSidebar} />\n      )}\n\n      <div className=\"flex-1 flex flex-col overflow-hidden p-3 lg:p-4 lg:pl-1\">\n        {/* Show replay header when in replay mode */}\n        {isReplayMode && (\n          <div className=\"mb-3 p-4 bg-white/90 dark:bg-gray-800/90 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 flex items-center\">\n            <div className=\"w-10 h-10 rounded-2xl bg-gray-900 dark:bg-gray-100 flex items-center justify-center text-white dark:text-gray-900 font-bold mr-3 text-base\">\n              A\n            </div>\n            <div>\n              <h1 className=\"font-bold text-gray-900 dark:text-gray-100 text-xl\">Agent TARS</h1>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Shared Conversation (Replay Mode)\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex gap-3 h-full\">\n          {/* Chat panel - adjust width based on replay mode */}\n          <motion.div \n            layout \n            className={isReplayMode ? \"w-[40%]\" : \"w-[40%]\"}\n          >\n            <Shell className=\"h-full rounded-3xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n              <ChatPanel />\n            </Shell>\n          </motion.div>\n\n          {/* Workspace panel */}\n          <motion.div layout className=\"w-[60%]\">\n            <Shell className=\"h-full rounded-3xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5\">\n              <WorkspacePanel />\n            </Shell>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiPlay, FiPause, FiSkipForward, FiX, FiClock } from 'react-icons/fi';\nimport { useReplay } from '../../hooks/useReplay';\n\n/**\n * ReplayControls - Provides playback controls for the replay functionality\n *\n * Design principles:\n * - Monochromatic black/gray design that matches the UI\n * - Minimalist controls with subtle hover states\n * - No box shadows or excessive decorations\n */\nexport const ReplayControls: React.FC = () => {\n  const {\n    replayState,\n    startReplay,\n    pauseReplay,\n    jumpToResult,\n    exitReplay,\n    setPlaybackSpeed,\n    cancelAutoPlay,\n  } = useReplay();\n\n  const { isPaused, playbackSpeed, autoPlayCountdown } = replayState;\n\n  // 确定按钮状态 - 添加倒计时判断\n  const isCountingDown = autoPlayCountdown !== null;\n  const showPlayButton = isPaused || isCountingDown;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 10 }}\n      transition={{ duration: 0.3 }}\n      className=\"flex items-center justify-between gap-2 px-4 py-3 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\"\n    >\n      {/* Exit button - moved to left side */}\n      <motion.button\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={exitReplay}\n        className=\"p-1.5 rounded-full text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 transition-colors\"\n        title=\"Exit replay\"\n      >\n        <FiX size={16} />\n      </motion.button>\n\n      {/* Center playback controls */}\n      <div className=\"flex items-center gap-3\">\n        {/* Play/Pause button - now larger and more prominent */}\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={() => {\n            if (isCountingDown) {\n              // 如果在倒计时，取消倒计时并开始播放\n              cancelAutoPlay();\n              startReplay();\n            } else if (isPaused) {\n              startReplay();\n            } else {\n              pauseReplay();\n            }\n          }}\n          className=\"w-10 h-10 flex items-center justify-center rounded-full bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800\"\n        >\n          {showPlayButton ? <FiPlay size={18} /> : <FiPause size={18} />}\n        </motion.button>\n\n        {/* Skip to end button */}\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={() => {\n            // 如果在倒计时，先取消倒计时\n            if (isCountingDown) {\n              cancelAutoPlay();\n            }\n            jumpToResult();\n          }}\n          className=\"flex items-center justify-center w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600\"\n          title=\"Skip to end\"\n        >\n          <FiSkipForward size={16} />\n        </motion.button>\n      </div>\n\n      {/* Playback speed controls */}\n      <div className=\"flex items-center gap-1\">\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 mr-1\">\n          <FiClock size={12} className=\"inline mr-1\" />\n          Speed\n        </span>\n        {[1, 2, 3].map((speed) => (\n          <motion.button\n            key={speed}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setPlaybackSpeed(speed)}\n            className={`w-6 h-6 flex items-center justify-center rounded-full text-xs font-medium ${\n              playbackSpeed === speed\n                ? 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 border border-gray-300/50 dark:border-gray-600/30'\n                : 'text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50'\n            }`}\n          >\n            {speed}x\n          </motion.button>\n        ))}\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMessageSquare, FiTool, FiImage, FiCpu, FiBookOpen } from 'react-icons/fi';\nimport { Event, EventType } from '../../types';\nimport { useReplay } from '../../hooks/useReplay';\nimport { formatTimestamp } from '../../utils/formatters';\n\n/**\n * TimelineSlider - Interactive timeline for replay navigation\n *\n * Enhanced with:\n * - Monochromatic design matching the app's black/gray aesthetic\n * - Subtle markers with minimal visual noise\n * - No box shadows or gradients\n */\nexport const TimelineSlider: React.FC = () => {\n  const { replayState, jumpToPosition, getCurrentPosition, getCurrentEvent } = useReplay();\n\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoverPosition, setHoverPosition] = useState<number | null>(null);\n  const [hoverEvent, setHoverEvent] = useState<Event | null>(null);\n\n  const { events } = replayState;\n  const currentPosition = getCurrentPosition();\n  const currentEvent = getCurrentEvent();\n\n  // Handle mouse down on slider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    setIsDragging(true);\n    updatePositionFromMouse(e);\n  };\n\n  // Handle mouse move for dragging and hover feedback\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    // Update hover position and event\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    setHoverPosition(position);\n\n    // Find event closest to hover position\n    if (events.length > 0) {\n      const index = Math.floor(position * events.length);\n      const boundedIndex = Math.max(0, Math.min(index, events.length - 1));\n      setHoverEvent(events[boundedIndex]);\n    }\n\n    // Update position if dragging\n    if (isDragging) {\n      updatePositionFromMouse(e);\n    }\n  };\n\n  // Handle mouse up to end dragging\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Calculate position from mouse event\n  const updatePositionFromMouse = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    jumpToPosition(position);\n  };\n\n  // Handle mouse leave\n  const handleMouseLeave = () => {\n    setHoverPosition(null);\n    setHoverEvent(null);\n    setIsDragging(false);\n  };\n\n  // Add global mouse up handler when dragging\n  useEffect(() => {\n    if (isDragging) {\n      const handleGlobalMouseUp = () => setIsDragging(false);\n      window.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => window.removeEventListener('mouseup', handleGlobalMouseUp);\n    }\n  }, [isDragging]);\n\n  // Get color for event marker\n  const getEventColor = (event: Event) => {\n    switch (event.type) {\n      case EventType.USER_MESSAGE:\n        return 'bg-gray-400 dark:bg-gray-500';\n      case EventType.ASSISTANT_MESSAGE:\n        return 'bg-gray-600 dark:bg-gray-400';\n      case EventType.TOOL_CALL:\n      case EventType.TOOL_RESULT:\n        return 'bg-gray-500 dark:bg-gray-400';\n      case EventType.ENVIRONMENT_INPUT:\n        return 'bg-gray-500 dark:bg-gray-400';\n      case EventType.PLAN_UPDATE:\n      case EventType.PLAN_FINISH:\n        return 'bg-gray-500 dark:bg-gray-400';\n      case EventType.FINAL_ANSWER:\n        return 'bg-gray-700 dark:bg-gray-300';\n      default:\n        return 'bg-gray-400 dark:bg-gray-500';\n    }\n  };\n\n  // Get icon for event type (for tooltip)\n  const getEventIcon = (event: Event) => {\n    switch (event.type) {\n      case EventType.USER_MESSAGE:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case EventType.ASSISTANT_MESSAGE:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case EventType.TOOL_CALL:\n      case EventType.TOOL_RESULT:\n        return <FiTool size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case EventType.ENVIRONMENT_INPUT:\n        return <FiImage size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case EventType.PLAN_UPDATE:\n      case EventType.PLAN_FINISH:\n        return <FiCpu size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case EventType.FINAL_ANSWER:\n        return <FiBookOpen size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      default:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n    }\n  };\n\n  // Get event description for hover tooltip\n  const getEventDescription = (event: Event) => {\n    switch (event.type) {\n      case EventType.USER_MESSAGE:\n        return 'User Message';\n      case EventType.ASSISTANT_MESSAGE:\n        return 'Assistant Response';\n      case EventType.TOOL_CALL:\n        return `Tool Call: ${(event as any).name || ''}`;\n      case EventType.TOOL_RESULT:\n        return `Tool Result: ${(event as any).name || ''}`;\n      case EventType.ENVIRONMENT_INPUT:\n        return 'Browser Screenshot';\n      case EventType.PLAN_UPDATE:\n        return 'Plan Update';\n      case EventType.PLAN_FINISH:\n        return 'Plan Completed';\n      case EventType.FINAL_ANSWER:\n        return 'Research Report';\n      default:\n        return event.type;\n    }\n  };\n\n  // Get event content preview for the tooltip\n  const getEventContentPreview = (event: Event) => {\n    if (event.type === EventType.USER_MESSAGE || event.type === EventType.ASSISTANT_MESSAGE) {\n      const content =\n        typeof event.content === 'string'\n          ? event.content\n          : Array.isArray(event.content) &&\n              event.content.length > 0 &&\n              event.content[0].type === 'text'\n            ? event.content[0].text\n            : '';\n\n      return content.length > 50 ? content.substring(0, 47) + '...' : content;\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"relative px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\">\n      {/* Current time display */}\n      {currentEvent && (\n        <div className=\"absolute left-3 top-0 text-xs text-gray-500 dark:text-gray-400 py-1\">\n          {formatTimestamp(currentEvent.timestamp)}\n        </div>\n      )}\n\n      {/* Timeline slider with modern media player styling */}\n      <div\n        ref={sliderRef}\n        className=\"relative h-6 mt-4 cursor-pointer\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseLeave}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* Track background - simplified and more minimal */}\n        <div className=\"absolute inset-0 top-1/2 -translate-y-1/2 h-1.5 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n          {/* No texture dots, keeping it minimal */}\n        </div>\n\n        {/* Progress fill */}\n        <div\n          className=\"absolute top-1/2 -translate-y-1/2 left-0 h-1.5 bg-gray-800 dark:bg-gray-300 rounded-full\"\n          style={{ width: `${currentPosition}%` }}\n        />\n\n        {/* Event markers - more subtle, minimal style */}\n        {events.map((event, index) => {\n          const position = (index / (events.length - 1)) * 100;\n\n          return (\n            <motion.div\n              key={`${event.id}-${index}`}\n              className={`absolute top-1/2 -translate-y-1/2 w-1.5 h-3 ${getEventColor(event)} rounded-sm`}\n              style={{ left: `${position}%`, marginLeft: '-1px' }}\n              initial={{ opacity: 0.6, height: 3 }}\n              animate={{\n                opacity: 0.8,\n                height: currentEvent?.id === event.id ? 5 : 3,\n              }}\n              whileHover={{ opacity: 1, height: 5 }}\n              transition={{ duration: 0.2 }}\n            />\n          );\n        })}\n\n        {/* Playhead - larger and more prominent but without shadow */}\n        <motion.div\n          className=\"absolute top-[5px] -translate-y-1/2 w-4 h-4 rounded-full bg-white dark:bg-gray-200 border-2 border-gray-800 dark:border-gray-600 z-30\"\n          style={{ left: `calc(${currentPosition}% - 8px)` }}\n          animate={{\n            scale: isDragging ? 1.2 : 1,\n          }}\n          transition={{ duration: 0.2 }}\n        />\n\n        {/* Hover position indicator */}\n        {hoverPosition !== null && !isDragging && (\n          <motion.div\n            className=\"absolute top-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400/40 dark:bg-gray-500/40 rounded-full z-10\"\n            style={{ left: `${hoverPosition * 100}%` }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </div>\n\n      {/* Improved hover tooltip - monochromatic style */}\n      {hoverEvent && hoverPosition !== null && (\n        <motion.div\n          className=\"absolute bottom-full mb-2 p-2 bg-gray-100 dark:bg-gray-800 rounded-lg border border-gray-200/50 dark:border-gray-700/30 text-xs max-w-xs z-50\"\n          style={{\n            left: `${hoverPosition * 100}%`,\n            transform: 'translateX(-50%)',\n          }}\n          initial={{ opacity: 0, y: 5, scale: 0.95 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 flex-shrink-0\">{getEventIcon(hoverEvent)}</div>\n            <div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">\n                {getEventDescription(hoverEvent)}\n              </div>\n\n              {getEventContentPreview(hoverEvent) && (\n                <div className=\"mt-1 text-gray-600 dark:text-gray-400 italic line-clamp-2 text-[10px]\">\n                  \"{getEventContentPreview(hoverEvent)}\"\n                </div>\n              )}\n\n              <div className=\"mt-1 text-[10px] text-gray-500 dark:text-gray-400\">\n                {formatTimestamp(hoverEvent.timestamp)}\n              </div>\n            </div>\n          </div>\n\n          {/* Tooltip arrow */}\n          <div className=\"absolute left-1/2 bottom-0 w-2 h-2 bg-gray-100 dark:bg-gray-800 border-r border-b border-gray-200/50 dark:border-gray-700/30 transform rotate-45 translate-y-1 -translate-x-1\"></div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiArrowLeft, FiCpu, FiPlayCircle, FiPauseCircle } from 'react-icons/fi';\nimport { useSession } from '../../hooks/useSession';\nimport { usePlan } from '../../hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n * \n * Features:\n * - Shows current plan status and steps\n * - Supports timeline navigation through plan keyframes\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-gray-500 dark:text-gray-400\">No plan available</div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col\"\n    >\n      {/* Header with back button */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-100/40 dark:border-gray-700/20\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={onBack}\n            className=\"mr-3 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/50 dark:hover:bg-gray-700/30 rounded-lg border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={16} />\n          </motion.button>\n\n          <div className=\"w-8 h-8 mr-3 rounded-lg bg-white dark:bg-gray-800 border border-gray-100/50 dark:border-gray-700/30 flex items-center justify-center text-gray-600 dark:text-gray-400\">\n            <FiCpu size={16} />\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              Task Plan\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {displayedPlan.isComplete ? \"Completed\" : \"In progress\"}\n            </div>\n          </div>\n        </div>\n\n        {/* Future replay controls */}\n        <div className=\"flex items-center space-x-2\">\n          {currentPlan.keyframes && currentPlan.keyframes.length > 1 && (\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {currentKeyframeIndex !== undefined && (\n                <span>Keyframe {currentKeyframeIndex + 1} of {currentPlan.keyframes.length}</span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Plan content */}\n      <div className=\"flex-1 overflow-auto bg-gray-50/50 dark:bg-gray-900/30\">\n        <PlanViewerRenderer \n          plan={{\n            ...displayedPlan,\n            keyframes: currentPlan.keyframes,\n            currentKeyframeIndex\n          }}\n          onKeyframeChange={handleKeyframeChange}\n        />\n      </div>\n    </motion.div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useSession } from '../../hooks/useSession';\nimport { useTool } from '../../hooks/useTool';\nimport { usePlan } from '../../hooks/usePlan';\nimport { TOOL_TYPES } from '../../constants';\nimport { usePro } from '../../hooks/usePro';\nimport {\n  FiImage,\n  FiFile,\n  FiSearch,\n  FiMonitor,\n  FiTerminal,\n  FiGrid,\n  FiLayout,\n  FiArrowRight,\n  FiClock,\n  FiCheck,\n  FiX,\n  FiCpu,\n} from 'react-icons/fi';\nimport { formatTimestamp } from '../../utils/formatters';\nimport './Workspace.css';\n\n// Filter types for workspace content\ntype ContentFilter = 'all' | 'image' | 'document' | 'search' | 'terminal' | 'browser';\n\n/**\n * Helper function to get icon for filter type\n */\nfunction getFilterIcon(type: ContentFilter) {\n  switch (type) {\n    case 'all':\n      return <FiGrid size={16} />;\n    case 'image':\n      return <FiImage size={16} />;\n    case 'document':\n      return <FiFile size={16} />;\n    case 'search':\n      return <FiSearch size={16} />;\n    case 'browser':\n      return <FiMonitor size={16} />;\n    case 'terminal':\n      return <FiTerminal size={16} />;\n    default:\n      return <FiGrid size={16} />;\n  }\n}\n\n/**\n * WorkspaceContent Component - Displays tool results and allows filtering\n *\n * Design principles:\n * - Clean monochromatic design with selective accent highlights\n * - Elegant card layout with subtle shadows and refined spacing\n * - Refined micro-interactions to enhance user experience\n * - Robust information hierarchy through typography and spacing\n */\nexport const WorkspaceContent: React.FC = () => {\n  const { activeSessionId, toolResults, setActivePanelContent } = useSession();\n\n  const { getToolIcon } = useTool();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [activeFilter, setActiveFilter] = useState<ContentFilter>('all');\n  const [hoveredItemId, setHoveredItemId] = useState<string | null>(null);\n  const isProMode = usePro();\n\n  const activeResults = activeSessionId ? toolResults[activeSessionId] || [] : [];\n\n  // Filter results based on selected type\n  const filteredResults = activeResults.filter((result) => {\n    if (activeFilter === 'all') return true;\n    if (activeFilter === 'document') return result.type === 'file';\n    return result.type === activeFilter;\n  });\n\n  // Group results by date (today, yesterday, older)\n  const groupResultsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    return filteredResults.reduce(\n      (groups, result) => {\n        const resultDate = new Date(result.timestamp);\n        let group = 'older';\n\n        if (resultDate >= today) {\n          group = 'today';\n        } else if (resultDate >= yesterday) {\n          group = 'yesterday';\n        }\n\n        if (!groups[group]) groups[group] = [];\n        groups[group].push(result);\n        return groups;\n      },\n      {} as Record<string, typeof filteredResults>,\n    );\n  };\n\n  const groupedResults = groupResultsByDate();\n\n  // Handle clicking on a result item\n  const handleResultClick = (result: any) => {\n    setActivePanelContent({\n      type: result.type,\n      source: result.content,\n      title: result.name,\n      timestamp: result.timestamp,\n      toolCallId: result.toolCallId,\n      error: result.error,\n    });\n  };\n\n  // Animation variants\n  const cardVariants = {\n    initial: { y: 10, opacity: 0 },\n    animate: { y: 0, opacity: 1, transition: { duration: 0.3 } },\n    hover: {\n      y: -4,\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\n      transition: { duration: 0.2 },\n    },\n    exit: { y: -10, opacity: 0, transition: { duration: 0.2 } },\n  };\n\n  const emptyStateVariants = {\n    initial: { opacity: 0, scale: 0.95 },\n    animate: {\n      opacity: 1,\n      scale: 1,\n      transition: { duration: 0.4, delay: 0.1 },\n    },\n  };\n\n  // Add Plan view button\n  const renderPlanButton = () => {\n    console.log('isProMode', isProMode);\n\n    if (!isProMode) return null;\n\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4 }}\n        className=\"mb-6\"\n      >\n        <motion.div\n          whileHover={{ y: -4, boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)' }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() =>\n            setActivePanelContent({\n              type: 'plan',\n              source: null,\n              title: 'Task Plan',\n              timestamp: Date.now(),\n            })\n          }\n          className=\"bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 overflow-hidden cursor-pointer transition-all duration-200\"\n        >\n          <div className=\"p-4\">\n            <div className=\"flex items-start\">\n              <div\n                className={`w-10 h-10 rounded-xl flex items-center justify-center mr-3 flex-shrink-0 ${\n                  isComplete\n                    ? 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400 border border-green-100/50 dark:border-green-800/30'\n                    : 'bg-gray-100 dark:bg-gray-700 text-accent-500 dark:text-accent-400 border border-[#E5E6EC] dark:border-gray-700/30'\n                }`}\n              >\n                {isComplete ? (\n                  <FiCpu size={18} />\n                ) : (\n                  <motion.div\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    <FiCpu size={18} />\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between\">\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100 mb-1 truncate pr-2\">\n                    Task Plan\n                  </h4>\n                  <motion.div\n                    animate={{\n                      opacity: 1,\n                      x: 0,\n                    }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <FiArrowRight size={16} className=\"text-gray-400 dark:text-gray-500\" />\n                  </motion.div>\n                </div>\n                <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                  <FiClock size={12} className=\"mr-1\" />\n                  {isComplete ? 'Completed' : 'In progress'}\n                </div>\n\n                {/* Progress bar */}\n                <div className=\"mt-3 mb-2\">\n                  <div className=\"flex justify-between items-center mb-1.5 text-xs\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Progress</span>\n                    <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                      {completedSteps}/{totalSteps}\n                    </span>\n                  </div>\n                  <div className=\"h-1.5 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden\">\n                    <div\n                      className={`h-full ${\n                        isComplete\n                          ? 'bg-gradient-to-r from-green-400 to-green-500'\n                          : 'bg-gradient-to-r from-accent-400 to-accent-500'\n                      }`}\n                      style={{ width: `${totalSteps ? (completedSteps / totalSteps) * 100 : 0}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 dark:bg-gray-700/30 px-4 py-2 border-t border-[#E5E6EC] dark:border-gray-700/30\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center text-xs\">\n                <span\n                  className={`w-2 h-2 rounded-full mr-1.5 ${\n                    isComplete\n                      ? 'bg-green-500 dark:bg-green-400'\n                      : 'bg-accent-500 dark:bg-accent-400'\n                  }`}\n                />\n                <span className=\"text-gray-500 dark:text-gray-400\">View plan details</span>\n              </div>\n              <div className=\"flex items-center text-xs\">\n                {isComplete ? (\n                  <span className=\"text-gray-500 dark:text-gray-400 flex items-center\">\n                    <FiCheck size={12} className=\"mr-1 text-green-500 dark:text-green-400\" />\n                    Complete\n                  </span>\n                ) : (\n                  <span className=\"text-gray-500 dark:text-gray-400 flex items-center\">\n                    <FiClock size={12} className=\"mr-1\" />\n                    Active\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-800\">\n      {/* Header with title */}\n      <div className=\"flex items-center px-6 py-4\">\n        <div className=\"w-8 h-8 mr-3 rounded-xl bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-gray-500 dark:text-gray-400 border border-[#E5E6EC] dark:border-gray-700/30\">\n          <FiLayout size={16} />\n        </div>\n        <h2 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg\">Workspace</h2>\n      </div>\n\n      {/* Filter tabs */}\n      <div className=\"flex items-center px-6 py-3 overflow-x-auto\">\n        {(['all', 'image', 'document', 'search', 'browser', 'terminal'] as ContentFilter[]).map(\n          (filter) => (\n            <motion.button\n              key={filter}\n              whileHover={{ y: -2 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setActiveFilter(filter)}\n              className={`flex items-center px-3 py-1.5 mr-3 rounded-lg text-sm transition-all duration-200 ${\n                activeFilter === filter\n                  ? 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 font-medium'\n                  : 'text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800/60'\n              }`}\n            >\n              <span className=\"mr-2\">{getFilterIcon(filter)}</span>\n              <span className=\"capitalize\">{filter}</span>\n            </motion.button>\n          ),\n        )}\n      </div>\n\n      {/* Content area */}\n      <div className=\"flex-1 overflow-y-auto p-6\">\n        <AnimatePresence mode=\"wait\">\n          {Object.entries(groupedResults).length === 0 ? (\n            <motion.div\n              key=\"empty-state\"\n              variants={emptyStateVariants}\n              initial=\"initial\"\n              animate=\"animate\"\n              className=\"flex flex-col items-center justify-center h-full text-gray-500 dark:text-gray-400 text-center py-20\"\n            >\n              <div className=\"w-16 h-16 rounded-2xl bg-gray-100 dark:bg-gray-700 flex items-center justify-center mb-4 border border-[#E5E6EC] dark:border-gray-700/30\">\n                {getFilterIcon(activeFilter)}\n              </div>\n              <h3 className=\"text-lg font-medium mb-2 text-gray-700 dark:text-gray-300\">\n                No {activeFilter === 'all' ? 'items' : activeFilter + ' items'} yet\n              </h3>\n              <p className=\"text-sm max-w-md\">\n                Tool results will appear here as you interact with the agent.\n              </p>\n            </motion.div>\n          ) : (\n            <div className=\"space-y-8\">\n              {/* Plan card - add at the top */}\n              {activeFilter === 'all' && renderPlanButton()}\n\n              {Object.entries(groupedResults).map(([dateGroup, results]) => (\n                <div key={dateGroup} className=\"mb-8\">\n                  <h3 className=\"text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-4\">\n                    {dateGroup === 'today'\n                      ? 'Today'\n                      : dateGroup === 'yesterday'\n                        ? 'Yesterday'\n                        : 'Older'}\n                  </h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {results.map((result) => (\n                      <motion.div\n                        key={result.id}\n                        variants={cardVariants}\n                        initial=\"initial\"\n                        animate=\"animate\"\n                        whileHover=\"hover\"\n                        exit=\"exit\"\n                        onClick={() => handleResultClick(result)}\n                        onMouseEnter={() => setHoveredItemId(result.id)}\n                        onMouseLeave={() => setHoveredItemId(null)}\n                        className=\"bg-white dark:bg-gray-800 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 overflow-hidden cursor-pointer transition-all duration-200\"\n                      >\n                        <div className=\"p-4\">\n                          <div className=\"flex items-start\">\n                            <div className=\"w-10 h-10 rounded-xl relative flex items-center justify-center mr-3 flex-shrink-0 overflow-hidden\">\n                              {/* Add gradient background and shadow based on tool type */}\n                              <div\n                                className={`absolute inset-0 opacity-20 ${\n                                  result.type === 'search'\n                                    ? 'bg-gradient-to-br from-blue-400 to-indigo-500'\n                                    : result.type === 'browser'\n                                      ? 'bg-gradient-to-br from-purple-400 to-pink-500'\n                                      : result.type === 'command'\n                                        ? 'bg-gradient-to-br from-green-400 to-emerald-500'\n                                        : result.type === 'file'\n                                          ? 'bg-gradient-to-br from-yellow-400 to-amber-500'\n                                          : result.type === 'image'\n                                            ? 'bg-gradient-to-br from-red-400 to-rose-500'\n                                            : result.type === 'browser_vision_control'\n                                              ? 'bg-gradient-to-br from-cyan-400 to-teal-500'\n                                              : 'bg-gradient-to-br from-gray-400 to-gray-500'\n                                }`}\n                              ></div>\n                              <div className=\"relative z-10 text-center\">\n                                {getToolIcon(result.type)}\n                              </div>\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-start justify-between\">\n                                <h4 className=\"font-medium text-gray-900 dark:text-gray-100 mb-1 truncate pr-2\">\n                                  {result.name}\n                                </h4>\n                                <motion.div\n                                  animate={{\n                                    opacity: hoveredItemId === result.id ? 1 : 0,\n                                    x: hoveredItemId === result.id ? 0 : 5,\n                                  }}\n                                  transition={{ duration: 0.2 }}\n                                >\n                                  <FiArrowRight\n                                    size={16}\n                                    className=\"text-gray-400 dark:text-gray-500\"\n                                  />\n                                </motion.div>\n                              </div>\n                              <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                                <FiClock size={12} className=\"mr-1\" />\n                                {formatTimestamp(result.timestamp)}\n                              </div>\n\n                              {/* Conditional content preview based on type */}\n                              {result.type === 'search' && (\n                                <div className=\"mt-3 text-xs text-gray-600 dark:text-gray-300 rounded-md line-clamp-2\">\n                                  <span className=\"font-medium\">Search:</span>{' '}\n                                  {typeof result.content === 'string'\n                                    ? result.content.substring(0, 100)\n                                    : Array.isArray(result.content) &&\n                                        result.content.some((p) => p.name === 'QUERY')\n                                      ? result.content\n                                          .find((p) => p.name === 'QUERY')\n                                          ?.text?.substring(0, 100)\n                                      : 'Search results'}\n                                </div>\n                              )}\n\n                              {result.type === 'command' && (\n                                <div className=\"mt-3 text-xs text-gray-600 dark:text-gray-300 bg-gray-50 dark:bg-gray-700/50 p-2 rounded-md line-clamp-1 font-mono\">\n                                  {typeof result.content === 'object'\n                                    ? result.content.command || 'Command executed'\n                                    : Array.isArray(result.content) &&\n                                        result.content.some((p) => p.name === 'COMMAND')\n                                      ? result.content.find((p) => p.name === 'COMMAND')?.text\n                                      : 'Command executed'}\n                                </div>\n                              )}\n\n                              {result.type === 'browser' && (\n                                <div className=\"mt-3 text-xs text-gray-600 dark:text-gray-300 flex items-center\">\n                                  <FiMonitor size={12} className=\"mr-1\" />\n                                  {typeof result.content === 'object' && result.content.url\n                                    ? result.content.url.substring(0, 40) +\n                                      (result.content.url.length > 40 ? '...' : '')\n                                    : 'Browser navigation'}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"bg-gray-50 dark:bg-gray-700/30 px-4 py-2 border-t border-[#E5E6EC] dark:border-gray-700/30\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center text-xs\">\n                              <span\n                                className={`w-2 h-2 rounded-full mr-1.5 ${\n                                  result.error\n                                    ? 'bg-gray-400 dark:bg-gray-500'\n                                    : 'bg-gray-400 dark:bg-gray-500'\n                                }`}\n                              />\n                              <span className=\"text-gray-500 dark:text-gray-400\">\n                                {result.type}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center text-xs\">\n                              {result.error ? (\n                                <span className=\"text-gray-500 dark:text-gray-400 flex items-center\">\n                                  <FiX size={12} className=\"mr-1\" />\n                                  Error\n                                </span>\n                              ) : (\n                                <span className=\"text-gray-500 dark:text-gray-400 flex items-center\">\n                                  <FiCheck size={12} className=\"mr-1\" />\n                                  Success\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </motion.div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '../../hooks/useSession';\nimport { useTool } from '../../hooks/useTool';\nimport { FiArrowLeft, FiLayout, FiFileText, FiBookOpen } from 'react-icons/fi';\nimport { formatTimestamp } from '../../utils/formatters';\nimport { ToolResultRenderer } from './renderers/ToolResultRenderer';\nimport { ResearchReportRenderer } from './renderers/ResearchReportRenderer';\n\n/**\n * WorkspaceDetail Component - Displays details of a single tool result or report\n */\nexport const WorkspaceDetail: React.FC = () => {\n  const { activePanelContent, setActivePanelContent, toolResults, activeSessionId } = useSession();\n\n  const { getToolIcon } = useTool();\n\n  if (!activePanelContent) {\n    return null;\n  }\n\n  const handleBackToList = () => {\n    setActivePanelContent(null);\n  };\n\n  // 特殊处理 final_answer 类型或研究报告内容\n  if (\n    activePanelContent?.type === 'research_report' ||\n    (activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer'))\n  ) {\n    return (\n      <ResearchReportRenderer\n        content={\n          typeof activePanelContent.source === 'string'\n            ? activePanelContent.source\n            : JSON.stringify(activePanelContent.source, null, 2)\n        }\n        title={activePanelContent.title || 'Research Report'}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // 特殊处理研究报告内容\n  if (activePanelContent?.type === 'research_report') {\n    return (\n      <ResearchReportRenderer\n        content={activePanelContent.source}\n        title={activePanelContent.title}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // Convert legacy format content to standardized tool result parts\n  const getStandardizedContent = (): ToolResultContentPart[] => {\n    const { type, source, title, error, arguments: toolArguments } = activePanelContent;\n\n    // Show error if present\n    if (error) {\n      return [\n        {\n          type: 'text',\n          name: 'ERROR',\n          text: error,\n        },\n      ];\n    }\n\n    // Handle browser_vision_control type specifically\n    if (type === 'browser_vision_control') {\n      // Create browser_control part for the specialized renderer\n      return [\n        {\n          type: 'browser_control',\n          name: 'BROWSER_CONTROL',\n          toolCallId: activePanelContent.toolCallId,\n          thought: toolArguments?.thought || '',\n          step: toolArguments?.step || '',\n          action: toolArguments?.action || '',\n          status: source?.status || 'unknown',\n        },\n      ];\n    }\n\n    // Based on tool type, convert to standardized format\n    switch (type) {\n      case 'image':\n        // Image content\n        if (typeof source === 'string' && source.startsWith('data:image/')) {\n          const [mimeTypePrefix, base64Data] = source.split(',');\n          const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];\n\n          return [\n            {\n              type: 'image',\n              imageData: base64Data,\n              mimeType,\n              name: activePanelContent.title,\n            },\n          ];\n        }\n        return [\n          {\n            type: 'text',\n            text: 'Image could not be displayed',\n          },\n        ];\n\n      case 'search':\n        // Search results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // Handle new multimodal format\n          const resultsItem = source.find((item) => item.name === 'RESULTS');\n          const queryItem = source.find((item) => item.name === 'QUERY');\n\n          if (resultsItem && resultsItem.text) {\n            // Parse results text into separate result items\n            const resultBlocks = resultsItem.text.split('---').filter(Boolean);\n            const parsedResults = resultBlocks.map((block) => {\n              const lines = block.trim().split('\\n');\n              const titleLine = lines[0] || '';\n              const urlLine = lines[1] || '';\n              const snippet = lines.slice(2).join('\\n');\n\n              const title = titleLine.replace(/^\\[\\d+\\]\\s*/, '').trim();\n              const url = urlLine.replace(/^URL:\\s*/, '').trim();\n\n              return { title, url, snippet };\n            });\n\n            // Return only the search_result part, removing the redundant text query part\n            return [\n              {\n                type: 'search_result',\n                name: 'SEARCH_RESULTS',\n                results: parsedResults,\n                query: queryItem?.text,\n              },\n            ];\n          }\n        }\n\n        // Handle old format\n        if (source && typeof source === 'object' && source.results) {\n          return [\n            {\n              type: 'search_result',\n              name: 'SEARCH_RESULTS',\n              results: source.results,\n              query: source.query,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'command':\n        // Command results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // New multimodal format\n          const commandItem = source.find((item) => item.name === 'COMMAND');\n          const stdoutItem = source.find((item) => item.name === 'STDOUT');\n          const stderrItem = source.find((item) => item.name === 'STDERR');\n\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: commandItem?.text || toolArguments?.command,\n              stdout: stdoutItem?.text || '',\n              stderr: stderrItem?.text || '',\n              exitCode: source.find((item) => item.name === 'EXIT_CODE')?.value,\n            },\n          ];\n        }\n\n        // Old format\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'command_result',\n              name: 'COMMAND_RESULT',\n              command: source.command || toolArguments?.command,\n              stdout: source.output || source.stdout || '',\n              stderr: source.stderr || '',\n              exitCode: source.exitCode,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      case 'browser':\n        // Browser results\n        if (Array.isArray(source) && source.some((item) => item.type === 'text')) {\n          // 处理数组格式的浏览器结果\n          const contentText = source\n            .filter((item) => item.type === 'text')\n            .map((item) => item.text)\n            .join('\\n');\n\n          return [\n            {\n              type: 'browser_result',\n              name: 'BROWSER_RESULT',\n              url: extractUrlFromContent(contentText),\n              content: contentText,\n              title: 'Browser Navigation',\n              contentType: 'text',\n            },\n          ];\n        }\n\n        // Old format or direct string content\n        return [\n          {\n            type: 'browser_result',\n            name: 'BROWSER_RESULT',\n            url: typeof source === 'object' && source.url ? source.url : '',\n            content:\n              typeof source === 'object'\n                ? source.content || source.text || JSON.stringify(source, null, 2)\n                : typeof source === 'string'\n                  ? source\n                  : JSON.stringify(source, null, 2),\n            contentType: 'text',\n            title: 'Browser Navigation',\n          },\n        ];\n\n      case 'file':\n        // File results\n        if (source && typeof source === 'object') {\n          return [\n            {\n              type: 'text',\n              name: 'FILE_PATH',\n              text: `File: ${source.path || 'Unknown file'}`,\n            },\n            {\n              type: 'text',\n              name: 'FILE_CONTENT',\n              text: source.content || 'No content available',\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n\n      default:\n        // Default handling for unknown types\n        if (typeof source === 'object') {\n          return [\n            {\n              type: 'json',\n              name: 'JSON_DATA',\n              data: source,\n            },\n          ];\n        }\n\n        return [\n          {\n            type: 'text',\n            text: typeof source === 'string' ? source : JSON.stringify(source, null, 2),\n          },\n        ];\n    }\n  };\n\n  // 辅助函数：从文本内容中提取URL\n  const extractUrlFromContent = (content: string): string => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return '';\n  };\n\n  // Handle tool result content action\n  const handleContentAction = (action: string, data: any) => {\n    if (action === 'zoom' && data.src) {\n      // Here you could open a modal with the zoomed image\n      console.log('Zoom image:', data.src);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col\"\n    >\n      {/* Header with tool info and actions */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-100/40 dark:border-gray-700/20\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleBackToList}\n            className=\"mr-3 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/50 dark:hover:bg-gray-700/30 rounded-lg border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30\"\n            title=\"Back to list\"\n          >\n            <FiArrowLeft size={16} />\n          </motion.button>\n\n          <div className=\"w-10 h-10 mr-3 rounded-xl flex items-center justify-center relative overflow-hidden\">\n            {/* 使用特殊图标替代 final_answer 工具图标 */}\n            {activePanelContent.toolCallId?.startsWith('final-answer') ? (\n              <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400 to-accent-500 opacity-20\"></div>\n            ) : (\n              <div\n                className={`absolute inset-0 opacity-20 ${\n                  activePanelContent?.type === 'search'\n                    ? 'bg-gradient-to-br from-blue-400 to-indigo-500'\n                    : activePanelContent?.type === 'browser'\n                      ? 'bg-gradient-to-br from-purple-400 to-pink-500'\n                      : activePanelContent?.type === 'command'\n                        ? 'bg-gradient-to-br from-green-400 to-emerald-500'\n                        : activePanelContent?.type === 'file'\n                          ? 'bg-gradient-to-br from-yellow-400 to-amber-500'\n                          : activePanelContent?.type === 'image'\n                            ? 'bg-gradient-to-br from-red-400 to-rose-500'\n                            : activePanelContent?.type === 'browser_vision_control'\n                              ? 'bg-gradient-to-br from-cyan-400 to-teal-500'\n                              : 'bg-gradient-to-br from-gray-400 to-gray-500'\n                }`}\n              ></div>\n            )}\n            <div className=\"relative z-10\">\n              {activePanelContent.toolCallId?.startsWith('final-answer') ? (\n                <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={20} />\n              ) : (\n                getToolIcon(activePanelContent?.type || 'other')\n              )}\n            </div>\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {activePanelContent.title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {formatTimestamp(activePanelContent.timestamp)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"flex-1 overflow-auto bg-gray-50/50 dark:bg-gray-900/30 p-6\">\n        <ToolResultRenderer content={getStandardizedContent()} onAction={handleContentAction} />\n      </div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { useSession } from '../../hooks/useSession';\nimport { WorkspaceContent } from './WorkspaceContent';\nimport { WorkspaceDetail } from './WorkspaceDetail';\nimport { PlanView } from './PlanView';\nimport { useReplay } from '../../hooks/useReplay';\nimport { TimelineSlider } from '../Replay/TimelineSlider';\nimport { ReplayControls } from '../Replay/ReplayControls';\nimport { usePro } from '../../hooks/usePro';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport './Workspace.css';\n\n/**\n * WorkspacePanel Component - Container for workspace content\n */\nexport const WorkspacePanel: React.FC = () => {\n  const { activeSessionId, activePanelContent, setActivePanelContent } = useSession();\n  const { replayState } = useReplay();\n  const isProMode = usePro();\n\n  // 检查是否在查看计划，同时确保只有在 Pro 模式下才允许查看计划\n  const isViewingPlan = isProMode && activePanelContent?.type === 'plan';\n  const isReplayActive = replayState.isActive;\n\n  if (!activeSessionId) {\n    return (\n      <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400 text-sm p-4 text-center\">\n        <div className=\"text-center p-6 max-w-md\">\n          <div className=\"w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n            <svg\n              className=\"w-8 h-8 text-gray-400 dark:text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium mb-2\">No active session</h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            Create or select a session to start working\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Main content area */}\n      <div className=\"flex-1 overflow-hidden\">\n        {isViewingPlan ? (\n          <PlanView onBack={() => setActivePanelContent(null)} />\n        ) : activePanelContent ? (\n          <WorkspaceDetail />\n        ) : (\n          <WorkspaceContent />\n        )}\n      </div>\n\n      {/* Refined replay controls with monochromatic styling */}\n      <AnimatePresence>\n        {isReplayActive && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.3 }}\n            className=\"p-4 border-t border-gray-100/40 dark:border-gray-700/20 bg-gray-50/50 dark:bg-gray-900/30\"\n          >\n            {/* Timeline slider */}\n            <TimelineSlider />\n\n            {/* Controls centered below the timeline */}\n            <div className=\"flex justify-center mt-3\">\n              <ReplayControls />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ToolResultContentPart } from '../../../types';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiEye, FiMousePointer, FiType, FiChevronsRight, FiImage } from 'react-icons/fi';\nimport { useSession } from '../../../hooks/useSession';\nimport { BrowserShell } from './BrowserShell';\n\ninterface BrowserControlRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Specialized renderer for browser_vision_control tool results\n *\n * This renderer displays:\n * 1. The screenshot from the environment input\n * 2. A mouse cursor overlay showing the action point\n * 3. The thought process of the agent\n * 4. The step being performed\n * 5. The specific action taken\n *\n * Design improvements:\n * - Shows screenshot at the top for better visual context\n * - Displays enhanced mouse cursor with artistic animations\n * - Uses browser shell wrapper for consistent styling\n * - Applies smooth transitions for mouse movements\n * - Features visually engaging click animations\n */\nexport const BrowserControlRenderer: React.FC<BrowserControlRendererProps> = ({\n  part,\n  onAction,\n}) => {\n  const { activeSessionId, messages, toolResults, replayState } = useSession();\n  const [relatedImage, setRelatedImage] = useState<string | null>(null);\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\n  const [mousePosition, setMousePosition] = useState<{ x: number; y: number } | null>(null);\n  const [previousMousePosition, setPreviousMousePosition] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  // Extract the visual operation details from the part\n  const { thought, step, action, status, toolCallId } = part;\n\n  // Get coordinates directly from tool result instead of parsing action string\n  useEffect(() => {\n    if (!activeSessionId || !toolCallId) return;\n\n    // Find the matching tool result for this tool call\n    const sessionResults = toolResults[activeSessionId] || [];\n    const matchingResult = sessionResults.find((result) => result.toolCallId === toolCallId);\n\n    if (matchingResult && matchingResult.content && matchingResult.content.result) {\n      const { startX, startY } = matchingResult.content.result;\n\n      // Save previous position before updating\n      if (mousePosition) {\n        setPreviousMousePosition(mousePosition);\n      }\n\n      // Set new position if coordinates are valid\n      if (typeof startX === 'number' && typeof startY === 'number') {\n        setMousePosition({\n          x: startX,\n          y: startY,\n        });\n      }\n    }\n  }, [activeSessionId, toolCallId, toolResults]);\n\n  // Find the most recent environment input (screenshot) before this operation\n  useEffect(() => {\n    if (!activeSessionId) return;\n\n    const sessionMessages = messages[activeSessionId] || [];\n\n    if (!toolCallId) return;\n\n    // 获取当前工具调用在消息中的索引\n    const currentToolCallIndex = sessionMessages.findIndex((msg) =>\n      msg.toolCalls?.some((tc) => tc.id === toolCallId),\n    );\n\n    if (currentToolCallIndex === -1) return;\n\n    // 查找距离当前工具调用最近的环境输入\n    let foundImage = false;\n\n    // 向前搜索环境输入，找到最近的截图\n    for (let i = currentToolCallIndex; i >= 0; i--) {\n      const msg = sessionMessages[i];\n      if (msg.role === 'environment' && Array.isArray(msg.content)) {\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          foundImage = true;\n          break;\n        }\n      }\n    }\n\n    // 如果在当前工具调用之前没有找到图片，可能是在回放模式下，尝试搜索所有环境消息\n    if (!foundImage && replayState?.isActive) {\n      const envMessages = sessionMessages.filter(\n        (msg) => msg.role === 'environment' && Array.isArray(msg.content),\n      );\n\n      // 找到最近的带图片的环境消息\n      for (const msg of envMessages) {\n        const imgContent = msg.content.find(\n          (c) => typeof c === 'object' && 'type' in c && c.type === 'image_url',\n        );\n\n        if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {\n          setRelatedImage(imgContent.image_url.url);\n          break;\n        }\n      }\n    }\n  }, [activeSessionId, messages, toolCallId, replayState?.isActive]);\n\n  // Handler to get image dimensions when loaded\n  const handleImageLoad = () => {\n    if (imageRef.current) {\n      setImageSize({\n        width: imageRef.current.naturalWidth,\n        height: imageRef.current.naturalHeight,\n      });\n    }\n  };\n\n  // If no valid data, show a placeholder\n  if (!thought && !step && !action) {\n    return <div className=\"text-gray-500 italic\">Browser control details unavailable</div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Screenshot section - moved to the top */}\n      {relatedImage && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          {/* ... 保留其他代码 ... */}\n\n          <BrowserShell className=\"mb-4\">\n            <div className=\"relative\">\n              <img\n                ref={imageRef}\n                src={relatedImage}\n                alt=\"Browser Screenshot\"\n                className=\"w-full h-auto object-contain\"\n                onLoad={handleImageLoad}\n              />\n\n              {/* Enhanced mouse cursor overlay */}\n              {mousePosition && imageSize && (\n                <motion.div\n                  className=\"absolute pointer-events-none\"\n                  initial={\n                    previousMousePosition\n                      ? {\n                          left: `${(previousMousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(previousMousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                      : {\n                          left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                          top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                        }\n                  }\n                  animate={{\n                    left: `${(mousePosition.x / imageSize.width) * 100 * window.devicePixelRatio}%`,\n                    top: `${(mousePosition.y / imageSize.height) * 100 * window.devicePixelRatio}%`,\n                  }}\n                  transition={{ duration: 0.5, ease: [0.16, 1, 0.3, 1] }}\n                  style={{\n                    zIndex: 10,\n                  }}\n                >\n                  <div className=\"relative\">\n                    {/* Enhanced cursor icon with shadow effect */}\n                    <svg\n                      width=\"36\"\n                      height=\"36\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      style={{\n                        filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))',\n                        transform: 'translate(-12px, -3px)',\n                      }}\n                    >\n                      <defs>\n                        <linearGradient id=\"cursorGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                          <stop offset=\"0%\" stopColor=\"white\" />\n                          <stop offset=\"100%\" stopColor=\"#f5f5f5\" />\n                        </linearGradient>\n                      </defs>\n                      <path\n                        d=\"M5 3L19 12L12 13L9 20L5 3Z\"\n                        fill=\"url(#cursorGradient)\"\n                        stroke=\"#000000\"\n                        strokeWidth=\"1.5\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n\n                    {/* Artistic pulse effect for click actions */}\n                    {action && action.includes('click') && (\n                      <>\n                        {/* Multiple layered ripple effects */}\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.8, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2.5 }}\n                          transition={{\n                            duration: 1.5,\n                            ease: 'easeOut',\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-8px',\n                            left: '-8px',\n                            width: '24px',\n                            height: '24px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.6) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.3)',\n                          }}\n                        />\n                        <motion.div\n                          className=\"absolute rounded-full\"\n                          initial={{ opacity: 0.9, scale: 0 }}\n                          animate={{ opacity: 0, scale: 2 }}\n                          transition={{\n                            duration: 1.2,\n                            ease: 'easeOut',\n                            delay: 0.2,\n                            repeat: Infinity,\n                          }}\n                          style={{\n                            top: '-6px',\n                            left: '-6px',\n                            width: '20px',\n                            height: '20px',\n                            background:\n                              'radial-gradient(circle, rgba(99,102,241,0.8) 0%, rgba(99,102,241,0) 70%)',\n                            border: '1px solid rgba(99,102,241,0.5)',\n                          }}\n                        />\n                        {/* Central highlight dot */}\n                        <motion.div\n                          className=\"absolute rounded-full bg-white\"\n                          initial={{ opacity: 1, scale: 0.5 }}\n                          animate={{ opacity: 0.8, scale: 1 }}\n                          transition={{\n                            duration: 0.7,\n                            repeat: Infinity,\n                            repeatType: 'reverse',\n                          }}\n                          style={{\n                            top: '2px',\n                            left: '2px',\n                            width: '4px',\n                            height: '4px',\n                            boxShadow: '0 0 10px 2px rgba(255,255,255,0.7)',\n                          }}\n                        />\n                      </>\n                    )}\n                  </div>\n                </motion.div>\n              )}\n            </div>\n          </BrowserShell>\n        </motion.div>\n      )}\n\n      {/* Visual operation details card */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiMousePointer className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">GUI Agent Operation</div>\n          {status && (\n            <div\n              className={`ml-auto text-xs font-medium px-2 py-0.5 rounded-full ${\n                status === 'success'\n                  ? 'bg-green-100/80 dark:bg-green-900/20 text-green-700 dark:text-green-400'\n                  : 'bg-red-100/80 dark:bg-red-900/20 text-red-700 dark:text-red-400'\n              }`}\n            >\n              {status === 'success' ? 'Success' : 'Failed'}\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-4 space-y-3\">\n          {/* Thought process */}\n          {thought && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiEye className=\"mr-2 text-accent-500/70 dark:text-accent-400/70\" size={14} />\n                Thought\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-accent-100 dark:border-accent-900/30\">\n                {thought}\n              </div>\n            </div>\n          )}\n\n          {/* Step */}\n          {step && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiChevronsRight\n                  className=\"mr-2 text-primary-500/70 dark:text-primary-400/70\"\n                  size={14}\n                />\n                Action\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-primary-100 dark:border-primary-900/30\">\n                {step}\n              </div>\n            </div>\n          )}\n\n          {/* Action command */}\n          {action && (\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center text-sm font-medium text-gray-700 dark:text-gray-300\">\n                <FiType className=\"mr-2 text-gray-500/70 dark:text-gray-400/70\" size={14} />\n                Action Command\n              </div>\n              <div className=\"bg-gray-50 dark:bg-gray-800/90 font-mono text-xs p-2 rounded-md border border-gray-100/50 dark:border-gray-700/30 overflow-x-auto\">\n                {action}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '../../../types';\nimport { FiMonitor, FiExternalLink, FiGlobe, FiBookmark, FiCopy, FiCheck } from 'react-icons/fi';\nimport { BrowserShell } from './BrowserShell';\nimport { MarkdownRenderer } from '../../Markdown';\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\n\ninterface BrowserResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders browser navigation and page content results with improved UI\n *\n * Design improvements:\n * - Enhanced browser shell with realistic browser chrome\n * - Better visual hierarchy and content spacing\n * - Quick action buttons for URL interaction\n * - Proper content formatting with support for different content types\n * - Smooth animations for state changes\n */\nexport const BrowserResultRenderer: React.FC<BrowserResultRendererProps> = ({ part }) => {\n  const { url, content, title, contentType } = part;\n  const [copied, setCopied] = useState(false);\n\n  const displayTitle = title || url?.split('/').pop() || 'Browser Result';\n\n  if (!url && !content) {\n    return <div className=\"text-gray-500 italic\">Browser result is empty</div>;\n  }\n\n  const copyUrl = () => {\n    if (url) {\n      navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Extract URL from text content if it's in the format \"Navigated to URL\"\n  const extractUrlFromContent = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return url || '';\n  };\n\n  // Extract content from text after URL line\n  const extractContentFromText = () => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      return lines.slice(1).join('\\n');\n    }\n    return content;\n  };\n\n  const extractedUrl = extractUrlFromContent();\n  const extractedContent = extractContentFromText();\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"mb-4\">\n        {/* URL actions bar */}\n        {extractedUrl && (\n          <div className=\"mb-4 flex items-center\">\n            <div className=\"flex-1 p-3 bg-gray-50 dark:bg-gray-800/80 rounded-lg text-sm border border-gray-100/30 dark:border-gray-700/20 flex items-center overflow-hidden\">\n              <FiGlobe className=\"flex-shrink-0 text-gray-400 dark:text-gray-500 mr-2\" size={16} />\n              <span className=\"truncate text-gray-700 dark:text-gray-300 mr-2\">{extractedUrl}</span>\n            </div>\n            <div className=\"flex ml-2 gap-2\">\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={copyUrl}\n                className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n                title=\"Copy URL\"\n              >\n                {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n              </motion.button>\n              <motion.a\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                href={extractedUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"p-2 rounded-lg bg-purple-50 dark:bg-purple-900/20 text-purple-600 dark:text-purple-400 hover:bg-purple-100 dark:hover:bg-purple-800/30 transition-colors border border-purple-200/50 dark:border-purple-800/30\"\n                title=\"Open in new tab\"\n              >\n                <FiExternalLink size={18} />\n              </motion.a>\n            </div>\n          </div>\n        )}\n\n        {/* Content with enhanced browser shell */}\n        <BrowserShell title={displayTitle} url={extractedUrl}>\n          <div className=\"bg-white dark:bg-gray-800 px-5 min-h-[200px] max-h-[70vh] overflow-auto border-t border-gray-100/30 dark:border-gray-700/20\">\n            {contentType === 'text' || typeof extractedContent === 'string' ? (\n              <div className=\"prose dark:prose-invert prose-sm max-w-none py-4\">\n                <MarkdownRenderer content={typeof extractedContent === 'string' ? extractedContent : ''} />\n              </div>\n            ) : (\n              <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n                {JSON.stringify(extractedContent, null, 2)}\n              </pre>\n            )}\n          </div>\n        </BrowserShell>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '@agent-tars/core';\nimport { FiTerminal, FiFile } from 'react-icons/fi';\n\ninterface CommandResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders command execution results with command, stdout, and stderr\n */\nexport const CommandResultRenderer: React.FC<CommandResultRendererProps> = ({ part }) => {\n  const { command, stdout, stderr, exitCode } = part;\n\n  if (!command && !stdout && !stderr) {\n    return <div className=\"text-gray-500 italic\">Command result is empty</div>;\n  }\n\n  // Style the code blocks based on success/failure\n  const isError = exitCode !== 0 && exitCode !== undefined;\n\n  return (\n    <div className=\"space-y-4\">\n      {command && (\n        <div className=\"mb-4\">\n          <div className=\"flex items-center mb-3\">\n            <FiTerminal className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n            <h3 className=\"text-base font-medium text-gray-800 dark:text-gray-200\">Command</h3>\n          </div>\n\n          <div className=\"p-3 bg-gray-800 text-gray-100 rounded-xl font-mono text-sm mb-6 overflow-x-auto border border-gray-700/50\">\n            {command}\n          </div>\n        </div>\n      )}\n\n      {(stdout || stderr) && (\n        <div>\n          <div className=\"flex items-center mb-3\">\n            <FiFile className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={18} />\n            <h3 className=\"text-base font-medium text-gray-800 dark:text-gray-200\">\n              Output\n              {exitCode !== undefined && (\n                <span className={`ml-2 text-xs ${isError ? 'text-red-500' : 'text-green-500'}`}>\n                  (exit code: {exitCode})\n                </span>\n              )}\n            </h3>\n          </div>\n\n          <div className=\"p-3 bg-gray-800 text-gray-100 rounded-xl font-mono text-sm overflow-auto max-h-[50vh] border border-gray-700/50\">\n            {stdout && <pre className=\"whitespace-pre-wrap\">{stdout}</pre>}\n\n            {stderr && (\n              <>\n                {stdout && <div className=\"border-t border-gray-700/50 my-2 pt-2\"></div>}\n                <div className=\"text-xs text-red-500 mt-2 mb-1\">Error:</div>\n                <pre className=\"text-red-400 whitespace-pre-wrap\">{stderr}</pre>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '@agent-tars/core';\nimport { motion } from 'framer-motion';\nimport { FiDownload, FiZoomIn } from 'react-icons/fi';\n\ninterface ImageRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders image content with zoom and download actions\n */\nexport const ImageRenderer: React.FC<ImageRendererProps> = ({ part, onAction }) => {\n  const { imageData, mimeType = 'image/png', name } = part;\n\n  if (!imageData) {\n    return <div className=\"text-gray-500 italic\">Image data missing</div>;\n  }\n\n  const imgSrc = `data:${mimeType};base64,${imageData}`;\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = imgSrc;\n    link.download = name || 'image';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleZoom = () => {\n    if (onAction) {\n      onAction('zoom', { src: imgSrc, alt: name });\n    }\n  };\n\n  return (\n    <div className=\"relative group\">\n      <motion.div\n        whileHover={{ scale: 1.01 }}\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-2 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n      >\n        {name && (\n          <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">{name}</div>\n        )}\n\n        <div className=\"relative\">\n          <img\n            src={imgSrc}\n            alt={name || 'Image'}\n            className=\"max-h-[70vh] object-contain rounded-lg mx-auto\"\n          />\n\n          <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={handleZoom}\n              className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n              title=\"Zoom\"\n            >\n              <FiZoomIn size={16} />\n            </motion.button>\n\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={handleDownload}\n              className=\"p-2 bg-gray-800/70 hover:bg-gray-800/90 rounded-full text-white\"\n              title=\"Download\"\n            >\n              <FiDownload size={16} />\n            </motion.button>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '@agent-tars/core';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink } from 'react-icons/fi';\n\ninterface LinkRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders link content with external icon\n */\nexport const LinkRenderer: React.FC<LinkRendererProps> = ({ part }) => {\n  const { url, title } = part;\n\n  if (!url) {\n    return <div className=\"text-gray-500 italic\">Link URL missing</div>;\n  }\n\n  return (\n    <motion.a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      whileHover={{ scale: 1.01, x: 2 }}\n      className=\"flex items-center gap-2 p-3 bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 text-accent-600 dark:text-accent-400 hover:text-accent-700 dark:hover:text-accent-300 shadow-sm group\"\n    >\n      <FiExternalLink\n        className=\"flex-shrink-0 text-gray-400 group-hover:text-accent-500 transition-colors\"\n        size={18}\n      />\n\n      <div className=\"flex-1 truncate\">\n        <div className=\"font-medium\">{title || url}</div>\n        {title && <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{url}</div>}\n      </div>\n\n      <div className=\"flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity\">\n        <FiExternalLink size={14} className=\"text-gray-400\" />\n      </div>\n    </motion.a>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCheck, FiClock, FiLoader, FiTarget } from 'react-icons/fi';\nimport type { PlanStep } from '@multimodal/agent-interface';\nimport { formatTimestamp } from '../../../utils/formatters';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator\n * - Supports keyframe navigation for plan history\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // 计算进度百分比\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n\n  // 如果没有计划，显示空状态\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-6 text-center\">\n        <div className=\"w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mb-4 text-gray-400 dark:text-gray-500\">\n          <FiTarget size={32} />\n        </div>\n        <h3 className=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          No plan generated\n        </h3>\n        <p className=\"text-gray-500 dark:text-gray-400 max-w-md\">\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 h-full flex flex-col\">\n      {/* 标题和计划摘要 */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-800 dark:text-gray-200 mb-2 flex items-center\">\n          {isComplete ? (\n            <FiTarget className=\"mr-3 text-green-500 dark:text-green-400\" size={20} />\n          ) : (\n            <motion.div\n              animate={{ scale: [1, 1.05, 1] }}\n              transition={{ duration: 2, repeat: Infinity }}\n            >\n              <FiTarget className=\"mr-3 text-accent-500 dark:text-accent-400\" size={20} />\n            </motion.div>\n          )}\n          Agent Plan\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n          {isComplete\n            ? 'The plan has been completed successfully.'\n            : 'The agent is currently executing this plan to complete your task.'}\n        </p>\n      </div>\n\n      {/* 关键帧时间轴 (如果有关键帧) */}\n      {/* {keyframes && keyframes.length > 1 && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Plan Timeline\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {currentKeyframeIndex !== undefined &&\n                keyframes[currentKeyframeIndex] &&\n                formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n            </div>\n          </div>\n          <div className=\"relative h-8 bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\">\n            <div className=\"absolute inset-0 flex\">\n              {keyframes.map((keyframe, index) => (\n                <div\n                  key={index}\n                  className={`flex-1 cursor-pointer transition-all duration-200 hover:bg-gray-200/50 dark:hover:bg-gray-700/50 ${\n                    index === currentKeyframeIndex ? 'bg-gray-200/80 dark:bg-gray-700/80' : ''\n                  }`}\n                  onClick={() => onKeyframeChange && onKeyframeChange(index)}\n                >\n                  <div className=\"h-full flex items-center justify-center\">\n                    <div\n                      className={`w-2 h-2 rounded-full ${\n                        index === currentKeyframeIndex\n                          ? 'bg-accent-500 dark:bg-accent-400 w-3 h-3'\n                          : 'bg-gray-400 dark:bg-gray-500'\n                      }`}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )} */}\n\n      {/* 进度指示器 */}\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Progress</span>\n          <span className=\"text-xs text-gray-600 dark:text-gray-400\">\n            {steps.filter((step) => step.done).length}/{steps.length} steps\n          </span>\n        </div>\n        <div className=\"h-2 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progressPercentage}%` }}\n            transition={{ duration: 0.5, ease: 'easeInOut' }}\n            className=\"h-full bg-accent-500 dark:bg-accent-400\"\n          />\n        </div>\n      </div>\n\n      {/* 步骤列表 */}\n      <div className=\"flex-1 overflow-auto\">\n        <div className=\"space-y-4\">\n          {steps.map((step, index) => (\n            <div key={index} className=\"relative\">\n              {/* 连接线 */}\n              {index < steps.length - 1 && (\n                <div className=\"absolute left-5 w-0.5 top-10 bottom-0 bg-gray-100 dark:bg-gray-700\" />\n              )}\n\n              <div className=\"flex items-start gap-4\">\n                <div\n                  className={`flex-shrink-0 w-10 h-10 rounded-full flex items-center justify-center text-white transition-all duration-300 ${\n                    step.done\n                      ? 'bg-green-500 dark:bg-green-400 shadow-sm'\n                      : 'bg-gray-300 dark:bg-gray-600'\n                  }`}\n                >\n                  {step.done ? (\n                    <FiCheck size={18} />\n                  ) : index === steps.filter((s) => s.done).length ? (\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 2, repeat: Infinity, ease: 'linear' }}\n                    >\n                      <FiLoader size={18} />\n                    </motion.div>\n                  ) : (\n                    <FiClock size={16} />\n                  )}\n                </div>\n\n                <div className=\"flex-1 bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-100 dark:border-gray-700 shadow-sm\">\n                  <div\n                    className={`text-sm ${\n                      step.done\n                        ? 'text-gray-800 dark:text-gray-200'\n                        : 'text-gray-600 dark:text-gray-400'\n                    }`}\n                  >\n                    {step.content}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* 计划总结 - 在底部显示 */}\n      {isComplete && summary && (\n        <div className=\"mt-6 pt-4 border-t border-gray-100 dark:border-gray-700\">\n          <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-2\">Plan Summary</div>\n          <div className=\"text-sm text-gray-700 dark:text-gray-300 bg-gray-50 dark:bg-gray-800 p-4 rounded-xl border border-gray-100 dark:border-gray-700\">\n            {summary}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiDownload, FiBookOpen, FiLoader } from 'react-icons/fi';\nimport { MarkdownRenderer } from '../../Markdown';\n\ninterface ResearchReportRendererProps {\n  content: string;\n  title?: string;\n  isStreaming?: boolean;\n}\n\n/**\n * Research Report Renderer - Displays a detailed research report with proper formatting\n *\n * Features:\n * - Elegant markdown rendering with document styling\n * - Download capability for saving reports\n * - Animated indicators for streaming content\n * - Smooth transitions for content updates\n * - Auto-scrolling during streaming updates\n */\nexport const ResearchReportRenderer: React.FC<ResearchReportRendererProps> = ({\n  content,\n  title = 'Research Report',\n  isStreaming = false,\n}) => {\n  const [scrollToBottom, setScrollToBottom] = useState(true);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  // 处理内容格式化，确保始终是字符串\n  const formattedContent = React.useMemo(() => {\n    if (typeof content === 'string') {\n      return content;\n    }\n\n    // 如果不是字符串，尝试转换为 JSON 字符串\n    try {\n      return JSON.stringify(content, null, 2);\n    } catch (e) {\n      return String(content);\n    }\n  }, [content]);\n\n  // Auto-scroll to bottom when streaming content\n  useEffect(() => {\n    if (isStreaming && scrollToBottom && contentRef.current) {\n      contentRef.current.scrollTop = contentRef.current.scrollHeight;\n    }\n  }, [content, isStreaming, scrollToBottom]);\n\n  // Handle content scroll\n  const handleScroll = () => {\n    if (!contentRef.current) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = contentRef.current;\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n\n    setScrollToBottom(isNearBottom);\n  };\n\n  // Handle report download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title.replace(/[^\\w\\s-]/g, '')}.md`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Report header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-100/40 dark:border-gray-700/20\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 mr-3 rounded-xl bg-gradient-to-br from-accent-100 to-accent-200 dark:from-accent-900/30 dark:to-accent-800/30 flex items-center justify-center border border-accent-200/40 dark:border-accent-700/30\">\n            <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={18} />\n          </div>\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center\">\n              {isStreaming ? (\n                <>\n                  <FiLoader className=\"mr-1.5 animate-spin\" size={10} />\n                  Generating report...\n                </>\n              ) : (\n                'Research Report'\n              )}\n            </div>\n          </div>\n        </div>\n\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleDownload}\n          className=\"ml-3 p-2 rounded-xl text-gray-600 dark:text-gray-400 hover:bg-gray-100/50 dark:hover:bg-gray-700/30 hover:text-accent-600 dark:hover:text-accent-400 transition-colors border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30\"\n          title=\"Download Report\"\n        >\n          <FiDownload size={20} />\n        </motion.button>\n      </div>\n\n      {/* Report content */}\n      <div\n        ref={contentRef}\n        className=\"flex-1 overflow-auto p-6 bg-white dark:bg-gray-800\"\n        onScroll={handleScroll}\n      >\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"research-report prose prose-slate lg:prose-lg dark:prose-invert max-w-none\">\n            <MarkdownRenderer content={formattedContent} />\n          </div>\n\n          {/* Loading indicator for streaming content */}\n          {isStreaming && (\n            <div className=\"flex items-center justify-center py-6 text-accent-500 dark:text-accent-400\">\n              <FiLoader className=\"animate-spin mr-2\" size={16} />\n              <span className=\"text-sm\">Generating report...</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '@agent-tars/core';\nimport { motion } from 'framer-motion';\nimport { FiExternalLink, FiSearch, FiInfo, FiGlobe } from 'react-icons/fi';\n\ninterface SearchResultRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders search results with refined visual design\n * \n * Design improvements:\n * - Clean, minimalist card layout with subtle animations\n * - Consistent typography with proper hierarchy\n * - Refined spacing and subtle borders\n * - Simplified URL display\n * - Elegant interaction feedback\n */\nexport const SearchResultRenderer: React.FC<SearchResultRendererProps> = ({ part }) => {\n  const { results, query } = part;\n\n  if (!results || !Array.isArray(results)) {\n    return <div className=\"text-gray-500 italic\">Search results missing</div>;\n  }\n\n  return (\n    <div className=\"space-y-5\">\n      {/* Search query section with minimal styling */}\n      {query && (\n        <div className=\"mb-5\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-10 h-10 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/70 dark:border-gray-700/50 flex items-center justify-center mr-4 text-gray-600 dark:text-gray-400\">\n              <FiSearch size={20} />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-medium text-gray-800 dark:text-gray-200\">Search Results</h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">{results.length} results found for your query</p>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl px-4 py-3 text-sm text-gray-800 dark:text-gray-200 border border-gray-200/70 dark:border-gray-700/50\">\n            <div className=\"flex items-center\">\n              <FiSearch className=\"text-gray-500 dark:text-gray-400 mr-2\" size={14} />\n              <span>{query}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No results state with simplified design */}\n      {results.length === 0 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-5 text-center border border-gray-200/70 dark:border-gray-700/50\">\n          <div className=\"w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center mx-auto mb-3\">\n            <FiInfo className=\"text-gray-400\" size={24} />\n          </div>\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">No search results found</h3>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 max-w-md mx-auto\">\n            Try using different search terms or broaden your query.\n          </p>\n        </div>\n      )}\n\n      {/* Results list with refined card design */}\n      <div className=\"space-y-4\">\n        {results.map((result, index) => (\n          <motion.div \n            key={index} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: index * 0.05 }}\n            whileHover={{ y: -2 }} \n            className=\"group\"\n          >\n            {/* Simplified result card with minimal styling */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-gray-700/50 overflow-hidden transition-all duration-200 hover:border-gray-300/70 dark:hover:border-gray-600/50\">\n              <div className=\"p-4\">\n                {/* Title and link with improved layout */}\n                <div className=\"flex items-start\">\n                  <div className=\"min-w-0 flex-1\">\n                    {/* Title with subtle external link icon */}\n                    <a\n                      href={result.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"group/link\"\n                    >\n                      <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors\">\n                        <span className=\"mr-2\">{index + 1}. {result.title}</span>\n                        <FiExternalLink\n                          className=\"text-gray-400 dark:text-gray-500 opacity-0 group-hover/link:opacity-100 transition-opacity duration-200\"\n                          size={14}\n                        />\n                      </h3>\n                    </a>\n\n                    {/* URL with simplified display */}\n                    <div className=\"mb-3\">\n                      <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n                        <FiGlobe size={12} className=\"mr-1.5\" />\n                        <span className=\"truncate\">{result.url}</span>\n                      </div>\n                    </div>\n\n                    {/* Snippet with clean typography */}\n                    <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-300 leading-relaxed\">\n                      {result.snippet}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToolResultContentPart } from '@agent-tars/core';\nimport { MarkdownRenderer } from '../../Markdown';\nimport { BrowserShell } from './BrowserShell';\n\ninterface TextRendererProps {\n  part: ToolResultContentPart & { showAsRawMarkdown?: boolean };\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * Renders text content with Markdown support\n *\n * Improvements:\n * - Support for displaying raw markdown content\n * - Uses browser shell for browser-related content\n * - Better syntax highlighting for code blocks\n */\nexport const TextRenderer: React.FC<TextRendererProps> = ({ part, onAction }) => {\n  if (!part.text) {\n    return <div className=\"text-gray-500 italic\">Empty text content</div>;\n  }\n\n  // Determine if content is browser-related\n  const isBrowserContent = part.name?.toLowerCase().includes('browser') || false;\n\n  // Check if this is a browser_get_markdown result that should display raw markdown\n  const isMarkdownResult =\n    part.showAsRawMarkdown ||\n    part.name?.toLowerCase().includes('markdown') ||\n    part.name?.toLowerCase().includes('browser_get_markdown');\n\n  // if (part.name?.toLowerCase().includes('browser_navigate')) {\n  //   return <BrowserShell title={part.name || 'Browser Content'}>{part.text}</BrowserShell>;\n  // }\n\n  // Handle \"other\" type events - wrap in code block if needed\n  const isOtherType = part.name === 'other' || part.type === 'other';\n  if (isOtherType || isMarkdownResult) {\n    // Wrap in markdown code block to preserve formatting\n    const content = `\\`\\`\\`md\\n${part.text}\\n\\`\\`\\``;\n    return (\n      <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n        <MarkdownRenderer content={content} />\n      </div>\n    );\n  }\n\n  // Determine if content contains markdown syntax\n  const hasMarkdown = /[*#\\[\\]_`~]/.test(part.text);\n\n  // Render browser content in a browser shell\n  if (isBrowserContent) {\n    return (\n      <BrowserShell title={part.name || 'Browser Content'}>\n        <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n          <MarkdownRenderer content={part.text} />\n        </div>\n      </BrowserShell>\n    );\n  }\n\n  // Render standard content\n  return (\n    <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n      {hasMarkdown ? (\n        <MarkdownRenderer content={part.text} />\n      ) : (\n        <div className=\"whitespace-pre-wrap\">{part.text}</div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { TextRenderer } from './TextRenderer';\nimport { ImageRenderer } from './ImageRenderer';\nimport { LinkRenderer } from './LinkRenderer';\n\nimport { SearchResultRenderer } from './SearchResultRenderer';\nimport { CommandResultRenderer } from './CommandResultRenderer';\nimport { BrowserResultRenderer } from './BrowserResultRenderer';\nimport { BrowserControlRenderer } from './BrowserControlRenderer';\nimport { PlanViewerRenderer } from './PlanViewerRenderer';\nimport { ResearchReportRenderer } from './ResearchReportRenderer';\nimport { ToolResultContentPart } from '@/v2/types';\n\n/**\n * Registry of content part renderers\n * Maps content types to their renderer components\n *\n * Design pattern: Component Registry pattern - allows dynamic registration of\n * renderers for different content types without modifying the core renderer\n */\nconst CONTENT_RENDERERS: Record<\n  string,\n  React.FC<{ part: ToolResultContentPart; onAction?: (action: string, data: any) => void }>\n> = {\n  text: TextRenderer,\n  image: ImageRenderer,\n  link: LinkRenderer,\n\n  search_result: SearchResultRenderer,\n  command_result: CommandResultRenderer,\n  browser_result: BrowserResultRenderer,\n  browser_control: BrowserControlRenderer,\n  plan: PlanViewerRenderer,\n  research_report: ResearchReportRenderer,\n};\n\ninterface ToolResultRendererProps {\n  /**\n   * Array of content parts to render\n   */\n  content: ToolResultContentPart[];\n\n  /**\n   * Optional handler for interactive actions\n   */\n  onAction?: (action: string, data: any) => void;\n\n  /**\n   * Optional className for the container\n   */\n  className?: string;\n}\n\n/**\n * Renders tool result content parts using the appropriate renderer for each part\n *\n * This component acts as a router that delegates rendering to specialized components\n * based on the content type, making it easily extensible to new content types.\n *\n * Improvements:\n * - Special handling for browser_get_markdown content\n * - Uses browser shell for browser-related tool results\n * - Consistent styling across all tool result types\n */\nexport const ToolResultRenderer: React.FC<ToolResultRendererProps> = ({\n  content,\n  onAction,\n  className = '',\n}) => {\n  if (!content || content.length === 0) {\n    return (\n      <div className=\"p-4 text-gray-500 dark:text-gray-400 text-sm italic\">\n        No content to display\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {content.map((part, index) => {\n        // 特殊处理: 如果是 json 类型的部分，将其转换为文本显示\n        if (part.type === 'json') {\n          const textPart = {\n            ...part,\n            type: 'text',\n            text:\n              typeof part.data === 'object'\n                ? JSON.stringify(part.data, null, 2)\n                : String(part.data),\n            name: part.name || 'TEXT_DATA',\n          };\n\n          return (\n            <div key={`text-${part.name || ''}-${index}`} className=\"tool-result-part\">\n              <TextRenderer part={textPart} onAction={onAction} />\n            </div>\n          );\n        }\n\n        // 正常渲染其他类型\n        const Renderer = CONTENT_RENDERERS[part.type] || TextRenderer;\n\n        return (\n          <div key={`${part.type}-${part.name || ''}-${index}`} className=\"tool-result-part\">\n            <Renderer part={part} onAction={onAction} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\n/**\n * Register a custom renderer for a specific content type\n * This allows extending the system with new renderers without modifying this file\n */\nexport function registerRenderer(\n  contentType: string,\n  renderer: React.FC<{\n    part: ToolResultContentPart;\n    onAction?: (action: string, data: any) => void;\n  }>,\n): void {\n  CONTENT_RENDERERS[contentType] = renderer;\n}\n","import { useAtom } from 'jotai';\nimport { useCallback, useEffect, useState } from 'react';\nimport { replayStateAtom } from '../state/atoms/replay';\nimport { Event, EventType } from '../types';\nimport { useSession } from './useSession';\nimport { messagesAtom } from '../state/atoms/message';\nimport { toolResultsAtom } from '../state/atoms/tool';\nimport { processEventAction } from '../state/actions/eventProcessor';\nimport { atom, useSetAtom } from 'jotai';\nimport { plansAtom } from '../state/atoms/plan';\n\n/**\n * Custom hook for managing replay functionality\n *\n * Provides:\n * - Control for playback (play, pause, jump, etc.)\n * - Event processing through the standard event processor\n * - Timeline calculations and positioning\n */\nexport function useReplay() {\n  const [replayState, setReplayState] = useAtom(replayStateAtom);\n  const { activeSessionId } = useSession();\n  const [playbackInterval, setPlaybackInterval] = useState<NodeJS.Timeout | null>(null);\n  const [, setMessages] = useAtom(messagesAtom);\n  const [, setToolResults] = useAtom(toolResultsAtom);\n  const [, setPlans] = useAtom(plansAtom);\n  const processEvent = useSetAtom(processEventAction);\n\n  /**\n   * Initialize replay with events for the current session\n   * Filter out streaming events and only keep key frames\n   */\n  const initReplay = useCallback(\n    async (events: Event[]) => {\n      if (!events || events.length === 0 || !activeSessionId) return;\n\n      // 清空当前会话的所有状态\n      setMessages((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setToolResults((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setPlans((prev) => ({\n        ...prev,\n        [activeSessionId]: {\n          steps: [],\n          isComplete: false,\n          summary: null,\n          hasGeneratedPlan: false,\n          keyframes: [],\n        },\n      }));\n\n      // 过滤出关键帧事件，排除流式消息\n      const keyFrameEvents = events\n        .filter(\n          (event) =>\n            // 只保留关键事件，排除所有流式消息\n            event.type === EventType.USER_MESSAGE ||\n            event.type === EventType.ASSISTANT_MESSAGE ||\n            event.type === EventType.TOOL_CALL ||\n            event.type === EventType.TOOL_RESULT ||\n            event.type === EventType.ENVIRONMENT_INPUT ||\n            event.type === EventType.PLAN_START ||\n            event.type === EventType.PLAN_UPDATE ||\n            event.type === EventType.PLAN_FINISH ||\n            event.type === EventType.FINAL_ANSWER,\n        )\n        .sort((a, b) => a.timestamp - b.timestamp);\n\n      setReplayState({\n        isActive: true,\n        isPaused: true, // 初始为暂停状态\n        events: keyFrameEvents,\n        currentEventIndex: -1, // 开始前为-1\n        startTimestamp: keyFrameEvents[0]?.timestamp || null,\n        endTimestamp: keyFrameEvents[keyFrameEvents.length - 1]?.timestamp || null,\n        playbackSpeed: 1,\n        autoPlayCountdown: 2, // 设置2秒倒计时\n        visibleTimeWindow:\n          keyFrameEvents.length > 0\n            ? {\n                start: keyFrameEvents[0].timestamp,\n                end: keyFrameEvents[keyFrameEvents.length - 1].timestamp,\n              }\n            : null,\n        processedEvents: {}, // 初始化空的已处理事件映射\n      });\n\n      // 启动倒计时并在结束后自动播放\n      const countdownTimer = setInterval(() => {\n        setReplayState((prev) => {\n          // 如果倒计时结束或已被取消\n          if (prev.autoPlayCountdown === null || prev.autoPlayCountdown <= 0) {\n            clearInterval(countdownTimer);\n\n            // 只有当倒计时正常结束（为0）时才自动开始播放\n            if (prev.autoPlayCountdown === 0) {\n              setTimeout(() => startReplay(), 0);\n              return {\n                ...prev,\n                autoPlayCountdown: null,\n              };\n            }\n\n            return {\n              ...prev,\n              autoPlayCountdown: null,\n            };\n          }\n\n          // 继续倒计时\n          return {\n            ...prev,\n            autoPlayCountdown: prev.autoPlayCountdown - 1,\n          };\n        });\n      }, 1000);\n    },\n    [activeSessionId, setMessages, setToolResults, setPlans, setReplayState],\n  );\n\n  /**\n   * 重置会话状态并处理事件至指定索引\n   */\n  const processEventsUpToIndex = useCallback(\n    (targetIndex: number) => {\n      if (!activeSessionId || !replayState.events.length || targetIndex < 0) return;\n\n      // 获取需要处理的事件\n      const eventsToProcess = replayState.events.slice(0, targetIndex + 1);\n\n      // 清空当前会话状态\n      setMessages((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setToolResults((prev) => ({\n        ...prev,\n        [activeSessionId]: [],\n      }));\n\n      setPlans((prev) => ({\n        ...prev,\n        [activeSessionId]: {\n          steps: [],\n          isComplete: false,\n          summary: null,\n          hasGeneratedPlan: false,\n          keyframes: [],\n        },\n      }));\n\n      // 处理环境输入事件优先，确保图片资源先加载\n      const envEvents = eventsToProcess.filter(\n        (event) => event.type === EventType.ENVIRONMENT_INPUT,\n      );\n      const nonEnvEvents = eventsToProcess.filter(\n        (event) => event.type !== EventType.ENVIRONMENT_INPUT,\n      );\n\n      // 先处理环境输入事件\n      for (const event of envEvents) {\n        processEvent({ sessionId: activeSessionId, event });\n      }\n\n      // 然后处理其他事件\n      for (const event of nonEnvEvents) {\n        processEvent({ sessionId: activeSessionId, event });\n      }\n    },\n    [activeSessionId, replayState.events, setMessages, setToolResults, setPlans, processEvent],\n  );\n\n  /**\n   * 开始回放\n   */\n  const startReplay = useCallback(() => {\n    // 清除现有的定时器\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: false,\n    }));\n\n    // 设置定时器按间隔前进\n    const interval = setInterval(() => {\n      setReplayState((prev) => {\n        // 到达末尾时停止\n        if (prev.currentEventIndex >= prev.events.length - 1) {\n          clearInterval(interval);\n          return {\n            ...prev,\n            isPaused: true,\n            currentEventIndex: prev.events.length - 1,\n          };\n        }\n\n        // 前进到下一个事件\n        const nextIndex = prev.currentEventIndex + 1;\n\n        // 处理到新位置\n        if (activeSessionId) {\n          processEvent({\n            sessionId: activeSessionId,\n            event: prev.events[nextIndex],\n          });\n        }\n\n        return {\n          ...prev,\n          currentEventIndex: nextIndex,\n        };\n      });\n    }, 200 / replayState.playbackSpeed); // 由于只显示关键帧，增加了帧间隔时间\n\n    setPlaybackInterval(interval);\n  }, [activeSessionId, playbackInterval, processEvent, replayState.playbackSpeed, setReplayState]);\n\n  /**\n   * 暂停回放\n   */\n  const pauseReplay = useCallback(() => {\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n      setPlaybackInterval(null);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: true,\n    }));\n  }, [playbackInterval, setReplayState]);\n\n  /**\n   * 跳转到时间轴上的指定位置\n   */\n  const jumpToPosition = useCallback(\n    (position: number) => {\n      // 确保位置在有效范围内\n      const normalizedPosition = Math.max(0, Math.min(1, position));\n\n      if (replayState.events.length === 0 || !activeSessionId) return;\n\n      // 根据位置计算目标事件索引\n      const targetIndex = Math.floor(normalizedPosition * (replayState.events.length - 1));\n\n      // 暂停任何正在进行的回放\n      if (playbackInterval) {\n        clearInterval(playbackInterval);\n        setPlaybackInterval(null);\n      }\n\n      // 处理到新位置\n      processEventsUpToIndex(targetIndex);\n\n      setReplayState((prev) => ({\n        ...prev,\n        isPaused: true,\n        currentEventIndex: targetIndex,\n      }));\n    },\n    [\n      activeSessionId,\n      playbackInterval,\n      processEventsUpToIndex,\n      replayState.events.length,\n      setReplayState,\n    ],\n  );\n\n  /**\n   * 跳转到最终结果\n   */\n  const jumpToResult = useCallback(() => {\n    if (replayState.events.length === 0 || !activeSessionId) return;\n\n    const finalIndex = replayState.events.length - 1;\n\n    // 暂停任何正在进行的回放\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n      setPlaybackInterval(null);\n    }\n\n    // 处理到最终位置\n    processEventsUpToIndex(finalIndex);\n\n    setReplayState((prev) => ({\n      ...prev,\n      isPaused: true,\n      currentEventIndex: finalIndex,\n    }));\n  }, [\n    activeSessionId,\n    playbackInterval,\n    processEventsUpToIndex,\n    replayState.events.length,\n    setReplayState,\n  ]);\n\n  /**\n   * 设置播放速度\n   */\n  const setPlaybackSpeed = useCallback(\n    (speed: number) => {\n      setReplayState((prev) => ({\n        ...prev,\n        playbackSpeed: speed,\n      }));\n\n      // 如果正在播放，以新速度重启\n      if (!replayState.isPaused && playbackInterval) {\n        clearInterval(playbackInterval);\n        startReplay();\n      }\n    },\n    [playbackInterval, replayState.isPaused, setReplayState, startReplay],\n  );\n\n  /**\n   * 退出回放模式\n   */\n  const exitReplay = useCallback(() => {\n    if (playbackInterval) {\n      clearInterval(playbackInterval);\n    }\n\n    setReplayState((prev) => ({\n      ...prev,\n      isActive: false,\n      isPaused: true,\n      currentEventIndex: -1,\n      events: [],\n      processedEvents: {},\n    }));\n  }, [playbackInterval, setReplayState]);\n\n  /**\n   * 获取当前事件\n   */\n  const getCurrentEvent = useCallback(() => {\n    if (\n      !replayState.isActive ||\n      replayState.currentEventIndex < 0 ||\n      replayState.currentEventIndex >= replayState.events.length\n    ) {\n      return null;\n    }\n\n    return replayState.events[replayState.currentEventIndex];\n  }, [replayState.currentEventIndex, replayState.events, replayState.isActive]);\n\n  /**\n   * 获取当前位置百分比 (0-100)\n   */\n  const getCurrentPosition = useCallback(() => {\n    if (!replayState.isActive || replayState.events.length <= 1) {\n      return 0;\n    }\n\n    return (replayState.currentEventIndex / (replayState.events.length - 1)) * 100;\n  }, [replayState.currentEventIndex, replayState.events.length, replayState.isActive]);\n\n  /**\n   * 获取当前所有事件\n   */\n  const getCurrentEvents = useCallback(() => {\n    if (!replayState.isActive || replayState.currentEventIndex < 0) {\n      return [];\n    }\n\n    return replayState.events.slice(0, replayState.currentEventIndex + 1);\n  }, [replayState.currentEventIndex, replayState.events, replayState.isActive]);\n\n  // 组件卸载时清理定时器\n  useEffect(() => {\n    return () => {\n      if (playbackInterval) {\n        clearInterval(playbackInterval);\n      }\n    };\n  }, [playbackInterval]);\n\n  // 回放模式初始化时：如果索引为-1，需要手动触发第一步，否则会显示为空白\n  useEffect(() => {\n    if (\n      replayState.isActive &&\n      replayState.currentEventIndex === -1 &&\n      replayState.events.length > 0\n    ) {\n      // 如果启动回放后立即跳到第一个事件\n      processEventsUpToIndex(0);\n      setReplayState((prev) => ({\n        ...prev,\n        currentEventIndex: 0,\n      }));\n    }\n  }, [\n    replayState.isActive,\n    replayState.currentEventIndex,\n    replayState.events.length,\n    processEventsUpToIndex,\n    setReplayState,\n  ]);\n\n  /**\n   * 取消自动播放倒计时\n   */\n  const cancelAutoPlay = useCallback(() => {\n    setReplayState((prev) => ({\n      ...prev,\n      autoPlayCountdown: null,\n    }));\n  }, [setReplayState]);\n\n  // 添加对自动播放事件的监听\n  useEffect(() => {\n    const handleAutoStart = () => {\n      console.log('Auto-play event received, starting replay...');\n      startReplay();\n    };\n\n    // 添加事件监听器\n    window.addEventListener('replay-autostart', handleAutoStart);\n\n    // 清理函数\n    return () => {\n      window.removeEventListener('replay-autostart', handleAutoStart);\n    };\n  }, [startReplay]); // 依赖于startReplay函数\n\n  return {\n    // 状态\n    replayState,\n\n    // 操作方法\n    initReplay,\n    startReplay,\n    pauseReplay,\n    jumpToPosition,\n    jumpToResult,\n    setPlaybackSpeed,\n    exitReplay,\n    cancelAutoPlay,\n\n    // 工具方法\n    getCurrentEvents,\n    getCurrentPosition,\n    getCurrentEvent,\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;;;AASA;AACA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAAA;;;;;;AAGA;AAAA;;AAEA;AACA;;AACA;AAAA;AAAA;;;;;;AAGA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAOA;AAAA;;AAEA;AACA;AACA;AAEA;AAAA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAtDA;;AACA;AACA;AAGA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;;AAEA;AAUA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAIA;AAAA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAMA;AAAA;;AAVA;;;;;;;;;;;;;;;;;AAgBA;AApGA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAKA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;;;;;AAYA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;;AACA;AAAA;AACA;;;;;;AAGA;AACA;;AAAA;AACA;AAAA;;;;;;;AAIA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAzQA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AAGA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AACA;AAAA;;;;;;;;;;;AAGA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAKA;AAtGA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AACA;AAKA;;AAEA;AAEA;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;AACA;AACA;AAEA;;;;;;;;AAQA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACA;AAAA;;AACA;AACA;AAMA;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;AAIA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;;;;;;;AAIA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;AACA;AAAA;;AACA;AAAA;;AACA;AACA;;;;;;AAMA;AAAA;AAAA;;;;;;;;;;;;AAEA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;AAMA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;AAXA;;;;;;;;;;AAkBA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;;AAEA;AAAA;AACA;;;;;;AAEA;AAAA;;AAAA;AACA;AAAA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAZA;;;;AAiBA;AAAA;;AAEA;AAEA;AAAA;AACA;AAAA;;AACA;AAAA;AACA;;;;;;AAOA;AAAA;AACA;AAqEA;AApEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;;AACA;AAAA;;AAEA;AACA;;;;;;AAgBA;AAAA;AACA;;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;;AACA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;;;;;;;AAIA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;AACA;;;;;;;AAWA;AACA;AACA;;;;;;AASA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAAA;AACA;AAAA;;AACA;AAAA;;AACA;AACA;;;;;;AAMA;AAAA;AACA;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAxHA;;;;;;;;;;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AAjaA;;AACA;AAEA;AACA;AAGA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AA2TA;;AAzTA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAKA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAaA;AAZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;;AAEA;AACA;;;;;AAEA;AACA;;;;;;AAiBA;AAAA;AACA;AACA;AAAA;;;;;AAEA;;;;;;;;;;;;AAKA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AAzWA;;AACA;AAEA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAIA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAMA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;;;;;AACA;;;;AAGA;;;;;;;;;;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAxEA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AACA;AACA;AACA;AAOA;;;;;;;;;;;;;;;;AAgBA;AACA;;AAIA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAKA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAMA;;;;;;;;;;;;AAKA;AAAA;;AAEA;AACA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;AAMA;AACA;;AACA;AAAA;;AACA;AACA;AACA;;;;;;AACA;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;AAMA;AACA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAhUA;;AAIA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAEA;AACA;AACA;AACA;AACA;AAOA;;;;;;;;;AASA;AACA;;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;;AAEA;AACA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAEA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AA5FA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AAEA;AACA;;AACA;AACA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;AAKA;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AAAA;AAEA;AACA;;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;AAMA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA;;AAEA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAtDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAEA;AACA;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;;;;;;AAGA;AAAA;;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAlEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;;;;;AAGA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAuBA;;;;;;;;AAQA;AACA;AAIA;AAEA;AACA;AAMA;AACA;AACA;AACA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;AAMA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AACA;AAAA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAEA;;;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;AA8CA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;;AAEA;AACA;;;;;;AAGA;AAAA;;AACA;AACA;AAMA;AACA;;;;;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;AAGA;AAAA;;;;;;;;;;;AAIA;AAAA;AACA;AACA;AAMA;;;;;;;;;;;;;;;;;;AApCA;;;;;;;;;;;;;;;AA8CA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AA5KA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AAQA;;;;;;;;;AASA;AACA;;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;;AAEA;AAAA;AAAA;;;;;;AAAA;;AAIA;;;;;;;;;;;;;;;;;;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAIA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAhHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AAOA;;;;;;;;;AASA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;;AAEA;AACA;;AACA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAOA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvCA;;;;;;;;;;;;;;;;AAkDA;AAlGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AACA;AAOA;;;;;;;AAOA;AACA;AAMA;AALA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;AAIA;AAtDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AAMA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;;;;;;;;;;AAUA;AACA;AAKA;AACA;AACA;AAAA;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AADA;;;;;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AADA;;;;;AAIA;;;;;;AAGA;AA9CA;AAgDA;;;AAGA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AAiDA;AA9CA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"}