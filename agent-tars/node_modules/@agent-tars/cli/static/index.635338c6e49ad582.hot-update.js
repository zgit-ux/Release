"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749662798589
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/main/hooks/useTool.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  useTool: () => (useTool)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var _state_atoms_tool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/main/state/atoms/tool.ts");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");





/**
 * Hook for tool-related functionality
 */ function useTool() {
    /**
   * Get a tool result by its tool call ID
   */ const getToolResultForCall = (toolCallId)=>{
        return _state_atoms_tool__WEBPACK_IMPORTED_MODULE_2__.toolCallResultMap.get(toolCallId);
    };
    /**
   * Get the appropriate icon for a tool type with enhanced styling
   */ const getToolIcon = (type)=>{
        // 特殊处理 final_answer 工具，使用更友好的图标和名称
        if (type === 'final_answer') {
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "relative",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "absolute inset-0 bg-gradient-to-br from-accent-400 to-accent-500 rounded-full opacity-20"
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                        lineNumber: 34,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiBookOpen, {
                        className: "relative z-10 text-accent-600 dark:text-accent-400"
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                        lineNumber: 35,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                lineNumber: 33,
                columnNumber: 9
            }, this);
        }
        switch(type){
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-blue-400 to-indigo-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 44,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiSearch, {
                            className: "relative z-10 text-blue-600 dark:text-blue-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 45,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 43,
                    columnNumber: 11
                }, this);
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-purple-400 to-pink-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 51,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiMonitor, {
                            className: "relative z-10 text-purple-600 dark:text-purple-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 52,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 50,
                    columnNumber: 11
                }, this);
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-green-400 to-emerald-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 58,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiTerminal, {
                            className: "relative z-10 text-green-600 dark:text-green-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 59,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 57,
                    columnNumber: 11
                }, this);
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 65,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiFile, {
                            className: "relative z-10 text-yellow-600 dark:text-yellow-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 66,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 64,
                    columnNumber: 11
                }, this);
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-red-400 to-rose-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 72,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiImage, {
                            className: "relative z-10 text-red-600 dark:text-red-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 73,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 71,
                    columnNumber: 11
                }, this);
            case Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()):
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-cyan-400 to-teal-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 79,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiCpu, {
                            className: "relative z-10 text-cyan-600 dark:text-cyan-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 80,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 78,
                    columnNumber: 11
                }, this);
            default:
                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "absolute inset-0 bg-gradient-to-br from-gray-400 to-gray-500 rounded-full opacity-20"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 86,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_4__.FiFile, {
                            className: "relative z-10 text-gray-600 dark:text-gray-400"
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                            lineNumber: 87,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useTool.tsx",
                    lineNumber: 85,
                    columnNumber: 11
                }, this);
        }
    };
    return {
        getToolResultForCall,
        getToolIcon
    };
}

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/main/services/apiService.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  apiService: () => (apiService)
});
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* ESM import */var _socketService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/main/services/socketService.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");


/**
 * API Service - Handles HTTP requests to the Agent TARS Server
 *
 * Provides methods for:
 * - Session management (create, get, update, delete)
 * - Query execution (streaming and non-streaming)
 * - Server health checks
 */ class ApiService {
    /**
   * Check server health status
   */ async checkServerHealth() {
        try {
            // Try ping through socket if connected
            if (_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.isConnected()) {
                const pingSuccessful = await _socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.ping();
                if (pingSuccessful) return true;
            }
            // Fall back to API health endpoint
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(3000)
            });
            return response.ok;
        } catch (error) {
            console.error('Error checking server health:', error);
            return false;
        }
    }
    /**
   * Create a new session
   */ async createSession() {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (!response.ok) {
                throw new Error(`Failed to create session: ${response.statusText}`);
            }
            const { sessionId } = await response.json();
            return this.getSessionDetails(sessionId);
        } catch (error) {
            console.error('Error creating session:', error);
            throw error;
        }
    }
    /**
   * Get all sessions
   */ async getSessions() {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (!response.ok) {
                throw new Error(`Failed to get sessions: ${response.statusText}`);
            }
            const { sessions } = await response.json();
            return sessions;
        } catch (error) {
            console.error('Error getting sessions:', error);
            throw error;
        }
    }
    /**
   * Get details for a specific session
   */ async getSessionDetails(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}?sessionId=${sessionId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(5000)
            });
            if (!response.ok) {
                throw new Error(`Failed to get session details: ${response.statusText}`);
            }
            const { session } = await response.json();
            return session;
        } catch (error) {
            console.error(`Error getting session details (${sessionId}):`, error);
            throw error;
        }
    }
    /**
   * Get events for a specific session
   */ async getSessionEvents(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}?sessionId=${sessionId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(5000)
            });
            if (!response.ok) {
                throw new Error(`Failed to get session events: ${response.statusText}`);
            }
            const { events } = await response.json();
            return events;
        } catch (error) {
            console.error(`Error getting session events (${sessionId}):`, error);
            throw error;
        }
    }
    /**
   * Get current status of a session
   */ async getSessionStatus(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}?sessionId=${sessionId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(3000)
            });
            if (!response.ok) {
                throw new Error(`Failed to get session status: ${response.statusText}`);
            }
            const { status } = await response.json();
            return status;
        } catch (error) {
            console.error(`Error getting session status (${sessionId}):`, error);
            throw error;
        }
    }
    /**
   * Update session metadata
   */ async updateSessionMetadata(sessionId, updates) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId,
                    ...updates
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to update session: ${response.statusText}`);
            }
            const { session } = await response.json();
            return session;
        } catch (error) {
            console.error(`Error updating session (${sessionId}):`, error);
            throw error;
        }
    }
    /**
   * Delete a session
   */ async deleteSession(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to delete session: ${response.statusText}`);
            }
            const { success } = await response.json();
            return success;
        } catch (error) {
            console.error(`Error deleting session (${sessionId}):`, error);
            throw error;
        }
    }
    /**
   * Send a streaming query
   */ async sendStreamingQuery(sessionId, query, onEvent) {
        try {
            var _response_body;
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId,
                    query
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to send query: ${response.statusText}`);
            }
            const reader = (_response_body = response.body) === null || _response_body === void 0 ? void 0 : _response_body.getReader();
            if (!reader) {
                throw new Error('ReadableStream not supported');
            }
            const decoder = new TextDecoder();
            let buffer = '';
            while(true){
                const { done, value } = await reader.read();
                if (done) break;
                // Add the new chunk to the buffer
                buffer += decoder.decode(value, {
                    stream: true
                });
                // Process all complete events in the buffer
                let eventEndIndex;
                while((eventEndIndex = buffer.indexOf('\n\n')) !== -1){
                    const eventString = buffer.slice(0, eventEndIndex);
                    // Move buffer to the next event
                    buffer = buffer.slice(eventEndIndex + 2);
                    if (eventString.startsWith('data: ')) {
                        try {
                            const eventData = JSON.parse(eventString.substring(6));
                            onEvent(eventData);
                        } catch (e) {
                            console.error('Error parsing event data:', e);
                        }
                    }
                }
            }
        } catch (error) {
            console.error('Error in streaming query:', error);
            throw error;
        }
    }
    /**
   * Send a non-streaming query
   */ async sendQuery(sessionId, query) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId,
                    query
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to send query: ${response.statusText}`);
            }
            const data = await response.json();
            return data.result;
        } catch (error) {
            console.error('Error sending query:', error);
            throw error;
        }
    }
    /**
   * Abort a running query
   */ async abortQuery(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to abort query: ${response.statusText}`);
            }
            const data = await response.json();
            return data.success;
        } catch (error) {
            console.error('Error aborting query:', error);
            throw error;
        }
    }
    /**
   * Generate a summary for a conversation
   */ async generateSummary(sessionId, messages) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId,
                    messages
                })
            });
            if (!response.ok) {
                throw new Error(`Failed to generate summary: ${response.statusText}`);
            }
            const { summary } = await response.json();
            return summary;
        } catch (error) {
            console.error('Error generating summary:', error);
            return 'Untitled Conversation';
        }
    }
    /**
   * Get browser control information for a session
   */ async getBrowserControlInfo(sessionId) {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}/api/sessions/browser-control?sessionId=${sessionId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(3000)
            });
            if (!response.ok) {
                throw new Error(`Failed to get browser control info: ${response.statusText}`);
            }
            return await response.json();
        } catch (error) {
            console.error(`Error getting browser control info (${sessionId}):`, error);
            // 返回默认值作为回退
            return {
                mode: 'default',
                tools: []
            };
        }
    }
    /**
   * Get model information from the server
   * @returns Model provider and model name information
   */ async getModelInfo() {
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                signal: AbortSignal.timeout(3000)
            });
            if (!response.ok) {
                throw new Error(`Failed to get model info: ${response.statusText}`);
            }
            return await response.json();
        } catch (error) {
            console.error('Error getting model info:', error);
            // Return default values in case of error
            return {
                provider: 'Unknown Provider',
                model: 'Unknown Model'
            };
        }
    }
}
// Export singleton instance
const apiService = new ApiService();

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/main/services/socketService.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  socketService: () => (socketService)
});
/* ESM import */var _swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_define_property.js");
/* ESM import */var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/socket.io-client@4.8.1/node_modules/socket.io-client/build/esm/index.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");



/**
 * Socket Service - Manages WebSocket connection with server
 */ class SocketService {
    /**
   * Connect to the WebSocket server
   */ connect() {
        var _this_socket;
        if ((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.connected) {
            return this.socket;
        }
        this.socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), {
            reconnection: true,
            reconnectionDelay: Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
            reconnectionDelayMax: Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
            reconnectionAttempts: Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())
        });
        // Set up core event handlers
        this.setupEventHandlers();
        return this.socket;
    }
    /**
   * Disconnect from the WebSocket server
   */ disconnect() {
        this.stopHeartbeat();
        if (this.socket) {
            this.socket.disconnect();
            this.socket = null;
        }
        this.missedHeartbeats = 0;
        this.reconnectAttempts = 0;
    }
    /**
   * Check if currently connected to the server
   */ isConnected() {
        var _this_socket;
        return ((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.connected) || false;
    }
    /**
   * Join a specific session to receive its events
   */ joinSession(sessionId, onEvent, onStatusUpdate) {
        if (!this.socket) {
            this.connect();
        }
        if (!this.socket) return;
        console.log(`Joining session: ${sessionId}`);
        this.socket.emit(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), sessionId);
        // 清理现有监听器
        this.socket.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
        this.socket.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
        // 设置事件监听器
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), (param)=>{
            let { type, data } = param;
            if (data) {
                onEvent(data);
            }
        });
        // 增强状态更新处理
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), (status)=>{
            console.log('Received agent status:', status);
            onStatusUpdate(status);
            // 触发全局事件以同步应用中的所有组件
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), status);
        });
        // 立即请求当前状态
        this.socket.emit('request-status', {
            sessionId
        });
    }
    /**
   * Send a query to the server
   */ sendQuery(params) {
        var _this_socket;
        if (!((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.connected)) {
            throw new Error('Socket not connected');
        }
        this.socket.emit(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), params);
    }
    /**
   * Abort the current query
   */ abortQuery(params) {
        var _this_socket;
        if (!((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.connected)) {
            throw new Error('Socket not connected');
        }
        this.socket.emit(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), params);
    }
    /**
   * Add an event listener
   */ on(event, callback) {
        if (!this.eventHandlers[event]) {
            this.eventHandlers[event] = [];
        }
        this.eventHandlers[event].push(callback);
        // If we already have a socket, add the listener directly
        if (this.socket) {
            this.socket.on(event, callback);
        }
    }
    /**
   * Remove an event listener
   */ off(event, callback) {
        if (this.eventHandlers[event]) {
            this.eventHandlers[event] = this.eventHandlers[event].filter((cb)=>cb !== callback);
        }
        if (this.socket) {
            this.socket.off(event, callback);
        }
    }
    /**
   * Send a ping to check server connectivity
   */ ping() {
        return new Promise((resolve)=>{
            if (!this.socket || !this.socket.connected) {
                resolve(false);
                return;
            }
            const timeout = setTimeout(()=>{
                resolve(false);
            }, 5000);
            this.socket.emit(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{
                clearTimeout(timeout);
                resolve(true);
            });
        });
    }
    /**
   * Get the socket instance
   */ getSocket() {
        return this.socket;
    }
    /**
   * Set up event handlers for the socket connection
   */ setupEventHandlers() {
        if (!this.socket) return;
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.handleConnect);
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.handleDisconnect);
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.handleError);
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.handleReconnectAttempt);
        this.socket.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.handleReconnectFailed);
        // Apply any event handlers that were registered before connecting
        Object.entries(this.eventHandlers).forEach((param)=>{
            let [event, handlers] = param;
            handlers.forEach((handler)=>{
                var _this_socket;
                (_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.on(event, handler);
            });
        });
    }
    /**
   * Start heartbeat monitoring
   */ startHeartbeat() {
        this.stopHeartbeat();
        this.missedHeartbeats = 0;
        this.heartbeatTimer = setInterval(()=>{
            this.sendHeartbeat();
        }, Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
    }
    /**
   * Stop heartbeat monitoring
   */ stopHeartbeat() {
        if (this.heartbeatTimer) {
            clearInterval(this.heartbeatTimer);
            this.heartbeatTimer = null;
        }
    }
    /**
   * Send heartbeat to server and track response
   */ sendHeartbeat() {
        if (!this.socket || !this.socket.connected) {
            this.missedHeartbeats++;
            if (this.missedHeartbeats >= Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())) {
                var _this_socket;
                console.warn(`Missed ${this.missedHeartbeats} heartbeats, connection may be down`);
                (_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.disconnect();
            }
            return;
        }
        this.socket.emit(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{
            this.missedHeartbeats = 0;
        });
        // Increment counter - will be reset when we get a response
        this.missedHeartbeats++;
        if (this.missedHeartbeats >= Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())) {
            console.warn(`Missed ${this.missedHeartbeats} heartbeats, connection may be down`);
            this.socket.disconnect();
        }
    }
    /**
   * Notify all registered event handlers for a specific event
   */ notifyEventHandlers(event) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            args[_key - 1] = arguments[_key];
        }
        if (this.eventHandlers[event]) {
            this.eventHandlers[event].forEach((handler)=>{
                try {
                    handler(...args);
                } catch (error) {
                    console.error(`Error in ${event} event handler:`, error);
                }
            });
        }
    }
    constructor(){
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "socket", null);
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "heartbeatTimer", null);
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "missedHeartbeats", 0);
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "reconnectAttempts", 0);
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "eventHandlers", {});
        /**
   * Handle successful connection
   */ (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "handleConnect", ()=>{
            console.log('Connected to server');
            this.missedHeartbeats = 0;
            this.reconnectAttempts = 0;
            this.startHeartbeat();
            // Notify event handlers
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
        });
        /**
   * Handle disconnection
   */ (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "handleDisconnect", (reason)=>{
            console.log('Disconnected from server:', reason);
            this.stopHeartbeat();
            // Notify event handlers
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), reason);
        });
        /**
   * Handle connection errors
   */ (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "handleError", (error)=>{
            console.error('Socket error:', error);
            // Notify event handlers
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), error);
        });
        /**
   * Handle reconnection attempts
   */ (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "handleReconnectAttempt", ()=>{
            this.reconnectAttempts++;
            console.log(`Reconnection attempt ${this.reconnectAttempts}/${Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`);
            // Notify event handlers
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), this.reconnectAttempts);
        });
        /**
   * Handle failed reconnection
   */ (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_2__._)(this, "handleReconnectFailed", ()=>{
            console.log('Failed to reconnect after multiple attempts');
            // Notify event handlers
            this.notifyEventHandlers(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
        });
    }
}
// Export singleton instance
const socketService = new SocketService();

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/main/state/actions/connectionActions.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  checkConnectionStatusAction: () => (checkConnectionStatusAction),
  initConnectionMonitoringAction: () => (initConnectionMonitoringAction)
});
/* ESM import */var jotai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/.pnpm/jotai@2.12.5_@types+react@18.3.23_react@18.3.1/node_modules/jotai/esm/vanilla.mjs");
/* ESM import */var _services_apiService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/main/services/apiService.ts");
/* ESM import */var _services_socketService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/main/services/socketService.ts");
/* ESM import */var _atoms_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/main/state/atoms/ui.ts");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");





/**
 * Check server connection status
 */ const checkConnectionStatusAction = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null, async (get, set)=>{
    const currentStatus = get(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom);
    try {
        const isConnected = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.checkServerHealth();
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, {
            ...currentStatus,
            connected: isConnected,
            lastConnected: isConnected ? Date.now() : currentStatus.lastConnected,
            lastError: isConnected ? null : currentStatus.lastError
        });
        return isConnected;
    } catch (error) {
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, {
            ...currentStatus,
            connected: false,
            lastError: error instanceof Error ? error.message : String(error)
        });
        return false;
    }
});
/**
 * Initialize connection monitoring
 */ const initConnectionMonitoringAction = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null, (get, set)=>{
    // Perform initial check
    set(checkConnectionStatusAction);
    // Set up socket event listeners
    _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, (prev)=>({
                ...prev,
                connected: true,
                lastConnected: Date.now(),
                lastError: null,
                reconnecting: false
            }));
    });
    _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), (reason)=>{
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, (prev)=>({
                ...prev,
                connected: false,
                lastError: `Disconnected: ${reason}`,
                reconnecting: true
            }));
    });
    _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, (prev)=>({
                ...prev,
                reconnecting: true
            }));
    });
    _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.on(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_2__.connectionStatusAtom, (prev)=>({
                ...prev,
                connected: false,
                reconnecting: false,
                lastError: 'Failed to reconnect after multiple attempts'
            }));
    });
    // Set up periodic health checks
    const intervalId = setInterval(()=>{
        set(checkConnectionStatusAction);
    }, 30000); // Check every 30 seconds
    // Return cleanup function
    return ()=>{
        clearInterval(intervalId);
        _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{});
        _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{});
        _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{});
        _services_socketService__WEBPACK_IMPORTED_MODULE_1__.socketService.off(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../../constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), ()=>{});
    };
});

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/standalone/share/shareService.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  shareService: () => (shareService)
});
/* ESM import */var _swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_define_property.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/main/constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");


/**
 * 分享服务类 - 处理分享相关功能
 */ class ShareService {
    /**
   * 获取分享配置
   */ async getShareConfig() {
        if (this.shareConfig) {
            return this.shareConfig;
        }
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/main/constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}/api/share/config`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (!response.ok) {
                throw new Error(`Failed to get share config: ${response.statusText}`);
            }
            this.shareConfig = await response.json();
            return this.shareConfig;
        } catch (error) {
            console.error('Failed to get share config:', error);
            // 默认配置
            return {
                hasShareProvider: false,
                shareProvider: null
            };
        }
    }
    /**
   * 分享会话
   * @param sessionId 会话ID
   * @param upload 是否上传到分享提供者（如果存在）
   */ async shareSession(sessionId) {
        let upload = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        try {
            const response = await fetch(`${Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/main/constants'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}/api/sessions/share`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    sessionId,
                    upload
                })
            });
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || `Failed to share session: ${response.statusText}`);
            }
            return await response.json();
        } catch (error) {
            console.error('Failed to share session:', error);
            return {
                success: false,
                error: error instanceof Error ? error.message : String(error)
            };
        }
    }
    /**
   * 下载 HTML 分享文件
   * @param html HTML 内容
   * @param sessionId 会话ID
   */ downloadShareHtml(html, sessionId) {
        const blob = new Blob([
            html
        ], {
            type: 'text/html'
        });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `agent-tars-${sessionId}-${Date.now()}.html`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    }
    constructor(){
        (0,_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_1__._)(this, "shareConfig", null);
    }
}
const shareService = new ShareService();

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("0635d2e14dc1b84e")
})();

}
);
//# sourceMappingURL=index.635338c6e49ad582.hot-update.js.map