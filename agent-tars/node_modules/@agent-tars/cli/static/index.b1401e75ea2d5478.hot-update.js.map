{"version":3,"file":"index.b1401e75ea2d5478.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/DeliverableRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/ToolResultRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749657885493\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '../../hooks/useSession';\nimport { usePlan } from '../../hooks/usePlan';\nimport { usePro } from '../../hooks/usePro';\nimport { FiLayout, FiCpu, FiCheck, FiClock, FiZap, FiArrowRight, FiLayers, FiActivity, FiFileText } from 'react-icons/fi';\nimport './Workspace.css';\n\n/**\n * WorkspaceContent Component - Enhanced workspace with beautiful empty state\n *\n * Design principles:\n * - Focus on plan display for Pro users\n * - Beautiful empty state when no content is available\n * - Clean visual hierarchy and elegant animations\n */\nexport const WorkspaceContent: React.FC = () => {\n  const { activeSessionId, setActivePanelContent } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const isProMode = usePro();\n\n  // Animation variants\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: { \n      opacity: 1,\n      transition: { \n        staggerChildren: 0.1,\n        delayChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.6, ease: [0.19, 1, 0.22, 1] }\n    },\n  };\n\n  // Plan view button for Pro users\n  const renderPlanButton = () => {\n    if (!isProMode) return null;\n\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.div\n        variants={itemVariants}\n        className=\"mb-6\"\n      >\n        <motion.div\n          whileHover={{ y: -4, boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02)' }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() =>\n            setActivePanelContent({\n              type: 'plan',\n              source: null,\n              title: 'Task Plan',\n              timestamp: Date.now(),\n            })\n          }\n          className=\"bg-white dark:bg-gray-800/90 rounded-2xl border border-[#E5E6EC]/70 dark:border-gray-700/40 overflow-hidden cursor-pointer transition-all duration-300 shadow-sm hover:shadow-md\"\n        >\n          <div className=\"p-5\">\n            <div className=\"flex items-start\">\n              <div\n                className={`w-14 h-14 rounded-2xl flex items-center justify-center mr-4 flex-shrink-0 ${\n                  isComplete\n                    ? 'bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 text-green-600 dark:text-green-400 border border-green-100/80 dark:border-green-800/40'\n                    : 'bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30'\n                }`}\n              >\n                {isComplete ? (\n                  <FiCpu size={24} />\n                ) : (\n                  <motion.div\n                    animate={{ scale: [1, 1.08, 1] }}\n                    transition={{ duration: 2.5, repeat: Infinity, ease: \"easeInOut\" }}\n                  >\n                    <FiCpu size={24} />\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between\">\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg mb-1 truncate pr-2\">\n                    Task Plan\n                  </h4>\n                  <div className=\"flex items-center text-xs\">\n                    <span\n                      className={`w-2 h-2 rounded-full mr-1.5 ${\n                        isComplete\n                          ? 'bg-green-500 dark:bg-green-400'\n                          : 'bg-accent-500 dark:bg-accent-400'\n                      }`}\n                    />\n                    <span className=\"text-gray-500 dark:text-gray-400\">\n                      {isComplete ? 'Completed' : 'In progress'}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  {isComplete \n                    ? 'All planned steps have been completed successfully.' \n                    : 'The agent is executing a plan to accomplish your task.'}\n                </div>\n\n                {/* Progress bar */}\n                <div className=\"mt-1 mb-2\">\n                  <div className=\"flex justify-between items-center mb-1.5 text-xs\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Progress</span>\n                    <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                      {completedSteps}/{totalSteps}\n                    </span>\n                  </div>\n                  <div className=\"h-2 bg-gray-100 dark:bg-gray-700/70 rounded-full overflow-hidden\">\n                    <div\n                      className={`h-full ${\n                        isComplete\n                          ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                          : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n                      }`}\n                      style={{ width: `${totalSteps ? (completedSteps / totalSteps) * 100 : 0}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-b from-gray-50/70 to-gray-50 dark:from-gray-800/50 dark:to-gray-800/80 px-5 py-3 border-t border-[#E5E6EC]/50 dark:border-gray-700/30 flex justify-between items-center\">\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              View plan details\n            </div>\n            <div className=\"flex items-center text-sm\">\n              <FiArrowRight \n                className=\"text-accent-500 dark:text-accent-400\"\n                size={16}\n              />\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  };\n\n  // Enhanced empty state when no session\n  if (!activeSessionId) {\n    return (\n      <motion.div\n        variants={containerVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        className=\"flex items-center justify-center h-full text-center py-12\"\n      >\n        <div className=\"max-w-md mx-auto px-6\">\n          <motion.div\n            variants={itemVariants}\n            className=\"relative mx-auto mb-8\"\n          >\n            {/* Gradient background glow effect */}\n            <div className=\"absolute inset-0 w-24 h-24 mx-auto rounded-full bg-gradient-to-br from-gray-200/50 to-gray-100/30 dark:from-gray-700/30 dark:to-gray-800/20 blur-xl\"></div>\n            \n            {/* Main icon */}\n            <div className=\"relative w-24 h-24 mx-auto rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n              <FiLayout size={40} className=\"text-gray-500 dark:text-gray-400\" />\n            </div>\n          </motion.div>\n          \n          <motion.h3 \n            variants={itemVariants}\n            className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n          \n          <motion.p \n            variants={itemVariants}\n            className=\"text-gray-600 dark:text-gray-400 leading-relaxed\"\n          >\n            Create or select a session to start working. Tool results and detailed information will be displayed here automatically.\n          </motion.p>\n        </div>\n      </motion.div>\n    );\n  }\n\n  // Enhanced empty state when session exists but no content\n  const hasContent = currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header with refined styling */}\n      <div className=\"flex items-center px-6 py-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-700 dark:to-gray-800 flex items-center justify-center text-gray-600 dark:text-gray-400 border border-gray-200/60 dark:border-gray-700/40 shadow-sm\">\n          <FiLayers size={18} />\n        </div>\n        <div>\n          <h2 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg\">Workspace</h2>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            View tool outputs and plan details\n          </div>\n        </div>\n      </div>\n\n      {/* Content area with elegant empty state */}\n      <div className=\"flex-1 overflow-y-auto p-6\">\n        {hasContent ? (\n          <motion.div \n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"space-y-8\"\n          >\n            {/* Plan view for Pro users */}\n            {renderPlanButton()}\n          </motion.div>\n        ) : (\n          /* Beautiful empty state for active session with no content */\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"flex items-center justify-center h-full text-center\"\n          >\n            <div className=\"max-w-lg mx-auto px-6\">\n              <motion.div\n                variants={itemVariants}\n                className=\"relative mb-10\"\n              >\n                {/* Animated background circles */}\n                <motion.div\n                  animate={{ \n                    scale: [1, 1.1, 1], \n                    opacity: [0.3, 0.5, 0.3],\n                    rotate: [0, 5, 0, -5, 0]\n                  }}\n                  transition={{ duration: 6, repeat: Infinity, ease: \"easeInOut\" }}\n                  className=\"absolute inset-0 w-28 h-28 rounded-full bg-gradient-to-br from-accent-200/30 to-accent-300/20 dark:from-accent-800/20 dark:to-accent-700/10 mx-auto blur-xl\"\n                />\n                <motion.div\n                  animate={{ \n                    scale: [1.1, 1, 1.1], \n                    opacity: [0.2, 0.4, 0.2],\n                    rotate: [0, -5, 0, 5, 0]\n                  }}\n                  transition={{ duration: 5, repeat: Infinity, ease: \"easeInOut\", delay: 1 }}\n                  className=\"absolute inset-0 w-32 h-32 rounded-full bg-gradient-to-br from-purple-200/20 to-purple-300/10 dark:from-purple-800/10 dark:to-purple-700/5 mx-auto mt-2 ml-2 blur-xl\"\n                />\n                \n                {/* Main icon with glowing effect */}\n                <div className=\"relative mx-auto w-28 h-28 rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n                  <motion.div \n                    animate={{ \n                      scale: [1, 1.05, 1],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: \"easeInOut\" }}\n                  >\n                    <FiActivity size={44} className=\"text-accent-500 dark:text-accent-400\" />\n                  </motion.div>\n                  \n                  {/* Subtle pulsing ring */}\n                  <motion.div\n                    animate={{ \n                      scale: [0.8, 1.2, 0.8], \n                      opacity: [0.3, 0.1, 0.3] \n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: \"easeInOut\" }}\n                    className=\"absolute inset-0 rounded-3xl border-2 border-accent-400/20 dark:border-accent-400/10\"\n                  />\n                </div>\n              </motion.div>\n              \n              <motion.h3 \n                variants={itemVariants}\n                className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200 bg-gradient-to-r from-gray-800 to-gray-600 dark:from-gray-200 dark:to-gray-300 bg-clip-text text-transparent\"\n              >\n                Ready for Action\n              </motion.h3>\n              \n              <motion.p \n                variants={itemVariants}\n                className=\"text-gray-600 dark:text-gray-400 leading-relaxed mb-8 max-w-md mx-auto\"\n              >\n                Your workspace is active. Start a conversation with Agent TARS and watch as tool results, plans, and detailed information appear here in real-time.\n              </motion.p>\n\n              <motion.div\n                variants={containerVariants}\n                className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 max-w-2xl mx-auto\"\n              >\n                <motion.div \n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-blue-50 dark:bg-blue-900/20 flex items-center justify-center mb-3 text-blue-500 dark:text-blue-400 border border-blue-100/80 dark:border-blue-800/30\">\n                    <FiLayout size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Tool Results</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Comprehensive outputs</div>\n                  </div>\n                </motion.div>\n\n                {isProMode && (\n                  <motion.div \n                    variants={itemVariants}\n                    whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                    className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                  >\n                    <div className=\"w-12 h-12 rounded-xl bg-purple-50 dark:bg-purple-900/20 flex items-center justify-center mb-3 text-purple-500 dark:text-purple-400 border border-purple-100/80 dark:border-purple-800/30\">\n                      <FiCpu size={22} />\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Task Plans</div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Execution progress</div>\n                    </div>\n                  </motion.div>\n                )}\n\n                <motion.div \n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-green-50 dark:bg-green-900/20 flex items-center justify-center mb-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n                    <FiZap size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Live Updates</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Real-time results</div>\n                  </div>\n                </motion.div>\n                \n                <motion.div \n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-amber-50 dark:bg-amber-900/20 flex items-center justify-center mb-3 text-amber-500 dark:text-amber-400 border border-amber-100/80 dark:border-amber-800/30\">\n                    <FiFileText size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Deliverables</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Reports & Code</div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiCode, FiDownload, FiExternalLink, FiCopy, FiCheck } from 'react-icons/fi';\nimport { ToolResultContentPart } from '../../../types';\nimport { MarkdownRenderer } from '../../Markdown';\n\ninterface DeliverableRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * DeliverableRenderer - Specialized component for rendering deliverable content\n * such as reports, code artifacts, and other final products\n *\n * Features:\n * - Categorizes deliverables by type (code, document, data)\n * - Provides download and copy functionality\n * - Offers appropriate preview for different content types\n * - Visual design consistent with other workspace renderers\n */\nexport const DeliverableRenderer: React.FC<DeliverableRendererProps> = ({ part, onAction }) => {\n  const { title, text, data, name } = part;\n  const [copied, setCopied] = React.useState(false);\n  \n  // Determine deliverable type based on available data\n  const getDeliverableType = () => {\n    if (!part) return 'unknown';\n    \n    // Check extensions if name exists\n    if (name) {\n      if (/\\.(js|ts|jsx|tsx|py|java|c|cpp|php|html|css|json)$/i.test(name)) return 'code';\n      if (/\\.(md|txt|docx|pdf|rtf)$/i.test(name)) return 'document';\n      if (/\\.(csv|xlsx|xls|xml)$/i.test(name)) return 'data';\n    }\n    \n    // Check title\n    if (title) {\n      if (title.toLowerCase().includes('report')) return 'document';\n      if (title.toLowerCase().includes('code')) return 'code';\n      if (title.toLowerCase().includes('data')) return 'data';\n    }\n    \n    // Default\n    return 'document';\n  };\n  \n  const deliverableType = getDeliverableType();\n  const content = text || (typeof data === 'string' ? data : JSON.stringify(data, null, 2));\n  \n  if (!content) {\n    return <div className=\"text-gray-500 italic\">No deliverable content available</div>;\n  }\n  \n  // Handle copy to clipboard\n  const handleCopy = () => {\n    navigator.clipboard.writeText(content);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  \n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name || title || 'deliverable';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      {/* Deliverable header with metadata */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/50 dark:border-gray-700/30\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 rounded-xl flex items-center justify-center mr-3 border border-gray-200/50 dark:border-gray-700/30 shadow-sm \n            bg-gradient-to-br \n            from-amber-50 to-amber-100 dark:from-amber-900/20 dark:to-amber-800/20 \n            text-amber-500 dark:text-amber-400\">\n            {deliverableType === 'code' ? (\n              <FiCode size={18} />\n            ) : (\n              <FiFileText size={18} />\n            )}\n          </div>\n          <div>\n            <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n              {title || name || 'Deliverable'}\n            </h3>\n            <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n              <span className=\"mr-2\">{deliverableType === 'code' ? 'Code artifact' : 'Document'}</span>\n              {name && <span className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full\">{name}</span>}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n          </motion.button>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Download file\"\n          >\n            <FiDownload size={18} />\n          </motion.button>\n        </div>\n      </div>\n      \n      {/* Content preview with appropriate rendering */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiFileText className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={16} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">Content Preview</div>\n        </div>\n        \n        <div className=\"p-4 max-h-[70vh] overflow-auto\">\n          {deliverableType === 'code' ? (\n            <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n              {content}\n            </pre>\n          ) : (\n            <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n              <MarkdownRenderer content={content} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TextRenderer } from './TextRenderer';\nimport { ImageRenderer } from './ImageRenderer';\nimport { LinkRenderer } from './LinkRenderer';\nimport { SearchResultRenderer } from './SearchResultRenderer';\nimport { CommandResultRenderer } from './CommandResultRenderer';\nimport { BrowserResultRenderer } from './BrowserResultRenderer';\nimport { BrowserControlRenderer } from './BrowserControlRenderer';\nimport { PlanViewerRenderer } from './PlanViewerRenderer';\nimport { ResearchReportRenderer } from './ResearchReportRenderer';\nimport { FileResultRenderer } from './FileResultRenderer';\nimport { GenericResultRenderer } from './GenericResultRenderer';\nimport { DeliverableRenderer } from './DeliverableRenderer';\nimport { ToolResultContentPart } from '@/v2/types';\n\n/**\n * Registry of content part renderers\n * Maps content types to their renderer components\n *\n * Design pattern: Component Registry pattern - allows dynamic registration of\n * renderers for different content types without modifying the core renderer\n */\nconst CONTENT_RENDERERS: Record<\n  string,\n  React.FC<{ part: ToolResultContentPart; onAction?: (action: string, data: any) => void }>\n> = {\n  text: TextRenderer,\n  image: ImageRenderer,\n  link: LinkRenderer,\n  search_result: SearchResultRenderer,\n  command_result: CommandResultRenderer,\n  browser_result: BrowserResultRenderer,\n  browser_control: BrowserControlRenderer,\n  plan: PlanViewerRenderer,\n  research_report: ResearchReportRenderer,\n  file_result: FileResultRenderer,\n  json: GenericResultRenderer,\n  deliverable: DeliverableRenderer, // Add new deliverable renderer\n};\n\ninterface ToolResultRendererProps {\n  /**\n   * Array of content parts to render\n   */\n  content: ToolResultContentPart[];\n\n  /**\n   * Optional handler for interactive actions\n   */\n  onAction?: (action: string, data: any) => void;\n\n  /**\n   * Optional className for the container\n   */\n  className?: string;\n}\n\n/**\n * Renders tool result content parts using the appropriate renderer for each part\n *\n * This component acts as a router that delegates rendering to specialized components\n * based on the content type, making it easily extensible to new content types.\n *\n * Improvements:\n * - Special handling for browser_get_markdown content\n * - Uses browser shell for browser-related tool results\n * - Consistent styling across all tool result types\n * - Intelligent generic renderer for unknown formats\n */\nexport const ToolResultRenderer: React.FC<ToolResultRendererProps> = ({\n  content,\n  onAction,\n  className = '',\n}) => {\n  if (!content || content.length === 0) {\n    return (\n      <div className=\"p-4 text-gray-500 dark:text-gray-400 text-sm italic\">\n        No content to display\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {content.map((part, index) => {\n        // 特殊处理: 如果是 json 类型的部分，使用智能渲染器\n        if (part.type === 'json') {\n          return (\n            <div key={`json-${part.name || ''}-${index}`} className=\"tool-result-part\">\n              <GenericResultRenderer part={part} onAction={onAction} />\n            </div>\n          );\n        }\n\n        // 正常渲染其他类型\n        const Renderer = CONTENT_RENDERERS[part.type] || TextRenderer;\n\n        return (\n          <div key={`${part.type}-${part.name || ''}-${index}`} className=\"tool-result-part\">\n            <Renderer part={part} onAction={onAction} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\n/**\n * Register a custom renderer for a specific content type\n * This allows extending the system with new renderers without modifying this file\n */\nexport function registerRenderer(\n  contentType: string,\n  renderer: React.FC<{\n    part: ToolResultContentPart;\n    onAction?: (action: string, data: any) => void;\n  }>,\n): void {\n  CONTENT_RENDERERS[contentType] = renderer;\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACA;AAAA;;AACA;AACA;AAMA;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;AAIA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;;AACA;AACA;;;;;;AAMA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;;;;;;AAMA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAGA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAMA;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;;;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AACA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAIA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AA5VA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AAOA;;;;;;;;;AASA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;AAIA;AACA;;;;;AAEA;AAAA;;;;;;;;;;;AAGA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAMA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AA1HA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;;;;;;;;;;;AAWA;AACA;AAKA;AACA;AACA;AAAA;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AADA;;;;;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;AADA;;;;;AAIA;;;;;;AAGA;AApCA;AAsCA;;;AAGA;AAQA;AACA"}