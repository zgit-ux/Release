"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749556545575
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/v2/components/Workspace/WorkspaceDetail.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  WorkspaceDetail: () => (WorkspaceDetail)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var _hooks_useTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/hooks/useTool.tsx");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var _utils_formatters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/v2/utils/formatters.ts");
/* ESM import */var _renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/v2/components/Workspace/renderers/ToolResultRenderer.tsx");
/* ESM import */var _renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/v2/components/Workspace/renderers/ResearchReportRenderer.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();








/**
 * WorkspaceDetail Component - Displays details of a single tool result or report
 */ const WorkspaceDetail = ()=>{
    var _activePanelContent_toolCallId, _activePanelContent_toolCallId1;
    _s();
    const { activePanelContent, setActivePanelContent, toolResults, activeSessionId } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    const { getToolIcon } = (0,_hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool)();
    if (!activePanelContent) {
        return null;
    }
    const handleBackToList = ()=>{
        setActivePanelContent(null);
    };
    // 特殊处理 final_answer 类型或研究报告内容
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report' || activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer')) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: typeof activePanelContent.source === 'string' ? activePanelContent.source : JSON.stringify(activePanelContent.source, null, 2),
            title: activePanelContent.title || 'Research Report',
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
            lineNumber: 32,
            columnNumber: 7
        }, undefined);
    }
    // 特殊处理研究报告内容
    if ((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'research_report') {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ResearchReportRenderer__WEBPACK_IMPORTED_MODULE_6__.ResearchReportRenderer, {
            content: activePanelContent.source,
            title: activePanelContent.title,
            isStreaming: activePanelContent.isStreaming
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
            lineNumber: 47,
            columnNumber: 7
        }, undefined);
    }
    // Convert legacy format content to standardized tool result parts
    const getStandardizedContent = ()=>{
        const { type, source, title, error, arguments: toolArguments } = activePanelContent;
        // Show error if present
        if (error) {
            return [
                {
                    type: 'text',
                    name: 'ERROR',
                    text: error
                }
            ];
        }
        // Handle browser_vision_control type specifically
        if (type === 'browser_vision_control') {
            // Create browser_control part for the specialized renderer
            return [
                {
                    type: 'browser_control',
                    name: 'BROWSER_CONTROL',
                    toolCallId: activePanelContent.toolCallId,
                    thought: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.thought) || '',
                    step: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.step) || '',
                    action: (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.action) || '',
                    status: (source === null || source === void 0 ? void 0 : source.status) || 'unknown'
                }
            ];
        }
        // Handle array of content parts from environment_input
        if (Array.isArray(source) && source.some((part)=>part.type === 'image_url')) {
            const imagePart = source.find((part)=>part.type === 'image_url');
            if (imagePart && imagePart.image_url && imagePart.image_url.url) {
                const imgSrc = imagePart.image_url.url;
                if (imgSrc.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = imgSrc.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
            }
        }
        // Based on tool type, convert to standardized format
        switch(type){
            case 'image':
                // Image content
                if (typeof source === 'string' && source.startsWith('data:image/')) {
                    const [mimeTypePrefix, base64Data] = source.split(',');
                    const mimeType = mimeTypePrefix.split(':')[1].split(';')[0];
                    return [
                        {
                            type: 'image',
                            imageData: base64Data,
                            mimeType,
                            name: activePanelContent.title
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: 'Image could not be displayed'
                    }
                ];
            case 'search':
                // Search results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    // Handle new multimodal format
                    const resultsItem = source.find((item)=>item.name === 'RESULTS');
                    const queryItem = source.find((item)=>item.name === 'QUERY');
                    if (resultsItem && resultsItem.text) {
                        // Parse results text into separate result items
                        const resultBlocks = resultsItem.text.split('---').filter(Boolean);
                        const parsedResults = resultBlocks.map((block)=>{
                            const lines = block.trim().split('\n');
                            const titleLine = lines[0] || '';
                            const urlLine = lines[1] || '';
                            const snippet = lines.slice(2).join('\n');
                            const title = titleLine.replace(/^\[\d+\]\s*/, '').trim();
                            const url = urlLine.replace(/^URL:\s*/, '').trim();
                            return {
                                title,
                                url,
                                snippet
                            };
                        });
                        // Return only the search_result part, removing the redundant text query part
                        return [
                            {
                                type: 'search_result',
                                name: 'SEARCH_RESULTS',
                                results: parsedResults,
                                query: queryItem === null || queryItem === void 0 ? void 0 : queryItem.text
                            }
                        ];
                    }
                }
                // Handle old format
                if (source && typeof source === 'object' && source.results) {
                    return [
                        {
                            type: 'search_result',
                            name: 'SEARCH_RESULTS',
                            results: source.results,
                            query: source.query
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'command':
                // Command results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    var _source_find;
                    // New multimodal format
                    const commandItem = source.find((item)=>item.name === 'COMMAND');
                    const stdoutItem = source.find((item)=>item.name === 'STDOUT');
                    const stderrItem = source.find((item)=>item.name === 'STDERR');
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: (commandItem === null || commandItem === void 0 ? void 0 : commandItem.text) || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: (stdoutItem === null || stdoutItem === void 0 ? void 0 : stdoutItem.text) || '',
                            stderr: (stderrItem === null || stderrItem === void 0 ? void 0 : stderrItem.text) || '',
                            exitCode: (_source_find = source.find((item)=>item.name === 'EXIT_CODE')) === null || _source_find === void 0 ? void 0 : _source_find.value
                        }
                    ];
                }
                // Old format
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'command_result',
                            name: 'COMMAND_RESULT',
                            command: source.command || (toolArguments === null || toolArguments === void 0 ? void 0 : toolArguments.command),
                            stdout: source.output || source.stdout || '',
                            stderr: source.stderr || '',
                            exitCode: source.exitCode
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            case 'browser':
                const toolName = (title === null || title === void 0 ? void 0 : title.toLowerCase()) || '';
                if (toolName.includes('navigate')) {
                    let textContent = '';
                    if (typeof source === 'string') {
                        textContent = source;
                    } else if (Array.isArray(source)) {
                        textContent = source.filter((p)=>p.type === 'text').map((p)=>p.text).join('\n');
                    } else if (typeof source === 'object' && source !== null) {
                        textContent = source.content || source.text || JSON.stringify(source, null, 2);
                    }
                    return [
                        {
                            type: 'text',
                            name: title,
                            text: textContent,
                            showAsRawMarkdown: true
                        }
                    ];
                }
                // Browser results
                if (Array.isArray(source) && source.some((item)=>item.type === 'text')) {
                    // 处理数组格式的浏览器结果
                    const contentText = source.filter((item)=>item.type === 'text').map((item)=>item.text).join('\n');
                    return [
                        {
                            type: 'browser_result',
                            name: 'BROWSER_RESULT',
                            url: extractUrlFromContent(contentText),
                            content: contentText,
                            title: 'Browser Navigation',
                            contentType: 'text'
                        }
                    ];
                }
                // Old format or direct string content
                return [
                    {
                        type: 'browser_result',
                        name: 'BROWSER_RESULT',
                        url: typeof source === 'object' && source.url ? source.url : '',
                        content: typeof source === 'object' ? source.content || source.text || JSON.stringify(source, null, 2) : typeof source === 'string' ? source : JSON.stringify(source, null, 2),
                        contentType: 'text',
                        title: 'Browser Navigation'
                    }
                ];
            case 'file':
                // File results
                if (source && typeof source === 'object') {
                    return [
                        {
                            type: 'text',
                            name: 'FILE_PATH',
                            text: `File: ${source.path || 'Unknown file'}`
                        },
                        {
                            type: 'text',
                            name: 'FILE_CONTENT',
                            text: source.content || 'No content available'
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
            default:
                // Default handling for unknown types
                if (typeof source === 'object') {
                    return [
                        {
                            type: 'json',
                            name: 'JSON_DATA',
                            data: source
                        }
                    ];
                }
                return [
                    {
                        type: 'text',
                        text: typeof source === 'string' ? source : JSON.stringify(source, null, 2)
                    }
                ];
        }
    };
    // 辅助函数：从文本内容中提取URL
    const extractUrlFromContent = (content)=>{
        if (typeof content === 'string' && content.includes('Navigated to ')) {
            const lines = content.split('\n');
            const firstLine = lines[0] || '';
            return firstLine.replace('Navigated to ', '').trim();
        }
        return '';
    };
    // Handle tool result content action
    const handleContentAction = (action, data)=>{
        if (action === 'zoom' && data.src) {
            // Here you could open a modal with the zoomed image
            console.log('Zoom image:', data.src);
        }
    };
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {
        initial: {
            opacity: 0
        },
        animate: {
            opacity: 1
        },
        exit: {
            opacity: 0
        },
        className: "h-full flex flex-col",
        children: [
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex items-center justify-between p-4 border-b border-gray-100/40 dark:border-gray-700/20",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                    className: "flex items-center",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.button, {
                            whileHover: {
                                scale: 1.05,
                                x: -2
                            },
                            whileTap: {
                                scale: 0.95
                            },
                            onClick: handleBackToList,
                            className: "mr-3 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/50 dark:hover:bg-gray-700/30 rounded-lg border border-transparent hover:border-gray-100/40 dark:hover:border-gray-700/30",
                            title: "Back to list",
                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiArrowLeft, {
                                size: 16
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                lineNumber: 367,
                                columnNumber: 13
                            }, undefined)
                        }, void 0, false, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                            lineNumber: 360,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            className: "w-10 h-10 mr-3 rounded-xl flex items-center justify-center relative overflow-hidden",
                            children: [
                                ((_activePanelContent_toolCallId = activePanelContent.toolCallId) === null || _activePanelContent_toolCallId === void 0 ? void 0 : _activePanelContent_toolCallId.startsWith('final-answer')) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "absolute inset-0 bg-gradient-to-br from-accent-400 to-accent-500 opacity-20"
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 373,
                                    columnNumber: 15
                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: `absolute inset-0 opacity-20 ${(activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'search' ? 'bg-gradient-to-br from-blue-400 to-indigo-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser' ? 'bg-gradient-to-br from-purple-400 to-pink-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'command' ? 'bg-gradient-to-br from-green-400 to-emerald-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'file' ? 'bg-gradient-to-br from-yellow-400 to-amber-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'image' ? 'bg-gradient-to-br from-red-400 to-rose-500' : (activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) === 'browser_vision_control' ? 'bg-gradient-to-br from-cyan-400 to-teal-500' : 'bg-gradient-to-br from-gray-400 to-gray-500'}`
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 375,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "relative z-10",
                                    children: ((_activePanelContent_toolCallId1 = activePanelContent.toolCallId) === null || _activePanelContent_toolCallId1 === void 0 ? void 0 : _activePanelContent_toolCallId1.startsWith('final-answer')) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_8__.FiBookOpen, {
                                        className: "text-accent-600 dark:text-accent-400",
                                        size: 20
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                        lineNumber: 395,
                                        columnNumber: 17
                                    }, undefined) : getToolIcon((activePanelContent === null || activePanelContent === void 0 ? void 0 : activePanelContent.type) || 'other')
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 393,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                            lineNumber: 370,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                            children: [
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("h2", {
                                    className: "font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight",
                                    children: activePanelContent.title
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 403,
                                    columnNumber: 13
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "text-xs text-gray-500 dark:text-gray-400",
                                    children: (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_4__.formatTimestamp)(activePanelContent.timestamp)
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                                    lineNumber: 406,
                                    columnNumber: 13
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                            lineNumber: 402,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                    lineNumber: 359,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                lineNumber: 358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex-1 overflow-auto bg-gray-50/50 dark:bg-gray-900/30 p-6",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_renderers_ToolResultRenderer__WEBPACK_IMPORTED_MODULE_5__.ToolResultRenderer, {
                    content: getStandardizedContent(),
                    onAction: handleContentAction
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                    lineNumber: 415,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
                lineNumber: 414,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx",
        lineNumber: 351,
        columnNumber: 5
    }, undefined);
};
_s(WorkspaceDetail, "VNNBR3Un3JO5k7MsApKTLgX8me4=", false, function() {
    return [
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession,
        _hooks_useTool__WEBPACK_IMPORTED_MODULE_3__.useTool
    ];
});
_c = WorkspaceDetail;
var _c;
$RefreshReg$(_c, "WorkspaceDetail");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  BrowserControlRenderer: () => (BrowserControlRenderer)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var _BrowserShell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/components/Workspace/renderers/BrowserShell.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();





/**
 * Specialized renderer for browser_vision_control tool results
 *
 * This renderer displays:
 * 1. The screenshot from the environment input
 * 2. A mouse cursor overlay showing the action point
 * 3. The thought process of the agent
 * 4. The step being performed
 * 5. The specific action taken
 *
 * Design improvements:
 * - Shows screenshot at the top for better visual context
 * - Displays enhanced mouse cursor with artistic animations
 * - Uses browser shell wrapper for consistent styling
 * - Applies smooth transitions for mouse movements
 * - Features visually engaging click animations
 */ const BrowserControlRenderer = (param)=>{
    let { part, onAction } = param;
    _s();
    const { activeSessionId, messages, toolResults, replayState } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    const [relatedImage, setRelatedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const [imageSize, setImageSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const [mousePosition, setMousePosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const [previousMousePosition, setPreviousMousePosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const imageRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    // Extract the visual operation details from the part
    const { thought, step, action, status, toolCallId } = part;
    // Get coordinates directly from tool result instead of parsing action string
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (!activeSessionId || !toolCallId) return;
        // Find the matching tool result for this tool call
        const sessionResults = toolResults[activeSessionId] || [];
        const matchingResult = sessionResults.find((result)=>result.toolCallId === toolCallId);
        if (matchingResult && matchingResult.content && matchingResult.content.result) {
            const { startX, startY } = matchingResult.content.result;
            // Save previous position before updating
            if (mousePosition) {
                setPreviousMousePosition(mousePosition);
            }
            // Set new position if coordinates are valid
            if (typeof startX === 'number' && typeof startY === 'number') {
                setMousePosition({
                    x: startX,
                    y: startY
                });
            }
        }
    }, [
        activeSessionId,
        toolCallId,
        toolResults
    ]);
    // Find the most recent environment input (screenshot) before this operation
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (!activeSessionId) return;
        const sessionMessages = messages[activeSessionId] || [];
        if (!toolCallId) return;
        // 获取当前工具调用在消息中的索引
        const currentToolCallIndex = sessionMessages.findIndex((msg)=>{
            var _msg_toolCalls;
            return (_msg_toolCalls = msg.toolCalls) === null || _msg_toolCalls === void 0 ? void 0 : _msg_toolCalls.some((tc)=>tc.id === toolCallId);
        });
        if (currentToolCallIndex === -1) return;
        // 查找距离当前工具调用最近的环境输入
        let foundImage = false;
        // 向前搜索环境输入，找到最近的截图
        for(let i = currentToolCallIndex; i >= 0; i--){
            const msg = sessionMessages[i];
            if (msg.role === 'environment' && Array.isArray(msg.content)) {
                const imgContent = msg.content.find((c)=>typeof c === 'object' && 'type' in c && c.type === 'image_url');
                if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {
                    setRelatedImage(imgContent.image_url.url);
                    foundImage = true;
                    break;
                }
            }
        }
        // 如果在当前工具调用之前没有找到图片，则搜索所有环境消息作为回退
        if (!foundImage) {
            console.warn(`[BrowserControlRenderer] Could not find preceding screenshot for toolCallId: ${toolCallId}. Falling back to search all environment messages.`);
            const envMessages = sessionMessages.filter((msg)=>msg.role === 'environment' && Array.isArray(msg.content));
            // 从后往前找，找到最新的截图
            for(let i = envMessages.length - 1; i >= 0; i--){
                const msg = envMessages[i];
                const imgContent = msg.content.find((c)=>typeof c === 'object' && 'type' in c && c.type === 'image_url');
                if (imgContent && 'image_url' in imgContent && imgContent.image_url.url) {
                    setRelatedImage(imgContent.image_url.url);
                    break; // 找到最新的就停止
                }
            }
        }
    }, [
        activeSessionId,
        messages,
        toolCallId
    ]);
    // Handler to get image dimensions when loaded
    const handleImageLoad = ()=>{
        if (imageRef.current) {
            setImageSize({
                width: imageRef.current.naturalWidth,
                height: imageRef.current.naturalHeight
            });
        }
    };
    // If no valid data, show a placeholder
    if (!thought && !step && !action) {
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "text-gray-500 italic",
            children: "Browser control details unavailable"
        }, void 0, false, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
            lineNumber: 143,
            columnNumber: 12
        }, undefined);
    }
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        className: "space-y-4",
        children: [
            relatedImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
                initial: {
                    opacity: 0,
                    y: 10
                },
                animate: {
                    opacity: 1,
                    y: 0
                },
                transition: {
                    duration: 0.3
                },
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BrowserShell__WEBPACK_IMPORTED_MODULE_3__.BrowserShell, {
                    className: "mb-4",
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "relative",
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("img", {
                                ref: imageRef,
                                src: relatedImage,
                                alt: "Browser Screenshot",
                                className: "w-full h-auto object-contain",
                                onLoad: handleImageLoad
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 159,
                                columnNumber: 15
                            }, undefined),
                            mousePosition && imageSize && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
                                className: "absolute pointer-events-none",
                                initial: previousMousePosition ? {
                                    left: `${previousMousePosition.x / imageSize.width * 100 * window.devicePixelRatio}%`,
                                    top: `${previousMousePosition.y / imageSize.height * 100 * window.devicePixelRatio}%`
                                } : {
                                    left: `${mousePosition.x / imageSize.width * 100 * window.devicePixelRatio}%`,
                                    top: `${mousePosition.y / imageSize.height * 100 * window.devicePixelRatio}%`
                                },
                                animate: {
                                    left: `${mousePosition.x / imageSize.width * 100 * window.devicePixelRatio}%`,
                                    top: `${mousePosition.y / imageSize.height * 100 * window.devicePixelRatio}%`
                                },
                                transition: {
                                    duration: 0.5,
                                    ease: [
                                        0.16,
                                        1,
                                        0.3,
                                        1
                                    ]
                                },
                                style: {
                                    zIndex: 10
                                },
                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                    className: "relative",
                                    children: [
                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("svg", {
                                            width: "36",
                                            height: "36",
                                            viewBox: "0 0 24 24",
                                            fill: "none",
                                            xmlns: "http://www.w3.org/2000/svg",
                                            style: {
                                                filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))',
                                                transform: 'translate(-12px, -3px)'
                                            },
                                            children: [
                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("defs", {
                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("linearGradient", {
                                                        id: "cursorGradient",
                                                        x1: "0%",
                                                        y1: "0%",
                                                        x2: "100%",
                                                        y2: "100%",
                                                        children: [
                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("stop", {
                                                                offset: "0%",
                                                                stopColor: "white"
                                                            }, void 0, false, {
                                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                                lineNumber: 206,
                                                                columnNumber: 27
                                                            }, undefined),
                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("stop", {
                                                                offset: "100%",
                                                                stopColor: "#f5f5f5"
                                                            }, void 0, false, {
                                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                                lineNumber: 207,
                                                                columnNumber: 27
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                        lineNumber: 205,
                                                        columnNumber: 25
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                    lineNumber: 204,
                                                    columnNumber: 23
                                                }, undefined),
                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("path", {
                                                    d: "M5 3L19 12L12 13L9 20L5 3Z",
                                                    fill: "url(#cursorGradient)",
                                                    stroke: "#000000",
                                                    strokeWidth: "1.5",
                                                    strokeLinejoin: "round"
                                                }, void 0, false, {
                                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                    lineNumber: 210,
                                                    columnNumber: 23
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                            lineNumber: 193,
                                            columnNumber: 21
                                        }, undefined),
                                        action && action.includes('click') && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
                                            children: [
                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
                                                    className: "absolute rounded-full",
                                                    initial: {
                                                        opacity: 0.8,
                                                        scale: 0
                                                    },
                                                    animate: {
                                                        opacity: 0,
                                                        scale: 2.5
                                                    },
                                                    transition: {
                                                        duration: 1.5,
                                                        ease: 'easeOut',
                                                        repeat: Infinity
                                                    },
                                                    style: {
                                                        top: '-8px',
                                                        left: '-8px',
                                                        width: '24px',
                                                        height: '24px',
                                                        background: 'radial-gradient(circle, rgba(99,102,241,0.6) 0%, rgba(99,102,241,0) 70%)',
                                                        border: '1px solid rgba(99,102,241,0.3)'
                                                    }
                                                }, void 0, false, {
                                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                    lineNumber: 223,
                                                    columnNumber: 25
                                                }, undefined),
                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
                                                    className: "absolute rounded-full",
                                                    initial: {
                                                        opacity: 0.9,
                                                        scale: 0
                                                    },
                                                    animate: {
                                                        opacity: 0,
                                                        scale: 2
                                                    },
                                                    transition: {
                                                        duration: 1.2,
                                                        ease: 'easeOut',
                                                        delay: 0.2,
                                                        repeat: Infinity
                                                    },
                                                    style: {
                                                        top: '-6px',
                                                        left: '-6px',
                                                        width: '20px',
                                                        height: '20px',
                                                        background: 'radial-gradient(circle, rgba(99,102,241,0.8) 0%, rgba(99,102,241,0) 70%)',
                                                        border: '1px solid rgba(99,102,241,0.5)'
                                                    }
                                                }, void 0, false, {
                                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                    lineNumber: 242,
                                                    columnNumber: 25
                                                }, undefined),
                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div, {
                                                    className: "absolute rounded-full bg-white",
                                                    initial: {
                                                        opacity: 1,
                                                        scale: 0.5
                                                    },
                                                    animate: {
                                                        opacity: 0.8,
                                                        scale: 1
                                                    },
                                                    transition: {
                                                        duration: 0.7,
                                                        repeat: Infinity,
                                                        repeatType: 'reverse'
                                                    },
                                                    style: {
                                                        top: '2px',
                                                        left: '2px',
                                                        width: '4px',
                                                        height: '4px',
                                                        boxShadow: '0 0 10px 2px rgba(255,255,255,0.7)'
                                                    }
                                                }, void 0, false, {
                                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                    lineNumber: 263,
                                                    columnNumber: 25
                                                }, undefined)
                                            ]
                                        }, void 0, true)
                                    ]
                                }, void 0, true, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                    lineNumber: 191,
                                    columnNumber: 19
                                }, undefined)
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 169,
                                columnNumber: 17
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                        lineNumber: 158,
                        columnNumber: 13
                    }, undefined)
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                    lineNumber: 157,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                lineNumber: 150,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 shadow-sm overflow-hidden",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center",
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_5__.FiMousePointer, {
                                className: "text-gray-600 dark:text-gray-400 mr-2.5",
                                size: 18
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 293,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "font-medium text-gray-700 dark:text-gray-300",
                                children: "GUI Agent Operation"
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 294,
                                columnNumber: 11
                            }, undefined),
                            status && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: `ml-auto text-xs font-medium px-2 py-0.5 rounded-full ${status === 'success' ? 'bg-green-100/80 dark:bg-green-900/20 text-green-700 dark:text-green-400' : 'bg-red-100/80 dark:bg-red-900/20 text-red-700 dark:text-red-400'}`,
                                children: status === 'success' ? 'Success' : 'Failed'
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 296,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                        lineNumber: 292,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "p-4 space-y-3",
                        children: [
                            thought && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "space-y-1",
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "flex items-center text-sm font-medium text-gray-700 dark:text-gray-300",
                                        children: [
                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_5__.FiEye, {
                                                className: "mr-2 text-accent-500/70 dark:text-accent-400/70",
                                                size: 14
                                            }, void 0, false, {
                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                lineNumber: 313,
                                                columnNumber: 17
                                            }, undefined),
                                            "Thought"
                                        ]
                                    }, void 0, true, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 312,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-accent-100 dark:border-accent-900/30",
                                        children: thought
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 316,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 311,
                                columnNumber: 13
                            }, undefined),
                            step && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "space-y-1",
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "flex items-center text-sm font-medium text-gray-700 dark:text-gray-300",
                                        children: [
                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_5__.FiChevronsRight, {
                                                className: "mr-2 text-primary-500/70 dark:text-primary-400/70",
                                                size: 14
                                            }, void 0, false, {
                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                lineNumber: 326,
                                                columnNumber: 17
                                            }, undefined),
                                            "Action"
                                        ]
                                    }, void 0, true, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 325,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "text-sm text-gray-600 dark:text-gray-400 pl-6 border-l-2 border-primary-100 dark:border-primary-900/30",
                                        children: step
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 332,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 324,
                                columnNumber: 13
                            }, undefined),
                            action && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "space-y-1",
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "flex items-center text-sm font-medium text-gray-700 dark:text-gray-300",
                                        children: [
                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_5__.FiType, {
                                                className: "mr-2 text-gray-500/70 dark:text-gray-400/70",
                                                size: 14
                                            }, void 0, false, {
                                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                                lineNumber: 342,
                                                columnNumber: 17
                                            }, undefined),
                                            "Action Command"
                                        ]
                                    }, void 0, true, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 341,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "bg-gray-50 dark:bg-gray-800/90 font-mono text-xs p-2 rounded-md border border-gray-100/50 dark:border-gray-700/30 overflow-x-auto",
                                        children: action
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                        lineNumber: 345,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                                lineNumber: 340,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                        lineNumber: 308,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
                lineNumber: 291,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserControlRenderer.tsx",
        lineNumber: 147,
        columnNumber: 5
    }, undefined);
};
_s(BrowserControlRenderer, "vo6pqqUkbtBHBqYvKP5z4+6iR8w=", false, function() {
    return [
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession
    ];
});
_c = BrowserControlRenderer;
var _c;
$RefreshReg$(_c, "BrowserControlRenderer");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/v2/state/actions/sessionActions.ts": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  abortQueryAction: () => (abortQueryAction),
  checkSessionStatusAction: () => (checkSessionStatusAction),
  createSessionAction: () => (createSessionAction),
  deleteSessionAction: () => (deleteSessionAction),
  loadSessionsAction: () => (loadSessionsAction),
  sendMessageAction: () => (sendMessageAction),
  setActiveSessionAction: () => (setActiveSessionAction),
  updateSessionAction: () => (updateSessionAction)
});
/* ESM import */var jotai__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/jotai@2.12.5_@types+react@18.3.23_react@18.3.1/node_modules/jotai/esm/vanilla.mjs");
/* ESM import */var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js");
/* ESM import */var _services_apiService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/v2/services/apiService.ts");
/* ESM import */var _atoms_session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/v2/state/atoms/session.ts");
/* ESM import */var _atoms_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/state/atoms/message.ts");
/* ESM import */var _atoms_tool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/state/atoms/tool.ts");
/* ESM import */var _atoms_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/v2/state/atoms/ui.ts");
/* ESM import */var _eventProcessor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/v2/state/actions/eventProcessor.ts");
/* ESM import */var _atoms_replay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/v2/state/atoms/replay.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");








 // 假设 connectionStatusAtom 已经存在
 // 添加引入回放状态atom
/**
 * Load all available sessions
 */ const loadSessionsAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set)=>{
    try {
        const loadedSessions = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.getSessions();
        set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, loadedSessions);
    } catch (error) {
        console.error('Failed to load sessions:', error);
        throw error;
    }
});
/**
 * Create a new session
 */ const createSessionAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set)=>{
    try {
        const newSession = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.createSession();
        // Add to sessions list
        set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, (prev)=>[
                newSession,
                ...prev
            ]);
        // Initialize session data
        set(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom, (prev)=>({
                ...prev,
                [newSession.id]: []
            }));
        set(_atoms_tool__WEBPACK_IMPORTED_MODULE_3__.toolResultsAtom, (prev)=>({
                ...prev,
                [newSession.id]: []
            }));
        // Set as active session
        set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom, newSession.id);
        return newSession.id;
    } catch (error) {
        console.error('Failed to create session:', error);
        throw error;
    }
});
/**
 * Set the active session
 * 简化加载逻辑，移除恢复会话的复杂性
 */ const setActiveSessionAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set, sessionId)=>{
    try {
        // 检查是否已经是活动会话
        const currentActiveSessionId = get(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom);
        if (currentActiveSessionId === sessionId) {
            console.log(`Session ${sessionId} is already active, skipping load`);
            return;
        }
        // 检查回放状态并退出回放模式（除非是同一会话）
        const replayState = get(_atoms_replay__WEBPACK_IMPORTED_MODULE_6__.replayStateAtom);
        if (replayState.isActive) {
            console.log('Exiting replay mode due to session change');
            set(_atoms_replay__WEBPACK_IMPORTED_MODULE_6__.replayStateAtom, {
                isActive: false,
                isPaused: true,
                events: [],
                currentEventIndex: -1,
                startTimestamp: null,
                endTimestamp: null,
                playbackSpeed: 1,
                visibleTimeWindow: null,
                processedEvents: {}
            });
        }
        // 直接获取会话详情，不需要检查 active 状态
        const sessionDetails = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.getSessionDetails(sessionId);
        // 获取当前会话状态以更新 isProcessing 状态
        try {
            const status = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.getSessionStatus(sessionId);
            set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, status.isProcessing);
        } catch (error) {
            console.warn('Failed to get session status:', error);
            set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, false);
        }
        // 清理工具调用映射缓存
        _atoms_tool__WEBPACK_IMPORTED_MODULE_3__.toolCallResultMap.clear();
        // 只有在消息不存在时才加载会话事件
        const messages = get(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom);
        if (!messages[sessionId] || messages[sessionId].length === 0) {
            console.log(`Loading events for session ${sessionId}`);
            const events = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.getSessionEvents(sessionId);
            // 对流式事件进行预处理，确保正确的连续性
            const processedEvents = preprocessStreamingEvents(events);
            // 处理每个事件以构建消息和工具结果
            for (const event of processedEvents){
                set(_eventProcessor__WEBPACK_IMPORTED_MODULE_5__.processEventAction, {
                    sessionId,
                    event
                });
            }
        } else {
            console.log(`Session ${sessionId} already has messages, skipping event loading`);
        }
        // 设置为活动会话
        set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom, sessionId);
    } catch (error) {
        console.error('Failed to set active session:', error);
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.connectionStatusAtom, (prev)=>({
                ...prev,
                connected: false,
                lastError: error instanceof Error ? error.message : String(error)
            }));
        throw error;
    }
});
/**
 * Update session metadata
 */ const updateSessionAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set, params)=>{
    const { sessionId, updates } = params;
    try {
        const updatedSession = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.updateSessionMetadata(sessionId, updates);
        // Update session in the list
        set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, (prev)=>prev.map((session)=>session.id === sessionId ? {
                    ...session,
                    ...updatedSession
                } : session));
        return updatedSession;
    } catch (error) {
        console.error('Failed to update session:', error);
        throw error;
    }
});
/**
 * 预处理事件，确保流式事件按正确顺序处理
 */ function preprocessStreamingEvents(events) {
    // 对流式消息进行整理
    const messageStreams = {};
    // 收集所有流式事件，按messageId分组
    events.forEach((event)=>{
        if (event.type === 'final_answer_streaming' && 'messageId' in event) {
            const messageId = event.messageId;
            if (!messageStreams[messageId]) {
                messageStreams[messageId] = [];
            }
            messageStreams[messageId].push(event);
        }
    });
    // 返回预处理后的事件，确保流式事件以正确顺序处理
    return events;
}
/**
 * Delete a session
 */ const deleteSessionAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set, sessionId)=>{
    try {
        const success = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.deleteSession(sessionId);
        const activeSessionId = get(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom);
        if (success) {
            // Remove from sessions list
            set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, (prev)=>prev.filter((session)=>session.id !== sessionId));
            // Clear active session if it was deleted
            if (activeSessionId === sessionId) {
                set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom, null);
            }
            // Clear session data
            set(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom, (prev)=>{
                const newMessages = {
                    ...prev
                };
                delete newMessages[sessionId];
                return newMessages;
            });
            set(_atoms_tool__WEBPACK_IMPORTED_MODULE_3__.toolResultsAtom, (prev)=>{
                const newResults = {
                    ...prev
                };
                delete newResults[sessionId];
                return newResults;
            });
        }
        return success;
    } catch (error) {
        console.error('Failed to delete session:', error);
        throw error;
    }
});
/**
 * Send a message in the current session
 */ const sendMessageAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set, content)=>{
    const activeSessionId = get(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom);
    if (!activeSessionId) {
        throw new Error('No active session');
    }
    // 明确设置处理状态
    set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, true);
    // 添加用户消息到状态
    const userMessage = {
        id: (0,uuid__WEBPACK_IMPORTED_MODULE_8__["default"])(),
        role: 'user',
        content,
        timestamp: Date.now()
    };
    set(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom, (prev)=>{
        const sessionMessages = prev[activeSessionId] || [];
        return {
            ...prev,
            [activeSessionId]: [
                ...sessionMessages,
                userMessage
            ]
        };
    });
    // 立即更新会话名称，使用用户查询作为 Summary
    // 这样即使后续更新失败也至少有一个基本的名称
    try {
        // 检查是否是第一条消息，如果是则直接用查询内容作为会话名称
        const messages = get(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom)[activeSessionId] || [];
        if (messages.length <= 2) {
            // 算上刚刚添加的用户消息
            let summary = '';
            if (typeof content === 'string') {
                summary = content.length > 50 ? content.substring(0, 47) + '...' : content;
            } else {
                // 从多模态内容中提取文本部分
                const textPart = content.find((part)=>part.type === 'text');
                if (textPart && 'text' in textPart) {
                    summary = textPart.text.length > 50 ? textPart.text.substring(0, 47) + '...' : textPart.text;
                } else {
                    summary = 'Image message';
                }
            }
            await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.updateSessionMetadata(activeSessionId, {
                name: summary
            });
            // 更新 sessions atom
            set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, (prev)=>prev.map((session)=>session.id === activeSessionId ? {
                        ...session,
                        name: summary
                    } : session));
        }
    } catch (error) {
        console.log('Failed to update initial summary, continuing anyway:', error);
    // 错误不中断主流程
    }
    try {
        // 使用流式查询
        await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.sendStreamingQuery(activeSessionId, content, (event)=>{
            // 处理每个事件
            set(_eventProcessor__WEBPACK_IMPORTED_MODULE_5__.processEventAction, {
                sessionId: activeSessionId,
                event
            });
            // 确保状态保持为处理中，直到明确收到结束事件
            if (event.type !== 'agent_run_end' && event.type !== 'assistant_message') {
                set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, true);
            }
        });
    } catch (error) {
        console.error('Error sending message:', error);
        // 错误时重置处理状态
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, false);
        throw error;
    }
});
/**
 * Abort the current running query
 */ const abortQueryAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set)=>{
    const activeSessionId = get(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.activeSessionIdAtom);
    if (!activeSessionId) {
        return false;
    }
    try {
        const success = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.abortQuery(activeSessionId);
        if (success) {
            set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, false);
            // Add system message about abort
            const abortMessage = {
                id: (0,uuid__WEBPACK_IMPORTED_MODULE_8__["default"])(),
                role: 'system',
                content: 'The operation was aborted.',
                timestamp: Date.now()
            };
            set(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom, (prev)=>{
                const sessionMessages = prev[activeSessionId] || [];
                return {
                    ...prev,
                    [activeSessionId]: [
                        ...sessionMessages,
                        abortMessage
                    ]
                };
            });
        }
        return success;
    } catch (error) {
        console.error('Error aborting query:', error);
        return false;
    }
});
/**
 * Check the current status of a session
 */ const checkSessionStatusAction = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.atom)(null, async (get, set, sessionId)=>{
    if (!sessionId) return;
    try {
        console.log(`Checking status for session: ${sessionId}`);
        const status = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.getSessionStatus(sessionId);
        console.log(`Status for session ${sessionId}:`, status);
        // 根据服务器响应更新处理状态
        set(_atoms_ui__WEBPACK_IMPORTED_MODULE_4__.isProcessingAtom, status.isProcessing);
        return status;
    } catch (error) {
        console.error('Failed to check session status:', error);
    // 错误时不更新处理状态，避免误报
    }
});
/**
 * Handle the end of a conversation
 * 仍然保留此函数，但减少其重要性，避免更新失败带来的影响
 */ async function handleConversationEnd(get, set, sessionId) {
    // 我们不再依赖这个函数来设置会话名称，但仍然保留它作为备份机制
    const allMessages = get(_atoms_message__WEBPACK_IMPORTED_MODULE_2__.messagesAtom)[sessionId] || [];
    // 只在有足够的消息并且会话没有名称时才尝试生成摘要
    const sessions = get(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom);
    const currentSession = sessions.find((s)=>s.id === sessionId);
    // 如果会话已经有名称，则不需要再生成
    if (currentSession && currentSession.name) {
        return;
    }
    // 只在有实际对话时才尝试生成摘要
    if (allMessages.length > 1) {
        try {
            // 转换消息为 API 期望的格式
            const apiMessages = allMessages.map((msg)=>({
                    role: msg.role,
                    content: typeof msg.content === 'string' ? msg.content : 'multimodal content'
                }));
            // 生成摘要
            const summary = await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.generateSummary(sessionId, apiMessages);
            if (summary) {
                // 更新会话名称
                await _services_apiService__WEBPACK_IMPORTED_MODULE_0__.apiService.updateSessionMetadata(sessionId, {
                    name: summary
                });
                // 更新 sessions atom
                set(_atoms_session__WEBPACK_IMPORTED_MODULE_1__.sessionsAtom, (prev)=>prev.map((session)=>session.id === sessionId ? {
                            ...session,
                            name: summary
                        } : session));
            }
        } catch (error) {
            console.error('Failed to generate or update summary, continuing anyway:', error);
        // 错误不影响主流程
        }
    }
}

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("e7fe85d44f4efa28")
})();

}
);
//# sourceMappingURL=index.13a8c076c261dd46.hot-update.js.map