self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1748713397078
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/v2/components/Layout/index.tsx": (function (module, __webpack_exports__, __webpack_require__) {
"use strict";
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  Layout: () => (Layout)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var _Sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/components/Sidebar/index.tsx");
/* ESM import */var _Chat_ChatPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/components/Chat/ChatPanel.tsx");
/* ESM import */var _Workspace_WorkspacePanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/v2/components/Workspace/WorkspacePanel.tsx");
/* ESM import */var _Workspace_WorkspacePanel__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_Workspace_WorkspacePanel__WEBPACK_IMPORTED_MODULE_4__);
/* ESM import */var _hooks_useLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/v2/hooks/useLayout.ts");
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var _Common_Shell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./src/v2/components/Common/Shell.tsx");
/* ESM import */var _context_ReplayModeContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./src/v2/context/ReplayModeContext.tsx");
/* ESM import */var _Layout_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./src/v2/components/Layout/Layout.css");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();










/**
 * Layout Component - Main application layout
 *
 * Design principles:
 * - Clean, minimalist aesthetic with refined borders and subtle shadows
 * - Neutral color palette with elegant accent colors
 * - Consistent spacing and typography for optimal readability
 * - Seamless visual flow between different interface elements
 * - Adapts layout based on replay mode status
 */ const Layout = (param)=>{
    let { isReplayMode: propIsReplayMode } = param;
    _s();
    const { isSidebarCollapsed, toggleSidebar } = (0,_hooks_useLayout__WEBPACK_IMPORTED_MODULE_5__.useLayout)();
    const { connectionStatus } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_6__.useSession)();
    // Use the context hook to get global replay mode status
    const contextIsReplayMode = (0,_context_ReplayModeContext__WEBPACK_IMPORTED_MODULE_8__.useReplayMode)();
    // Prioritize props for backward compatibility, but fall back to context
    const isReplayMode = propIsReplayMode !== undefined ? propIsReplayMode : contextIsReplayMode;
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        className: "flex h-screen bg-[#F2F3F5] dark:bg-white/5 text-gray-900 dark:text-gray-100 overflow-hidden",
        children: [
            !isReplayMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Sidebar__WEBPACK_IMPORTED_MODULE_2__.Sidebar, {
                isCollapsed: isSidebarCollapsed,
                onToggleCollapse: toggleSidebar
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                lineNumber: 40,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex-1 flex flex-col overflow-hidden p-3 lg:p-4 lg:pl-1",
                children: [
                    isReplayMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "mb-3 p-4 bg-white/90 dark:bg-gray-800/90 rounded-xl border border-[#E5E6EC] dark:border-gray-700/30 flex items-center",
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "w-10 h-10 rounded-2xl bg-gray-900 dark:bg-gray-100 flex items-center justify-center text-white dark:text-gray-900 font-bold mr-3 text-base",
                                children: "A"
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                lineNumber: 47,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("h1", {
                                        className: "font-bold text-gray-900 dark:text-gray-100 text-xl",
                                        children: "Agent TARS"
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                        lineNumber: 51,
                                        columnNumber: 15
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                        className: "text-sm text-gray-500 dark:text-gray-400",
                                        children: "Shared Conversation (Replay Mode)"
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                        lineNumber: 52,
                                        columnNumber: 15
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                lineNumber: 50,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                        lineNumber: 46,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: "flex gap-3 h-full",
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_10__.motion.div, {
                                layout: true,
                                className: isReplayMode ? "w-[40%]" : "w-[40%]",
                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Common_Shell__WEBPACK_IMPORTED_MODULE_7__.Shell, {
                                    className: "h-full rounded-3xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5",
                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Chat_ChatPanel__WEBPACK_IMPORTED_MODULE_3__.ChatPanel, {}, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                        lineNumber: 66,
                                        columnNumber: 15
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                    lineNumber: 65,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                lineNumber: 61,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_10__.motion.div, {
                                layout: true,
                                className: "w-[60%]",
                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Common_Shell__WEBPACK_IMPORTED_MODULE_7__.Shell, {
                                    className: "h-full rounded-3xl bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border border-[#E5E6EC] dark:border-none bg-[#FFFFFFE5] dark:shadow-gray-950/5",
                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Workspace_WorkspacePanel__WEBPACK_IMPORTED_MODULE_4__.WorkspacePanel, {}, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                        lineNumber: 73,
                                        columnNumber: 15
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                    lineNumber: 72,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                                lineNumber: 71,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                        lineNumber: 59,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
                lineNumber: 43,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Layout/index.tsx",
        lineNumber: 37,
        columnNumber: 5
    }, undefined);
};
_s(Layout, "D7Z8luyV4HSA7ts37uYJba6vLT8=", false, function() {
    return [
        _hooks_useLayout__WEBPACK_IMPORTED_MODULE_5__.useLayout,
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_6__.useSession,
        _context_ReplayModeContext__WEBPACK_IMPORTED_MODULE_8__.useReplayMode
    ];
});
_c = Layout;
var _c;
$RefreshReg$(_c, "Layout");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/v2/components/Workspace/WorkspacePanel.tsx": (function (module, __unused_webpack_exports, __webpack_require__) {
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");
const { jsxDEV: _jsxDEV } = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
{}/*#__PURE__*/ _jsxDEV("div", {
    className: "flex-1 overflow-hidden",
    children: isViewingPlan ? /*#__PURE__*/ _jsxDEV(PlanView, {
        onBack: ()=>setActivePanelContent(null)
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
        lineNumber: 4,
        columnNumber: 11
    }, this) : activePanelContent ? /*#__PURE__*/ _jsxDEV(WorkspaceDetail, {}, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
        lineNumber: 6,
        columnNumber: 11
    }, this) : /*#__PURE__*/ _jsxDEV(WorkspaceContent, {}, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
        lineNumber: 8,
        columnNumber: 11
    }, this)
}, void 0, false, {
    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
    lineNumber: 2,
    columnNumber: 7
}, this);
{}/*#__PURE__*/ _jsxDEV(AnimatePresence, {
    children: isReplayActive && /*#__PURE__*/ _jsxDEV(motion.div, {
        initial: {
            opacity: 0,
            y: 20
        },
        animate: {
            opacity: 1,
            y: 0
        },
        exit: {
            opacity: 0,
            y: 20
        },
        transition: {
            duration: 0.3
        },
        className: "p-4 border-t border-gray-100/40 dark:border-gray-700/20 bg-gray-50/50 dark:bg-gray-900/30 sticky bottom-0 left-0 right-0 z-10",
        children: [
            /*#__PURE__*/ _jsxDEV(TimelineSlider, {}, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
                lineNumber: 23,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ _jsxDEV("div", {
                className: "flex justify-center mt-3",
                children: /*#__PURE__*/ _jsxDEV(ReplayControls, {}, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
                    lineNumber: 27,
                    columnNumber: 15
                }, this)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
                lineNumber: 26,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
        lineNumber: 15,
        columnNumber: 11
    }, this)
}, void 0, false, {
    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx",
    lineNumber: 13,
    columnNumber: 7
}, this);

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/v2/hooks/useReplay.ts": (function (module, __webpack_exports__, __webpack_require__) {
"use strict";
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  useReplay: () => (useReplay)
});
/* ESM import */var jotai__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/jotai@2.12.5_@types+react@18.3.23_react@18.3.1/node_modules/jotai/esm/react.mjs");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* ESM import */var _state_atoms_replay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/v2/state/atoms/replay.ts");
/* ESM import */var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/v2/types/index.ts");
/* ESM import */var _useSession__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/v2/hooks/useSession.ts");
/* ESM import */var _state_atoms_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/v2/state/atoms/message.ts");
/* ESM import */var _state_atoms_tool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/v2/state/atoms/tool.ts");
/* ESM import */var _state_actions_eventProcessor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/v2/state/actions/eventProcessor.ts");
/* ESM import */var _state_atoms_plan__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./src/v2/state/atoms/plan.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");










/**
 * Custom hook for managing replay functionality
 *
 * Provides:
 * - Control for playback (play, pause, jump, etc.)
 * - Event processing through the standard event processor
 * - Timeline calculations and positioning
 */ function useReplay() {
    const [replayState, setReplayState] = (0,jotai__WEBPACK_IMPORTED_MODULE_8__.useAtom)(_state_atoms_replay__WEBPACK_IMPORTED_MODULE_1__.replayStateAtom);
    const { activeSessionId } = (0,_useSession__WEBPACK_IMPORTED_MODULE_3__.useSession)();
    const [playbackInterval, setPlaybackInterval] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
    const [, setMessages] = (0,jotai__WEBPACK_IMPORTED_MODULE_8__.useAtom)(_state_atoms_message__WEBPACK_IMPORTED_MODULE_4__.messagesAtom);
    const [, setToolResults] = (0,jotai__WEBPACK_IMPORTED_MODULE_8__.useAtom)(_state_atoms_tool__WEBPACK_IMPORTED_MODULE_5__.toolResultsAtom);
    const [, setPlans] = (0,jotai__WEBPACK_IMPORTED_MODULE_8__.useAtom)(_state_atoms_plan__WEBPACK_IMPORTED_MODULE_7__.plansAtom);
    const processEvent = (0,jotai__WEBPACK_IMPORTED_MODULE_8__.useSetAtom)(_state_actions_eventProcessor__WEBPACK_IMPORTED_MODULE_6__.processEventAction);
    /**
   * Initialize replay with events for the current session
   * Filter out streaming events and only keep key frames
   */ const initReplay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (events)=>{
        var _keyFrameEvents_, _keyFrameEvents_1;
        if (!events || events.length === 0 || !activeSessionId) return;
        // 清空当前会话的所有状态
        setMessages((prev)=>({
                ...prev,
                [activeSessionId]: []
            }));
        setToolResults((prev)=>({
                ...prev,
                [activeSessionId]: []
            }));
        setPlans((prev)=>({
                ...prev,
                [activeSessionId]: {
                    steps: [],
                    isComplete: false,
                    summary: null,
                    hasGeneratedPlan: false,
                    keyframes: []
                }
            }));
        // 过滤出关键帧事件，排除流式消息
        const keyFrameEvents = events.filter((event)=>// 只保留关键事件，排除所有流式消息
            event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.USER_MESSAGE || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.ASSISTANT_MESSAGE || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.TOOL_CALL || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.TOOL_RESULT || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.ENVIRONMENT_INPUT || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.PLAN_START || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.PLAN_UPDATE || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.PLAN_FINISH || event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.FINAL_ANSWER).sort((a, b)=>a.timestamp - b.timestamp);
        setReplayState({
            isActive: true,
            isPaused: true,
            events: keyFrameEvents,
            currentEventIndex: -1,
            startTimestamp: ((_keyFrameEvents_ = keyFrameEvents[0]) === null || _keyFrameEvents_ === void 0 ? void 0 : _keyFrameEvents_.timestamp) || null,
            endTimestamp: ((_keyFrameEvents_1 = keyFrameEvents[keyFrameEvents.length - 1]) === null || _keyFrameEvents_1 === void 0 ? void 0 : _keyFrameEvents_1.timestamp) || null,
            playbackSpeed: 1,
            autoPlayCountdown: 2,
            visibleTimeWindow: keyFrameEvents.length > 0 ? {
                start: keyFrameEvents[0].timestamp,
                end: keyFrameEvents[keyFrameEvents.length - 1].timestamp
            } : null,
            processedEvents: {}
        });
        // 启动倒计时并在结束后自动播放
        const countdownTimer = setInterval(()=>{
            setReplayState((prev)=>{
                // 如果倒计时结束或已被取消
                if (prev.autoPlayCountdown === null || prev.autoPlayCountdown <= 0) {
                    clearInterval(countdownTimer);
                    // 只有当倒计时正常结束（为0）时才自动开始播放
                    if (prev.autoPlayCountdown === 0) {
                        setTimeout(()=>startReplay(), 0);
                        return {
                            ...prev,
                            autoPlayCountdown: null
                        };
                    }
                    return {
                        ...prev,
                        autoPlayCountdown: null
                    };
                }
                // 继续倒计时
                return {
                    ...prev,
                    autoPlayCountdown: prev.autoPlayCountdown - 1
                };
            });
        }, 1000);
    }, [
        activeSessionId,
        setMessages,
        setToolResults,
        setPlans,
        setReplayState
    ]);
    /**
   * 重置会话状态并处理事件至指定索引
   */ const processEventsUpToIndex = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((targetIndex)=>{
        if (!activeSessionId || !replayState.events.length || targetIndex < 0) return;
        // 获取需要处理的事件
        const eventsToProcess = replayState.events.slice(0, targetIndex + 1);
        // 清空当前会话状态
        setMessages((prev)=>({
                ...prev,
                [activeSessionId]: []
            }));
        setToolResults((prev)=>({
                ...prev,
                [activeSessionId]: []
            }));
        setPlans((prev)=>({
                ...prev,
                [activeSessionId]: {
                    steps: [],
                    isComplete: false,
                    summary: null,
                    hasGeneratedPlan: false,
                    keyframes: []
                }
            }));
        // 处理环境输入事件优先，确保图片资源先加载
        const envEvents = eventsToProcess.filter((event)=>event.type === _types__WEBPACK_IMPORTED_MODULE_2__.EventType.ENVIRONMENT_INPUT);
        const nonEnvEvents = eventsToProcess.filter((event)=>event.type !== _types__WEBPACK_IMPORTED_MODULE_2__.EventType.ENVIRONMENT_INPUT);
        // 先处理环境输入事件
        for (const event of envEvents){
            processEvent({
                sessionId: activeSessionId,
                event
            });
        }
        // 然后处理其他事件
        for (const event of nonEnvEvents){
            processEvent({
                sessionId: activeSessionId,
                event
            });
        }
    }, [
        activeSessionId,
        replayState.events,
        setMessages,
        setToolResults,
        setPlans,
        processEvent
    ]);
    /**
   * 开始回放
   */ const startReplay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        // 清除现有的定时器
        if (playbackInterval) {
            clearInterval(playbackInterval);
        }
        setReplayState((prev)=>({
                ...prev,
                isPaused: false
            }));
        // 设置定时器按间隔前进
        const interval = setInterval(()=>{
            setReplayState((prev)=>{
                // 到达末尾时停止
                if (prev.currentEventIndex >= prev.events.length - 1) {
                    clearInterval(interval);
                    return {
                        ...prev,
                        isPaused: true,
                        currentEventIndex: prev.events.length - 1
                    };
                }
                // 前进到下一个事件
                const nextIndex = prev.currentEventIndex + 1;
                // 处理到新位置
                if (activeSessionId) {
                    processEvent({
                        sessionId: activeSessionId,
                        event: prev.events[nextIndex]
                    });
                }
                return {
                    ...prev,
                    currentEventIndex: nextIndex
                };
            });
        }, 200 / replayState.playbackSpeed); // 由于只显示关键帧，增加了帧间隔时间
        setPlaybackInterval(interval);
    }, [
        activeSessionId,
        playbackInterval,
        processEvent,
        replayState.playbackSpeed,
        setReplayState
    ]);
    /**
   * 暂停回放
   */ const pauseReplay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (playbackInterval) {
            clearInterval(playbackInterval);
            setPlaybackInterval(null);
        }
        setReplayState((prev)=>({
                ...prev,
                isPaused: true
            }));
    }, [
        playbackInterval,
        setReplayState
    ]);
    /**
   * 跳转到时间轴上的指定位置
   */ const jumpToPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((position)=>{
        // 确保位置在有效范围内
        const normalizedPosition = Math.max(0, Math.min(1, position));
        if (replayState.events.length === 0 || !activeSessionId) return;
        // 根据位置计算目标事件索引
        const targetIndex = Math.floor(normalizedPosition * (replayState.events.length - 1));
        // 暂停任何正在进行的回放
        if (playbackInterval) {
            clearInterval(playbackInterval);
            setPlaybackInterval(null);
        }
        // 处理到新位置
        processEventsUpToIndex(targetIndex);
        setReplayState((prev)=>({
                ...prev,
                isPaused: true,
                currentEventIndex: targetIndex
            }));
    }, [
        activeSessionId,
        playbackInterval,
        processEventsUpToIndex,
        replayState.events.length,
        setReplayState
    ]);
    /**
   * 跳转到最终结果
   */ const jumpToResult = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (replayState.events.length === 0 || !activeSessionId) return;
        const finalIndex = replayState.events.length - 1;
        // 暂停任何正在进行的回放
        if (playbackInterval) {
            clearInterval(playbackInterval);
            setPlaybackInterval(null);
        }
        // 处理到最终位置
        processEventsUpToIndex(finalIndex);
        setReplayState((prev)=>({
                ...prev,
                isPaused: true,
                currentEventIndex: finalIndex
            }));
    }, [
        activeSessionId,
        playbackInterval,
        processEventsUpToIndex,
        replayState.events.length,
        setReplayState
    ]);
    /**
   * 设置播放速度
   */ const setPlaybackSpeed = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((speed)=>{
        setReplayState((prev)=>({
                ...prev,
                playbackSpeed: speed
            }));
        // 如果正在播放，以新速度重启
        if (!replayState.isPaused && playbackInterval) {
            clearInterval(playbackInterval);
            startReplay();
        }
    }, [
        playbackInterval,
        replayState.isPaused,
        setReplayState,
        startReplay
    ]);
    /**
   * 退出回放模式
   */ const exitReplay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (playbackInterval) {
            clearInterval(playbackInterval);
        }
        setReplayState((prev)=>({
                ...prev,
                isActive: false,
                isPaused: true,
                currentEventIndex: -1,
                events: [],
                processedEvents: {}
            }));
    }, [
        playbackInterval,
        setReplayState
    ]);
    /**
   * 获取当前事件
   */ const getCurrentEvent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (!replayState.isActive || replayState.currentEventIndex < 0 || replayState.currentEventIndex >= replayState.events.length) {
            return null;
        }
        return replayState.events[replayState.currentEventIndex];
    }, [
        replayState.currentEventIndex,
        replayState.events,
        replayState.isActive
    ]);
    /**
   * 获取当前位置百分比 (0-100)
   */ const getCurrentPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (!replayState.isActive || replayState.events.length <= 1) {
            return 0;
        }
        return replayState.currentEventIndex / (replayState.events.length - 1) * 100;
    }, [
        replayState.currentEventIndex,
        replayState.events.length,
        replayState.isActive
    ]);
    /**
   * 获取当前所有事件
   */ const getCurrentEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        if (!replayState.isActive || replayState.currentEventIndex < 0) {
            return [];
        }
        return replayState.events.slice(0, replayState.currentEventIndex + 1);
    }, [
        replayState.currentEventIndex,
        replayState.events,
        replayState.isActive
    ]);
    // 组件卸载时清理定时器
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        return ()=>{
            if (playbackInterval) {
                clearInterval(playbackInterval);
            }
        };
    }, [
        playbackInterval
    ]);
    // 回放模式初始化时：如果索引为-1，需要手动触发第一步，否则会显示为空白
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (replayState.isActive && replayState.currentEventIndex === -1 && replayState.events.length > 0) {
            // 如果启动回放后立即跳到第一个事件
            processEventsUpToIndex(0);
            setReplayState((prev)=>({
                    ...prev,
                    currentEventIndex: 0
                }));
        }
    }, [
        replayState.isActive,
        replayState.currentEventIndex,
        replayState.events.length,
        processEventsUpToIndex,
        setReplayState
    ]);
    /**
   * 取消自动播放倒计时
   */ const cancelAutoPlay = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{
        setReplayState((prev)=>({
                ...prev,
                autoPlayCountdown: null
            }));
    }, [
        setReplayState
    ]);
    // 添加对自动播放事件的监听
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        const handleAutoStart = ()=>{
            console.log('Auto-play event received, starting replay...');
            startReplay();
        };
        // 添加事件监听器
        window.addEventListener('replay-autostart', handleAutoStart);
        // 清理函数
        return ()=>{
            window.removeEventListener('replay-autostart', handleAutoStart);
        };
    }, [
        startReplay
    ]); // 依赖于startReplay函数
    return {
        // 状态
        replayState,
        // 操作方法
        initReplay,
        startReplay,
        pauseReplay,
        jumpToPosition,
        jumpToResult,
        setPlaybackSpeed,
        exitReplay,
        cancelAutoPlay,
        // 工具方法
        getCurrentEvents,
        getCurrentPosition,
        getCurrentEvent
    };
}

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("b766900b11388c52")
})();

}
);
//# sourceMappingURL=index.f1f705ece571fc1a.hot-update.js.map