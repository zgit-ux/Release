"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749662421996
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/main/hooks/useReplayMode.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  ReplayModeProvider: () => (ReplayModeProvider),
  useReplayMode: () => (useReplayMode),
  useReplayModelInfo: () => (useReplayModelInfo)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var jotai__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/jotai@2.12.5_@types+react@18.3.23_react@18.3.1/node_modules/jotai/esm/react.mjs");
/* ESM import */var _state_atoms_replay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/main/state/atoms/replay.ts");
/* ESM import */var _state_atoms_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/main/state/atoms/session.ts");
/* ESM import */var _state_atoms_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/main/state/atoms/message.ts");
/* ESM import */var _state_atoms_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/main/state/atoms/ui.ts");
/* ESM import */var _state_actions_modelInfoAction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/main/state/actions/modelInfoAction.ts");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();







const ReplayModeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({
    isReplayMode: false,
    modelInfo: null
});
/**
 * ReplayModeProvider - Provides replay mode state to the application and initializes replay data
 *
 * 1. Detects replay mode from window variables
 * 2. Initializes application state with replay data when in replay mode
 * 3. Prevents server communication in replay mode
 * 4. Provides the replay mode status to all child components
 */ const ReplayModeProvider = (param)=>{
    let { children } = param;
    _s();
    // Access necessary atoms
    const [replayState, setReplayState] = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom)(_state_atoms_replay__WEBPACK_IMPORTED_MODULE_2__.replayStateAtom);
    const [, setMessages] = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom)(_state_atoms_message__WEBPACK_IMPORTED_MODULE_4__.messagesAtom);
    const [, setSessions] = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom)(_state_atoms_session__WEBPACK_IMPORTED_MODULE_3__.sessionsAtom);
    const [, setActiveSessionId] = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom)(_state_atoms_session__WEBPACK_IMPORTED_MODULE_3__.activeSessionIdAtom);
    const [, setConnectionStatus] = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom)(_state_atoms_ui__WEBPACK_IMPORTED_MODULE_5__.connectionStatusAtom);
    const modelInfo = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useAtomValue)(_state_atoms_ui__WEBPACK_IMPORTED_MODULE_5__.modelInfoAtom);
    const setModelInfo = (0,jotai__WEBPACK_IMPORTED_MODULE_7__.useSetAtom)(_state_actions_modelInfoAction__WEBPACK_IMPORTED_MODULE_6__.setModelInfoAction);
    // Initialize replay mode if window variables are present
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        // Check if in replay mode
        if (window.AGENT_TARS_REPLAY_MODE && window.AGENT_TARS_EVENT_STREAM) {
            // Get session data and event stream
            const sessionData = window.AGENT_TARS_SESSION_DATA;
            const events = window.AGENT_TARS_EVENT_STREAM;
            const modelData = window.AGENT_TARS_MODEL_INFO;
            console.log('[ReplayMode] Initializing replay mode with', events.length, 'events');
            if (sessionData && sessionData.id) {
                // Set connection status to "offline" to prevent health checks
                setConnectionStatus({
                    connected: false,
                    lastConnected: null,
                    lastError: null,
                    reconnecting: false
                });
                // Set model info if available using the action
                if (modelData) {
                    setModelInfo(modelData);
                    console.log('[ReplayMode] Model info loaded:', modelData);
                }
                // Set sessions data
                setSessions([
                    sessionData
                ]);
                // When in replay mode, the session ID must be set immediately
                setActiveSessionId(sessionData.id);
                // Add debug logging
                console.log('[ReplayMode] Active session set to:', sessionData.id);
                // Initialize replay state with autoPlayCountdown
                setReplayState({
                    isActive: true,
                    isPaused: true,
                    events: events,
                    currentEventIndex: -1,
                    startTimestamp: events.length > 0 ? events[0].timestamp : null,
                    endTimestamp: events.length > 0 ? events[events.length - 1].timestamp : null,
                    playbackSpeed: 1,
                    autoPlayCountdown: 2,
                    visibleTimeWindow: events.length > 0 ? {
                        start: events[0].timestamp,
                        end: events[events.length - 1].timestamp
                    } : null,
                    processedEvents: {}
                });
                // Initialize empty messages state
                setMessages({
                    [sessionData.id]: []
                });
                console.log('[ReplayMode] Replay mode initialized successfully');
                // 启动倒计时
                const countdownTimer = setInterval(()=>{
                    setReplayState((prev)=>{
                        // 如果倒计时结束或已被取消
                        if (prev.autoPlayCountdown === null || prev.autoPlayCountdown <= 0) {
                            clearInterval(countdownTimer);
                            // 只在倒计时完成时准备开始播放，但不直接改变isPaused状态
                            // 这样将由useReplay中的startReplay函数正确启动播放过程
                            if (prev.autoPlayCountdown === 0) {
                                // 设置一个延迟启动标记，在下一个useEffect中捕获并启动播放
                                setTimeout(()=>{
                                    console.log('[ReplayMode] Auto-play countdown finished, starting replay...');
                                    // 触发一个事件通知播放开始
                                    window.dispatchEvent(new CustomEvent('replay-autostart'));
                                }, 0);
                            }
                            return {
                                ...prev,
                                autoPlayCountdown: null
                            };
                        }
                        // 继续倒计时
                        return {
                            ...prev,
                            autoPlayCountdown: prev.autoPlayCountdown - 1
                        };
                    });
                }, 1000);
            } else {
                console.error('[ReplayMode] Missing session data or session ID');
            }
        }
    }, [
        setMessages,
        setSessions,
        setActiveSessionId,
        setReplayState,
        setConnectionStatus,
        setModelInfo
    ]);
    // Check both the atom and global window variable for replay mode
    const isReplayMode = replayState.isActive || !!window.AGENT_TARS_REPLAY_MODE;
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ReplayModeContext.Provider, {
        value: {
            isReplayMode,
            modelInfo: isReplayMode ? modelInfo : null
        },
        children: children
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/hooks/useReplayMode.tsx",
        lineNumber: 154,
        columnNumber: 5
    }, undefined);
};
_s(ReplayModeProvider, "vDBIVwcSJPjLb1Gm5aAZeHv1ReI=", false, function() {
    return [
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtom,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useAtomValue,
        jotai__WEBPACK_IMPORTED_MODULE_7__.useSetAtom
    ];
});
_c = ReplayModeProvider;
/**
 * useReplayMode - Hook to access replay mode state
 */ const useReplayMode = ()=>{
    _s1();
    const { isReplayMode } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ReplayModeContext);
    return isReplayMode;
};
_s1(useReplayMode, "aCxgkkyzxeI/iK3PhvujhBgtmdU=");
/**
 * useReplayModelInfo - Hook to access model info in replay mode
 */ const useReplayModelInfo = ()=>{
    _s2();
    const { modelInfo } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ReplayModeContext);
    return modelInfo;
};
_s2(useReplayModelInfo, "OEZziHsVOGEYTISw4STDONUUJAE=");
var _c;
$RefreshReg$(_c, "ReplayModeProvider");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),
"./src/standalone/sidebar/ToolBar.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  ToolBar: () => (ToolBar)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../node_modules/.pnpm/react-router@7.6.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-DQRVZFIR.mjs");
/* ESM import */var _main_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/main/hooks/useSession.ts");
/* ESM import */var _main_hooks_useReplayMode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/main/hooks/useReplayMode.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();






/**
 * ToolBar Component - Vertical toolbar inspired by modern IDE designs
 *
 * Design principles:
 * - Minimalist vertical bar with icon-only actions
 * - Consistent visual language with subtle animations
 * - Quick access to essential functionality
 * - Always visible regardless of sidebar collapse state
 */ const ToolBar = ()=>{
    _s();
    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useNavigate)();
    const isReplayMode = (0,_main_hooks_useReplayMode__WEBPACK_IMPORTED_MODULE_3__.useReplayMode)();
    const { createSession, connectionStatus } = (0,_main_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    // Create new session
    const handleNewSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{
        try {
            const sessionId = await createSession();
            navigate(`/${sessionId}`);
        } catch (error) {
            console.error('Failed to create new session:', error);
        }
    }, [
        createSession,
        navigate
    ]);
    // Navigate to home
    const handleNavigateHome = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{
        navigate('/');
    }, [
        navigate
    ]);
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
        className: "w-14 h-full flex flex-col backdrop-blur-sm border-r border-gray-300/40 dark:border-gray-600/20",
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
            className: "flex-1 flex flex-col items-center gap-4 py-4",
            children: [
                !isReplayMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_5__.motion.button, {
                    whileHover: {
                        scale: 1.08,
                        backgroundColor: connectionStatus.connected ? '#000000' : undefined,
                        boxShadow: connectionStatus.connected ? '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)' : undefined
                    },
                    whileTap: {
                        scale: 0.97
                    },
                    transition: {
                        type: 'spring',
                        stiffness: 400,
                        damping: 17
                    },
                    onClick: handleNewSession,
                    disabled: !connectionStatus.connected,
                    className: `w-8 h-8 rounded-lg flex items-center justify-center transition-all duration-200 ${connectionStatus.connected ? 'bg-gradient-to-r from-[#141414] to-[#1e1e1e] dark:from-gray-900 dark:to-gray-800 text-white hover:shadow-md' : 'bg-gray-400 text-white cursor-not-allowed opacity-60'}`,
                    title: connectionStatus.connected ? 'New Task' : 'Server disconnected',
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_6__.FiPlus, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
                        lineNumber: 63,
                        columnNumber: 13
                    }, undefined)
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
                    lineNumber: 44,
                    columnNumber: 11
                }, undefined),
                !isReplayMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_5__.motion.button, {
                    whileHover: {
                        scale: 1.08,
                        backgroundColor: 'rgba(0, 0, 0, 0.06)',
                        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03)'
                    },
                    whileTap: {
                        scale: 0.97
                    },
                    transition: {
                        type: 'spring',
                        stiffness: 400,
                        damping: 17
                    },
                    onClick: handleNavigateHome,
                    className: "w-8 h-8 rounded-lg flex items-center justify-center text-gray-700 dark:text-gray-300 hover:bg-gray-100/80 dark:hover:bg-gray-700/80 transition-all duration-200",
                    title: "Home",
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_6__.FiHome, {
                        size: 16
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
                        lineNumber: 81,
                        columnNumber: 13
                    }, undefined)
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
                    lineNumber: 69,
                    columnNumber: 11
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
            lineNumber: 41,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/sidebar/ToolBar.tsx",
        lineNumber: 39,
        columnNumber: 5
    }, undefined);
};
_s(ToolBar, "Hdi/NM9JvBe10Ej9kYzsjL5Qbw4=", false, function() {
    return [
        react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useNavigate,
        _main_hooks_useReplayMode__WEBPACK_IMPORTED_MODULE_3__.useReplayMode,
        _main_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession
    ];
});
_c = ToolBar;
var _c;
$RefreshReg$(_c, "ToolBar");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("2e438ef49abac5a1")
})();

}
);
//# sourceMappingURL=index.bd79c82cafbbcec7.hot-update.js.map