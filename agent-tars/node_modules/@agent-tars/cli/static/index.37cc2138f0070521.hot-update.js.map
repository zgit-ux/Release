{"version":3,"file":"index.37cc2138f0070521.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Markdown/CodeBlock.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749653118070\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState, useRef } from 'react';\n\ninterface CodeBlockProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ className, children }) => {\n  const match = /language-(\\w+)/.exec(className || '');\n  const [isWordWrap, setIsWordWrap] = useState(true);\n  const [isCopied, setIsCopied] = useState(false);\n  const codeRef = useRef<HTMLElement>(null);\n\n  // If no language is specified, return inline code style\n  if (!match) {\n    return (\n      <code className=\"font-mono text-xs bg-purple-50 text-purple-700 px-1.5 py-0.5 rounded border border-purple-100 mx-0.5 leading-tight transition-colors\">\n        {children}\n      </code>\n    );\n  }\n\n  const handleCopy = () => {\n    if (codeRef.current) {\n      // Extract text content from code element instead of React nodes\n      const code = codeRef.current.textContent || '';\n      navigator.clipboard.writeText(code).then(() => {\n        setIsCopied(true);\n        setTimeout(() => setIsCopied(false), 2000);\n      });\n    }\n  };\n\n  const toggleWordWrap = () => {\n    setIsWordWrap(!isWordWrap);\n  };\n\n  return (\n    <div className=\"relative my-6 group\">\n      {/* Code block header with actions */}\n      <div className=\"flex items-center justify-between bg-purple-50 rounded-t-lg border-t border-l border-r border-purple-200 px-4 py-2\">\n        {/* Language badge */}\n        <div className=\"text-xs bg-purple-100 text-purple-700 px-2 py-0.5 rounded-md font-mono\">\n          {match[1] || 'code'}\n        </div>\n\n        {/* Action buttons - hidden until hover */}\n        <div className=\"flex items-center gap-2 opacity-80 group-hover:opacity-100 transition-opacity\">\n          {/* Word wrap toggle button */}\n          <button\n            onClick={toggleWordWrap}\n            className=\"hover:bg-purple-100 transition-colors rounded-md px-2 py-1 text-xs text-gray-600 hover:text-purple-700\"\n            title={isWordWrap ? 'Disable word wrap' : 'Enable word wrap'}\n          >\n            {isWordWrap ? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M1 3.5A1.5 1.5 0 0 1 2.5 2h12A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-12A1.5 1.5 0 0 1 1 12.5v-9zM2.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h12a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-12z\" />\n                <path d=\"M13 5.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H12v6.5a.5.5 0 0 1-1 0V5.5z\" />\n              </svg>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M1 3.5A1.5 1.5 0 0 1 2.5 2h12A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-12A1.5 1.5 0 0 1 1 12.5v-9zM2.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h12a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-12z\" />\n                <path d=\"M11 5.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H12v3.5a.5.5 0 0 1-1 0V5.5z\" />\n              </svg>\n            )}\n          </button>\n\n          {/* Copy button */}\n          <button\n            onClick={handleCopy}\n            className=\"hover:bg-purple-100 transition-colors rounded-md px-2 py-1 text-xs text-gray-600 hover:text-purple-700 flex items-center gap-1\"\n            title=\"Copy code\"\n          >\n            {isCopied ? (\n              <>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"14\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\" />\n                </svg>\n                <span>Copied!</span>\n              </>\n            ) : (\n              <>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"14\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\n                  <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\n                </svg>\n                <span>Copy</span>\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      <pre\n        className={`bg-gray-50 backdrop-blur-sm border-b border-l border-r border-purple-200 rounded-b-lg p-4 font-mono text-sm ${\n          isWordWrap ? 'whitespace-pre-wrap break-words' : 'overflow-x-auto'\n        }`}\n      >\n        <code ref={codeRef} className={className}>\n          {children}\n        </code>\n      </pre>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvBA;AAOA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;;AAEA;AAAA;AACA;;;;;;AAIA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAEA;AAAA;;;;;;;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAKA;AAzHA;AAAA"}