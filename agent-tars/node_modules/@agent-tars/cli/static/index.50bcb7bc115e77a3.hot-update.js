"use strict";
self["webpackHotUpdate_agent_tars_web_ui"]("index", {
"./src/entry.css": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
// extracted by css-extract-rspack-plugin

    if(true) {
      (function() {
        var localsJsonString = undefined;
        // 1749661787738
        var cssReload = (__webpack_require__("../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js")/* .cssReload */.cssReload)(module.id, {});
        // only invalidate when locals change
        if (
          module.hot.data &&
          module.hot.data.value &&
          module.hot.data.value !== localsJsonString
        ) {
          module.hot.invalidate();
        } else {
          module.hot.accept();
        }
        module.hot.dispose(function(data) {
          data.value = localsJsonString;
          cssReload();
        });
      })();
    }
  

}),
"./src/main/components/Chat/MessageInput.tsx": (function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  MessageInput: () => (MessageInput)
});
/* ESM import */var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-dev-runtime.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");
/* ESM import */var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* ESM import */var _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/main/hooks/useSession.ts");
/* ESM import */var _hooks_usePlan__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/main/hooks/usePlan.ts");
/* ESM import */var react_icons_fi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../node_modules/.pnpm/react-icons@4.12.0_react@18.3.1/node_modules/react-icons/fi/index.esm.js");
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs");
/* ESM import */var framer_motion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("../node_modules/.pnpm/framer-motion@10.18.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs");
/* ESM import */var react_router_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../node_modules/.pnpm/react-router@7.6.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-DQRVZFIR.mjs");
/* ESM import */var _MessageInput_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/main/components/Chat/MessageInput.css");
/* ESM import */var _main_hooks_usePro__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/main/hooks/usePro.ts");
/* ESM import */var _ImagePreview__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/main/components/Chat/ImagePreview.tsx");
/* provided dependency */ var $ReactRefreshRuntime$ = __webpack_require__("../node_modules/.pnpm/@rspack+plugin-react-refresh@1.0.3_react-refresh@0.16.0/node_modules/@rspack/plugin-react-refresh/client/reactRefresh.js");

var _s = $RefreshSig$();









/**
 * MessageInput Component - Input for sending messages
 */ const MessageInput = (param)=>{
    let { isDisabled = false, onReconnect, connectionStatus } = param;
    _s();
    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    const [isAborting, setIsAborting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [isFocused, setIsFocused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [uploadedImages, setUploadedImages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_7__.useLocation)();
    const { sendMessage, isProcessing, abortQuery, activeSessionId, checkSessionStatus, setActivePanelContent } = (0,_hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession)();
    const isProMode = (0,_main_hooks_usePro__WEBPACK_IMPORTED_MODULE_5__.usePro)();
    const { currentPlan } = (0,_hooks_usePlan__WEBPACK_IMPORTED_MODULE_3__.usePlan)(activeSessionId);
    // Process query from URL parameters on component mount
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        const searchParams = new URLSearchParams(location.search);
        const query = searchParams.get('q');
        if (query && !isProcessing && activeSessionId) {
            setInput(query);
            // Submit the query automatically
            const submitQuery = async ()=>{
                try {
                    await sendMessage(query);
                    // Clear input after sending
                    setInput('');
                } catch (error) {
                    console.error('Failed to send message:', error);
                }
            };
            submitQuery();
        }
    }, [
        location.search,
        activeSessionId,
        isProcessing,
        sendMessage
    ]);
    // Ensure processing state is handled correctly
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (activeSessionId && (connectionStatus === null || connectionStatus === void 0 ? void 0 : connectionStatus.connected)) {
            // Initial check of session status
            checkSessionStatus(activeSessionId);
            // If session status changes, increase polling
            const intervalId = setInterval(()=>{
                checkSessionStatus(activeSessionId);
            }, 2000); // Check status every 2 seconds
            return ()=>clearInterval(intervalId);
        }
    }, [
        activeSessionId,
        connectionStatus === null || connectionStatus === void 0 ? void 0 : connectionStatus.connected,
        checkSessionStatus
    ]);
    const handleSubmit = async (e)=>{
        e.preventDefault();
        if (!input.trim() && uploadedImages.length === 0 || isDisabled) return;
        // Immediately clear input field, don't wait for message to be sent
        const messageToSend = input.trim();
        setInput('');
        // Build multimodal content if there are images
        const messageContent = uploadedImages.length > 0 ? [
            ...uploadedImages,
            ...messageToSend ? [
                {
                    type: 'text',
                    text: messageToSend
                }
            ] : []
        ] : messageToSend;
        // Clear uploaded images
        setUploadedImages([]);
        // Reset textarea height immediately
        if (inputRef.current) {
            inputRef.current.style.height = 'auto';
        }
        try {
            // Use previously saved message content to send
            await sendMessage(messageContent);
        } catch (error) {
            console.error('Failed to send message:', error);
        }
    };
    // Modified to not trigger send on Enter
    const handleKeyDown = (e)=>{
        // Ctrl+Enter as optional shortcut to send
        if (e.key === 'Enter' && e.ctrlKey) {
            e.preventDefault();
            handleSubmit(e);
        }
    };
    const handleAbort = async ()=>{
        if (!isProcessing) return;
        setIsAborting(true);
        try {
            await abortQuery();
        } catch (error) {
            console.error('Failed to abort:', error);
        } finally{
            setIsAborting(false);
        }
    };
    // Adjust textarea height based on content
    const handleInput = (e)=>{
        const target = e.target;
        setInput(target.value);
        // Reset height to recalculate proper scrollHeight
        target.style.height = 'auto';
        // Set to scrollHeight but max 200px
        target.style.height = `${Math.min(target.scrollHeight, 200)}px`;
    };
    // Auto-focus input when available
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{
        if (!isDisabled && inputRef.current) {
            inputRef.current.focus();
        }
    }, [
        isDisabled
    ]);
    // Dummy handler for file upload button
    const handleFileUpload = ()=>{
        if (fileInputRef.current) {
            fileInputRef.current.click();
        }
    };
    // Handle file selection
    const handleFileChange = (e)=>{
        const files = e.target.files;
        if (!files || files.length === 0) return;
        Array.from(files).forEach((file)=>{
            if (!file.type.startsWith('image/')) return;
            const reader = new FileReader();
            reader.onload = (event)=>{
                var _event_target;
                if ((_event_target = event.target) === null || _event_target === void 0 ? void 0 : _event_target.result) {
                    const newImage = {
                        type: 'image_url',
                        image_url: {
                            url: event.target.result,
                            detail: 'auto'
                        }
                    };
                    setUploadedImages((prev)=>[
                            ...prev,
                            newImage
                        ]);
                }
            };
            reader.readAsDataURL(file);
        });
        // Reset the input so the same file can be selected again
        if (fileInputRef.current) {
            fileInputRef.current.value = '';
        }
    };
    // Handle paste event to support pasting images directly
    const handlePaste = (e)=>{
        var _e_clipboardData;
        // Skip if disabled or processing
        if (isDisabled || isProcessing) return;
        const items = (_e_clipboardData = e.clipboardData) === null || _e_clipboardData === void 0 ? void 0 : _e_clipboardData.items;
        if (!items) return;
        let hasProcessedImage = false;
        // Process each item in the clipboard
        for(let i = 0; i < items.length; i++){
            const item = items[i];
            // Check if item is an image
            if (item.type.indexOf('image') !== -1) {
                hasProcessedImage = true;
                // Get image as blob
                const blob = item.getAsFile();
                if (!blob) continue;
                // Read the image file
                const reader = new FileReader();
                reader.onload = (event)=>{
                    var _event_target;
                    if ((_event_target = event.target) === null || _event_target === void 0 ? void 0 : _event_target.result) {
                        const newImage = {
                            type: 'image_url',
                            image_url: {
                                url: event.target.result,
                                detail: 'auto'
                            }
                        };
                        setUploadedImages((prev)=>[
                                ...prev,
                                newImage
                            ]);
                    }
                };
                reader.readAsDataURL(blob);
            }
        }
        // If we processed at least one image, prevent the default paste behavior
        if (hasProcessedImage) {
            // We don't prevent default completely so text can still be pasted
            // But we still log for debugging purposes
            console.log('Processed pasted image(s)');
        }
    };
    // Remove an image from the uploaded images list
    const handleRemoveImage = (index)=>{
        setUploadedImages((prev)=>prev.filter((_, i)=>i !== index));
    };
    // 添加一个查看计划按钮
    const renderPlanButton = ()=>{
        // 只在实际有计划且计划已经生成时显示按钮
        if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0) return null;
        const completedSteps = currentPlan.steps.filter((step)=>step.done).length;
        const totalSteps = currentPlan.steps.length;
        const isComplete = currentPlan.isComplete;
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.button, {
            initial: {
                opacity: 0,
                scale: 0.8
            },
            animate: {
                opacity: 1,
                scale: 1
            },
            exit: {
                opacity: 0,
                scale: 0.8
            },
            whileTap: {
                scale: 0.9
            },
            whileHover: {
                scale: 1.05,
                y: -2
            },
            onClick: ()=>setActivePanelContent({
                    type: 'plan',
                    source: null,
                    title: 'Task Plan',
                    timestamp: Date.now()
                }),
            className: "flex items-center gap-1 px-3 py-1 text-xs font-medium rounded-full bg-white/80 dark:bg-gray-800 text-gray-600 dark:text-gray-300 border border-gray-200/50 dark:border-gray-700/30 hover:bg-white hover:border-gray-300/50 dark:hover:bg-gray-700/50 dark:hover:border-gray-600/50 transition-all duration-200 shadow-sm",
            children: [
                isComplete ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiCpu, {
                    size: 12,
                    className: "mr-0.5 text-green-500 dark:text-green-400"
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 281,
                    columnNumber: 11
                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiCpu, {
                    size: 12,
                    className: "mr-0.5 text-accent-500 dark:text-accent-400 animate-pulse"
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 283,
                    columnNumber: 11
                }, undefined),
                "View Plan",
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                    className: `ml-1 px-1.5 py-0.5 rounded-full ${isComplete ? 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300'} text-[10px]`,
                    children: [
                        completedSteps,
                        "/",
                        totalSteps
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 286,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
            lineNumber: 264,
            columnNumber: 7
        }, undefined);
    };
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("form", {
        onSubmit: handleSubmit,
        className: "relative",
        children: [
            isProMode && currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex justify-center mb-3",
                children: renderPlanButton()
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                lineNumber: 303,
                columnNumber: 9
            }, undefined),
            uploadedImages.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "mb-3 flex flex-wrap gap-2",
                children: uploadedImages.map((image, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ImagePreview__WEBPACK_IMPORTED_MODULE_6__.ImagePreview, {
                        image: image,
                        onRemove: ()=>handleRemoveImage(index)
                    }, index, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                        lineNumber: 310,
                        columnNumber: 13
                    }, undefined))
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                lineNumber: 308,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: `relative overflow-hidden rounded-3xl transition-all duration-300 ${isFocused ? 'shadow-md' : ''}`,
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: `absolute inset-0 bg-gradient-to-r ${isFocused || input.trim() || uploadedImages.length > 0 ? 'from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-400 animate-border-flow' : 'from-gray-200 via-gray-300 to-gray-200 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700'} bg-[length:200%_200%] ${isFocused ? 'opacity-100' : 'opacity-70'}`
                    }, void 0, false, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                        lineNumber: 322,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                        className: `relative m-[2px] rounded-[1.4rem] bg-white dark:bg-gray-800 backdrop-blur-sm ${isDisabled ? 'opacity-90' : ''}`,
                        children: [
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("textarea", {
                                ref: inputRef,
                                value: input,
                                onChange: handleInput,
                                onKeyDown: handleKeyDown,
                                onFocus: ()=>setIsFocused(true),
                                onBlur: ()=>setIsFocused(false),
                                onPaste: handlePaste,
                                placeholder: connectionStatus && !connectionStatus.connected ? 'Server disconnected...' : isProcessing ? 'Agent TARS is thinking...' : 'Ask Agent TARS something... (Ctrl+Enter to send)',
                                disabled: isDisabled,
                                className: "w-full px-5 pt-4 pb-10 focus:outline-none resize-none min-h-[90px] max-h-[200px] bg-transparent text-sm leading-relaxed rounded-[1.4rem]",
                                rows: 2
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                lineNumber: 336,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                                className: "absolute left-3 bottom-2 flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.button, {
                                        whileHover: {
                                            scale: 1.05
                                        },
                                        whileTap: {
                                            scale: 0.95
                                        },
                                        type: "button",
                                        onClick: handleFileUpload,
                                        disabled: isDisabled || isProcessing,
                                        className: `p-2 rounded-full transition-colors ${isDisabled || isProcessing ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed' : 'text-gray-400 hover:text-accent-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'}`,
                                        title: "Attach image (or paste directly)",
                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiImage, {
                                            size: 18
                                        }, void 0, false, {
                                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                            lineNumber: 371,
                                            columnNumber: 15
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 358,
                                        columnNumber: 13
                                    }, undefined),
                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("input", {
                                        type: "file",
                                        ref: fileInputRef,
                                        onChange: handleFileChange,
                                        accept: "image/*",
                                        multiple: true,
                                        className: "hidden",
                                        disabled: isDisabled || isProcessing
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 373,
                                        columnNumber: 13
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                lineNumber: 357,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_10__.AnimatePresence, {
                                mode: "wait",
                                children: connectionStatus && !connectionStatus.connected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.button, {
                                    initial: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    animate: {
                                        opacity: 1,
                                        scale: 1
                                    },
                                    exit: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    whileTap: {
                                        scale: 0.9
                                    },
                                    whileHover: {
                                        scale: 1.05
                                    },
                                    type: "button",
                                    onClick: onReconnect,
                                    className: "absolute right-3 bottom-2 p-2 rounded-full text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400 transition-all duration-200",
                                    title: "Try to reconnect",
                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiRefreshCw, {
                                        size: 20,
                                        className: connectionStatus.reconnecting ? 'animate-spin' : ''
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 398,
                                        columnNumber: 17
                                    }, undefined)
                                }, "reconnect", false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 386,
                                    columnNumber: 15
                                }, undefined) : isProcessing ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.button, {
                                    initial: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    animate: {
                                        opacity: 1,
                                        scale: 1
                                    },
                                    exit: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    whileTap: {
                                        scale: 0.9
                                    },
                                    whileHover: {
                                        scale: 1.05
                                    },
                                    type: "button",
                                    onClick: handleAbort,
                                    disabled: isAborting,
                                    className: `absolute right-3 bottom-2 p-2 rounded-full ${isAborting ? 'text-gray-300 dark:text-gray-600 cursor-not-allowed' : 'text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700/30 dark:text-gray-400'} transition-all duration-200`,
                                    title: "Abort current operation",
                                    children: isAborting ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiLoader, {
                                        className: "animate-spin",
                                        size: 20
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 421,
                                        columnNumber: 31
                                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiX, {
                                        size: 20
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 421,
                                        columnNumber: 81
                                    }, undefined)
                                }, "abort", false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 404,
                                    columnNumber: 15
                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.button, {
                                    initial: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    animate: {
                                        opacity: 1,
                                        scale: 1
                                    },
                                    exit: {
                                        opacity: 0,
                                        scale: 0.8
                                    },
                                    whileTap: {
                                        scale: 0.9
                                    },
                                    whileHover: {
                                        scale: 1.05
                                    },
                                    type: "submit",
                                    disabled: !input.trim() && uploadedImages.length === 0 || isDisabled,
                                    className: `absolute right-3 bottom-2 p-3 rounded-full ${!input.trim() && uploadedImages.length === 0 || isDisabled ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed' : 'bg-gradient-to-r from-indigo-500 to-purple-500 dark:from-indigo-400 dark:via-purple-400 dark:to-pink-400 text-white shadow-sm'} transition-all duration-200`,
                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_fi__WEBPACK_IMPORTED_MODULE_9__.FiSend, {
                                        size: 18
                                    }, void 0, false, {
                                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                        lineNumber: 439,
                                        columnNumber: 17
                                    }, undefined)
                                }, "send", false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 424,
                                    columnNumber: 15
                                }, undefined)
                            }, void 0, false, {
                                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                lineNumber: 384,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                        lineNumber: 331,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                lineNumber: 316,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
                className: "flex justify-center mt-2 text-xs",
                children: connectionStatus && !connectionStatus.connected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.span, {
                    initial: {
                        opacity: 0.7
                    },
                    animate: {
                        opacity: 1
                    },
                    className: "text-red-500 dark:text-red-400 flex items-center font-medium",
                    children: connectionStatus.reconnecting ? 'Attempting to reconnect...' : 'Server disconnected. Click the button to reconnect.'
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 448,
                    columnNumber: 11
                }, undefined) : isProcessing ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.span, {
                    initial: {
                        opacity: 0.7
                    },
                    whileHover: {
                        opacity: 1
                    },
                    className: "text-accent-500 dark:text-accent-400 flex items-center",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {
                            className: "typing-indicator mr-2",
                            children: [
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {}, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 464,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {}, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 465,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {}, void 0, false, {
                                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                                    lineNumber: 466,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                            lineNumber: 463,
                            columnNumber: 13
                        }, undefined),
                        "Agent is processing your request..."
                    ]
                }, void 0, true, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 458,
                    columnNumber: 11
                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.span, {
                    initial: {
                        opacity: 0.7
                    },
                    whileHover: {
                        opacity: 1
                    },
                    className: "text-gray-500 dark:text-gray-400 transition-opacity",
                    children: "Use Ctrl+Enter to quickly send \u2022 You can also paste images directly"
                }, void 0, false, {
                    fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                    lineNumber: 471,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
                lineNumber: 446,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/main/components/Chat/MessageInput.tsx",
        lineNumber: 300,
        columnNumber: 5
    }, undefined);
};
_s(MessageInput, "IRJJFPCpbtNPsa5fTP9VBthSKNs=", false, function() {
    return [
        react_router_dom__WEBPACK_IMPORTED_MODULE_7__.useLocation,
        _hooks_useSession__WEBPACK_IMPORTED_MODULE_2__.useSession,
        _main_hooks_usePro__WEBPACK_IMPORTED_MODULE_5__.usePro,
        _hooks_usePlan__WEBPACK_IMPORTED_MODULE_3__.usePlan
    ];
});
_c = MessageInput;
var _c;
$RefreshReg$(_c, "MessageInput");

function $RefreshSig$() {
  return $ReactRefreshRuntime$.createSignatureFunctionForTransform();
}
function $RefreshReg$(type, id) {
  $ReactRefreshRuntime$.register(type, module.id + "_" + id);
}
Promise.resolve().then(function() {
  $ReactRefreshRuntime$.refresh(module.id, module.hot);
});


}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
(() => {
__webpack_require__.h = () => ("ebac08846ca6a366")
})();

}
);
//# sourceMappingURL=index.50bcb7bc115e77a3.hot-update.js.map