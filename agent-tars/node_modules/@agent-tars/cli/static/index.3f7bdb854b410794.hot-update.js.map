{"version":3,"file":"index.3f7bdb854b410794.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/PlanView.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749667571944\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  FiArrowLeft, \n  FiCpu, \n  FiCheckCircle, \n  FiClock, \n  FiTarget\n} from 'react-icons/fi';\nimport { useSession } from '@/common/hooks/useSession';\nimport { usePlan } from '@/common/hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n *\n * Features:\n * - Shows current plan status and steps\n * - Supports navigation through plan keyframes via progress bar\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex,\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center max-w-md p-8\"\n        >\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/50 dark:border-gray-700/30 shadow-sm\">\n            <FiTarget className=\"text-gray-400 dark:text-gray-500\" size={32} />\n          </div>\n          <h3 className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\">\n            No Plan Available\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            The agent hasn't created a plan for this task yet, or the task was simple enough to not\n            require planning.\n          </p>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"h-full flex flex-col bg-gradient-to-b from-gray-50/90 via-gray-50/60 to-gray-100/40 dark:from-gray-900/60 dark:via-gray-900/40 dark:to-gray-900/20 backdrop-blur-sm\"\n      >\n        {/* Header with back button */}\n        <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100/60 dark:border-gray-800/50 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md\">\n          <div className=\"flex items-center\">\n            <motion.button\n              whileHover={{ scale: 1.05, x: -2 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onBack}\n              className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50 transition-all duration-200\"\n              title=\"Back to workspace\"\n            >\n              <FiArrowLeft size={18} />\n            </motion.button>\n\n            <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden shadow-sm\">\n              <div className={`absolute inset-0 ${\n                displayedPlan.isComplete \n                  ? 'bg-gradient-to-br from-green-400/20 to-green-500/10 dark:from-green-600/30 dark:to-green-500/20'\n                  : 'bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20'\n              }`}></div>\n              <div className=\"relative z-10\">\n                {displayedPlan.isComplete ? (\n                  <FiCheckCircle className=\"text-green-500 dark:text-green-400\" size={20} />\n                ) : (\n                  <FiCpu className=\"text-accent-500 dark:text-accent-400\" size={20} />\n                )}\n              </div>\n            </div>\n\n            <div>\n              <h2 className=\"font-medium text-gray-800 dark:text-gray-100 text-lg leading-tight\">\n                Task Plan\n              </h2>\n              <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400\">\n                {displayedPlan.isComplete ? (\n                  <span className=\"flex items-center\">\n                    <FiCheckCircle className=\"mr-1 text-green-500 dark:text-green-400\" size={12} />\n                    Completed\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <FiClock className=\"mr-1 text-accent-500 dark:text-accent-400 animate-pulse\" size={12} />\n                    In progress\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Plan content */}\n        <div className=\"flex-1 overflow-auto\">\n          <PlanViewerRenderer\n            plan={{\n              ...displayedPlan,\n              keyframes: currentPlan.keyframes,\n              currentKeyframeIndex,\n            }}\n            onKeyframeChange={handleKeyframeChange}\n          />\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAOA;AACA;AACA;AAMA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;;AACA;AAAA;;;;;;AAKA;AAAA;AACA;AACA;AAAA;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAKA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAMA;AAnIA;;AACA;AACA;;;AAFA"}