{"version":3,"file":"index.c560e7d9afbdf297.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/workspace/renderers/PlanViewerRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749665419914\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCheck, FiClock, FiLoader, FiTarget, FiCheckCircle, FiArrowRight } from 'react-icons/fi';\nimport { formatTimestamp } from '@/common/utils/formatters';\nimport { AgentEventStream } from '@/common/types';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: AgentEventStream.PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator\n * - Supports keyframe navigation for plan history\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // 计算进度百分比\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n\n  // 如果没有计划，显示空状态\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-24 h-24 rounded-3xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center mb-6 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n        >\n          <FiTarget size={40} className=\"text-gray-400 dark:text-gray-500\" />\n        </motion.div>\n        <motion.h3\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n        >\n          No Plan Generated\n        </motion.h3>\n        <motion.p\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"text-gray-600 dark:text-gray-400 max-w-md\"\n        >\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </motion.p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-8 h-full flex flex-col\">\n      {/* 标题和计划摘要 */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4 }}\n        className=\"mb-8\"\n      >\n        <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n          {isComplete ? (\n            <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-4 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheckCircle size={20} />\n            </div>\n          ) : (\n            <motion.div\n              animate={{ scale: [1, 1.05, 1] }}\n              transition={{ duration: 2.5, repeat: Infinity }}\n              className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center mr-4 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30\"\n            >\n              <FiTarget size={20} />\n            </motion.div>\n          )}\n          Execution Plan\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 ml-14\">\n          {isComplete\n            ? 'All steps have been completed successfully.'\n            : 'The agent is executing this plan to complete your task.'}\n        </p>\n      </motion.div>\n\n      {/* 关键帧时间轴 (如果有关键帧) */}\n      {keyframes && keyframes.length > 1 && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.1 }}\n          className=\"mb-8\"\n        >\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Plan Timeline\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full border border-gray-200/50 dark:border-gray-700/30\">\n              {currentKeyframeIndex !== undefined &&\n                keyframes[currentKeyframeIndex] &&\n                formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n            </div>\n          </div>\n          \n          {/* 新的线性时间轴设计 */}\n          <div className=\"relative h-12 bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            {/* 背景线 */}\n            <div className=\"absolute top-1/2 left-4 right-4 h-0.5 bg-gray-200 dark:bg-gray-700 transform -translate-y-1/2\"></div>\n            \n            {/* 关键帧点 */}\n            <div className=\"absolute inset-0 flex items-center px-4\">\n              {keyframes.map((keyframe, index) => {\n                // 计算位置百分比 (0% 到 100%)\n                const position = keyframes.length <= 1 ? 50 : (index / (keyframes.length - 1)) * 100;\n                \n                return (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.3, delay: index * 0.05 }}\n                    className=\"absolute cursor-pointer\"\n                    style={{ left: `${position}%` }}\n                    onClick={() => onKeyframeChange && onKeyframeChange(index)}\n                  >\n                    <div className=\"flex flex-col items-center\">\n                      <div \n                        className={`w-4 h-4 rounded-full mb-1.5 transition-all duration-200 \n                          ${index === currentKeyframeIndex \n                            ? 'bg-accent-500 dark:bg-accent-400 ring-4 ring-accent-200 dark:ring-accent-700/30 ring-opacity-60' \n                            : 'bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\n                          }`}\n                      >\n                        {/* 当前选中的点内部显示一个小点 */}\n                        {index === currentKeyframeIndex && (\n                          <div className=\"w-1.5 h-1.5 bg-white rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\n                        )}\n                      </div>\n                      <div className=\"text-[0.65rem] text-gray-500 dark:text-gray-400 whitespace-nowrap\">\n                        {formatTimestamp(keyframe.timestamp, true)}\n                      </div>\n                    </div>\n                  </motion.div>\n                );\n              })}\n              \n              {/* 进度连接线 - 只连接到当前选中的点 */}\n              {currentKeyframeIndex !== undefined && currentKeyframeIndex > 0 && (\n                <motion.div \n                  initial={{ width: 0 }}\n                  animate={{ width: `${(currentKeyframeIndex / (keyframes.length - 1)) * 100}%` }}\n                  transition={{ duration: 0.5, ease: 'easeOut' }}\n                  className=\"absolute top-1/2 left-4 h-1 bg-accent-500 dark:bg-accent-400 transform -translate-y-1/2 rounded-full\"\n                />\n              )}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* 进度指示器 */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4, delay: 0.2 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex justify-between items-center mb-3\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Progress</span>\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n            {steps.filter((step) => step.done).length}/{steps.length} steps\n          </span>\n        </div>\n        <div className=\"h-3 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden shadow-inner\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progressPercentage}%` }}\n            transition={{ duration: 0.7, ease: 'easeOut' }}\n            className={`h-full ${\n              isComplete\n                ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n            }`}\n          />\n        </div>\n      </motion.div>\n\n      {/* 步骤列表 */}\n      <div className=\"flex-1 overflow-auto pr-2 workspace-scrollbar\">\n        <motion.div\n          className=\"space-y-4\"\n          variants={{\n            visible: { transition: { staggerChildren: 0.07 } },\n          }}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {steps.map((step, index) => (\n            <motion.div\n              key={index}\n              variants={{\n                hidden: { opacity: 0, y: 20 },\n                visible: {\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.4, ease: [0.19, 1, 0.22, 1] },\n                },\n              }}\n              className=\"relative\"\n            >\n              {/* 连接线 */}\n              {index < steps.length - 1 && (\n                <div className=\"absolute left-6 w-0.5 top-12 bottom-0 bg-gradient-to-b from-gray-200 to-gray-100 dark:from-gray-700 dark:to-gray-600\" />\n              )}\n\n              <div className=\"flex items-start gap-4\">\n                <div\n                  className={`flex-shrink-0 w-12 h-12 rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm ${\n                    step.done\n                      ? 'bg-gradient-to-br from-green-400 to-green-500 dark:from-green-500 dark:to-green-400 text-white'\n                      : index === steps.filter((s) => s.done).length\n                        ? 'bg-gradient-to-br from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400 text-white'\n                        : 'bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-600 text-gray-500 dark:text-gray-400'\n                  }`}\n                >\n                  {step.done ? (\n                    <FiCheck size={22} />\n                  ) : index === steps.filter((s) => s.done).length ? (\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 2.5, repeat: Infinity, ease: 'linear' }}\n                    >\n                      <FiLoader size={22} />\n                    </motion.div>\n                  ) : (\n                    <FiClock size={20} />\n                  )}\n                </div>\n\n                <div className=\"flex-1\">\n                  <div\n                    className={`bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${\n                      step.done\n                        ? 'border-l-4 border-l-green-500 dark:border-l-green-400'\n                        : index === steps.filter((s) => s.done).length\n                          ? 'border-l-4 border-l-accent-500 dark:border-l-accent-400 animate-pulse'\n                          : ''\n                    }`}\n                  >\n                    <div\n                      className={`text-sm leading-relaxed ${\n                        step.done\n                          ? 'text-gray-800 dark:text-gray-200'\n                          : index === steps.filter((s) => s.done).length\n                            ? 'text-gray-800 dark:text-gray-200'\n                            : 'text-gray-500 dark:text-gray-400'\n                      }`}\n                    >\n                      {step.content}\n                    </div>\n\n                    {/* 步骤状态指示器 */}\n                    <div className=\"flex justify-between items-center mt-3 text-xs\">\n                      <div\n                        className={`flex items-center ${\n                          step.done\n                            ? 'text-green-600 dark:text-green-400'\n                            : index === steps.filter((s) => s.done).length\n                              ? 'text-accent-600 dark:text-accent-400'\n                              : 'text-gray-500 dark:text-gray-400'\n                        }`}\n                      >\n                        {step.done ? (\n                          <>\n                            <FiCheckCircle size={12} className=\"mr-1\" />\n                            <span>Completed</span>\n                          </>\n                        ) : index === steps.filter((s) => s.done).length ? (\n                          <>\n                            <FiLoader size={12} className=\"mr-1 animate-spin\" />\n                            <span>In progress</span>\n                          </>\n                        ) : (\n                          <>\n                            <FiClock size={12} className=\"mr-1\" />\n                            <span>Pending</span>\n                          </>\n                        )}\n                      </div>\n                      <div className=\"text-gray-400 dark:text-gray-500\">Step {index + 1}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n\n      {/* 计划总结 - 在底部显示 */}\n      {isComplete && summary && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.3 }}\n          className=\"mt-8 pt-6 border-t border-gray-200/70 dark:border-gray-700/40\"\n        >\n          <div className=\"flex items-center mb-3\">\n            <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheck size={16} />\n            </div>\n            <div className=\"font-medium text-gray-800 dark:text-gray-200\">Plan Summary</div>\n          </div>\n          <div className=\"text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 p-5 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            {summary}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};"],"names":[],"mappings":"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"}