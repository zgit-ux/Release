{"version":3,"file":"index.5013e2a02edb9130.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/standalone/replay/TimelineSlider.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749663317231\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useRef, useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiMessageSquare, FiTool, FiImage, FiCpu, FiBookOpen } from 'react-icons/fi';\nimport { AgentEventStream } from '@/common/types';\nimport { useReplay } from '@/main/hooks/useReplay';\nimport { formatTimestamp } from '../../utils/formatters';\n\n/**\n * TimelineSlider - Interactive timeline for replay navigation\n *\n * Enhanced with:\n * - Monochromatic design matching the app's black/gray aesthetic\n * - Subtle markers with minimal visual noise\n * - No box shadows or gradients\n */\nexport const TimelineSlider: React.FC = () => {\n  const { replayState, jumpToPosition, getCurrentPosition, getCurrentEvent } = useReplay();\n\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoverPosition, setHoverPosition] = useState<number | null>(null);\n  const [hoverEvent, setHoverEvent] = useState<Event | null>(null);\n\n  const { events } = replayState;\n  const currentPosition = getCurrentPosition();\n  const currentEvent = getCurrentEvent();\n\n  // Handle mouse down on slider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    setIsDragging(true);\n    updatePositionFromMouse(e);\n  };\n\n  // Handle mouse move for dragging and hover feedback\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    // Update hover position and event\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    setHoverPosition(position);\n\n    // Find event closest to hover position\n    if (events.length > 0) {\n      const index = Math.floor(position * events.length);\n      const boundedIndex = Math.max(0, Math.min(index, events.length - 1));\n      setHoverEvent(events[boundedIndex]);\n    }\n\n    // Update position if dragging\n    if (isDragging) {\n      updatePositionFromMouse(e);\n    }\n  };\n\n  // Handle mouse up to end dragging\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Calculate position from mouse event\n  const updatePositionFromMouse = (e: React.MouseEvent) => {\n    if (!sliderRef.current) return;\n\n    const rect = sliderRef.current.getBoundingClientRect();\n    const position = (e.clientX - rect.left) / rect.width;\n    jumpToPosition(position);\n  };\n\n  // Handle mouse leave\n  const handleMouseLeave = () => {\n    setHoverPosition(null);\n    setHoverEvent(null);\n    setIsDragging(false);\n  };\n\n  // Add global mouse up handler when dragging\n  useEffect(() => {\n    if (isDragging) {\n      const handleGlobalMouseUp = () => setIsDragging(false);\n      window.addEventListener('mouseup', handleGlobalMouseUp);\n      return () => window.removeEventListener('mouseup', handleGlobalMouseUp);\n    }\n  }, [isDragging]);\n\n  // Get color for event marker\n  const getEventColor = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'bg-gray-400 dark:bg-gray-500';\n      case 'assistant_message':\n        return 'bg-gray-600 dark:bg-gray-400';\n      case 'tool_call':\n      case 'tool_result':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'environment_input':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'plan_update':\n      case 'plan_finish':\n        return 'bg-gray-500 dark:bg-gray-400';\n      case 'final_answer':\n        return 'bg-gray-700 dark:bg-gray-300';\n      default:\n        return 'bg-gray-400 dark:bg-gray-500';\n    }\n  };\n\n  // Get icon for event type (for tooltip)\n  const getEventIcon = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'assistant_message':\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'tool_call':\n      case 'tool_result':\n        return <FiTool size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'environment_input':\n        return <FiImage size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'plan_update':\n      case 'plan_finish':\n        return <FiCpu size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      case 'final_answer':\n        return <FiBookOpen size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n      default:\n        return <FiMessageSquare size={14} className=\"text-gray-700 dark:text-gray-300\" />;\n    }\n  };\n\n  // Get event description for hover tooltip\n  const getEventDescription = (event: AgentEventStream.Event) => {\n    switch (event.type) {\n      case 'user_message':\n        return 'User Message';\n      case 'assistant_message':\n        return 'Assistant Response';\n      case 'tool_call':\n        return `Tool Call: ${event.name || ''}`;\n      case 'tool_result':\n        return `Tool Result: ${event.name || ''}`;\n      case 'environment_input':\n        return 'Browser Screenshot';\n      case 'plan_update':\n        return 'Plan Update';\n      case 'plan_finish':\n        return 'Plan Completed';\n      case 'final_answer':\n        return 'Research Report';\n      default:\n        return event.type;\n    }\n  };\n\n  // Get event content preview for the tooltip\n  const getEventContentPreview = (event: AgentEventStream.Event) => {\n    if (event.type === 'user_message' || event.type === 'assistant_message') {\n      const content =\n        typeof event.content === 'string'\n          ? event.content\n          : Array.isArray(event.content) &&\n              event.content.length > 0 &&\n              event.content[0].type === 'text'\n            ? event.content[0].text\n            : '';\n\n      return content.length > 50 ? content.substring(0, 47) + '...' : content;\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"relative px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/30\">\n      {/* Current time display */}\n      {currentEvent && (\n        <div className=\"absolute left-3 top-0 text-xs text-gray-500 dark:text-gray-400 py-1\">\n          {formatTimestamp(currentEvent.timestamp)}\n        </div>\n      )}\n\n      {/* Timeline slider with modern media player styling */}\n      <div\n        ref={sliderRef}\n        className=\"relative h-6 mt-4 cursor-pointer\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseLeave}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* Track background - simplified and more minimal */}\n        <div className=\"absolute inset-0 top-1/2 -translate-y-1/2 h-1.5 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n          {/* No texture dots, keeping it minimal */}\n        </div>\n\n        {/* Progress fill */}\n        <div\n          className=\"absolute top-1/2 -translate-y-1/2 left-0 h-1.5 bg-gray-800 dark:bg-gray-300 rounded-full\"\n          style={{ width: `${currentPosition}%` }}\n        />\n\n        {/* Event markers - more subtle, minimal style */}\n        {events.map((event, index) => {\n          const position = (index / (events.length - 1)) * 100;\n\n          return (\n            <motion.div\n              key={`${event.id}-${index}`}\n              className={`absolute top-1/2 -translate-y-1/2 w-1.5 h-3 ${getEventColor(event)} rounded-sm`}\n              style={{ left: `${position}%`, marginLeft: '-1px' }}\n              initial={{ opacity: 0.6, height: 3 }}\n              animate={{\n                opacity: 0.8,\n                height: currentEvent?.id === event.id ? 5 : 3,\n              }}\n              whileHover={{ opacity: 1, height: 5 }}\n              transition={{ duration: 0.2 }}\n            />\n          );\n        })}\n\n        {/* Playhead - larger and more prominent but without shadow */}\n        <motion.div\n          className=\"absolute top-[5px] -translate-y-1/2 w-4 h-4 rounded-full bg-white dark:bg-gray-200 border-2 border-gray-800 dark:border-gray-600 z-30\"\n          style={{ left: `calc(${currentPosition}% - 8px)` }}\n          animate={{\n            scale: isDragging ? 1.2 : 1,\n          }}\n          transition={{ duration: 0.2 }}\n        />\n\n        {/* Hover position indicator */}\n        {hoverPosition !== null && !isDragging && (\n          <motion.div\n            className=\"absolute top-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400/40 dark:bg-gray-500/40 rounded-full z-10\"\n            style={{ left: `${hoverPosition * 100}%` }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </div>\n\n      {/* Improved hover tooltip - monochromatic style */}\n      {hoverEvent && hoverPosition !== null && (\n        <motion.div\n          className=\"absolute bottom-full mb-2 p-2 bg-gray-100 dark:bg-gray-800 rounded-lg border border-gray-200/50 dark:border-gray-700/30 text-xs max-w-xs z-50\"\n          style={{\n            left: `${hoverPosition * 100}%`,\n            transform: 'translateX(-50%)',\n          }}\n          initial={{ opacity: 0, y: 5, scale: 0.95 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 flex-shrink-0\">{getEventIcon(hoverEvent)}</div>\n            <div>\n              <div className=\"font-medium text-gray-800 dark:text-gray-200\">\n                {getEventDescription(hoverEvent)}\n              </div>\n\n              {getEventContentPreview(hoverEvent) && (\n                <div className=\"mt-1 text-gray-600 dark:text-gray-400 italic line-clamp-2 text-[10px]\">\n                  \"{getEventContentPreview(hoverEvent)}\"\n                </div>\n              )}\n\n              <div className=\"mt-1 text-[10px] text-gray-500 dark:text-gray-400\">\n                {formatTimestamp(hoverEvent.timestamp)}\n              </div>\n            </div>\n          </div>\n\n          {/* Tooltip arrow */}\n          <div className=\"absolute left-1/2 bottom-0 w-2 h-2 bg-gray-100 dark:bg-gray-800 border-r border-b border-gray-200/50 dark:border-gray-700/30 transform rotate-45 translate-y-1 -translate-x-1\"></div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;AAOA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAKA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;;;;;AAYA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;;AACA;AAAA;AACA;;;;;;AAGA;AACA;;AAAA;AACA;AAAA;;;;;;;AAIA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;;;;;;;;;;;;;;;;;;AAKA;AAzQA;;AACA;;;AADA"}