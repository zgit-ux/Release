{"version":3,"file":"index.f45168c95fe1ec84.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Chat/Message/components/ToolCalls.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749656222098\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { FiArrowRight, FiLoader, FiCheck, FiX, FiClock } from 'react-icons/fi';\nimport { motion } from 'framer-motion';\n\ninterface ToolCallsProps {\n  toolCalls: any[];\n  onToolCallClick: (toolCall: any) => void;\n  getToolIcon: (name: string) => React.ReactNode;\n  isIntermediate?: boolean;\n  toolResults?: any[]; // Add toolResults to check completion status\n}\n\n/**\n * Component for displaying tool calls with loading states and status icons\n *\n * Design principles:\n * - Shows loading state for pending tool calls\n * - Displays success/error status with appropriate icons\n * - Maintains compact display for thinking sequences\n * - Provides clear visual feedback for tool execution status\n * - Refined colors for better visual harmony while keeping simplicity\n */\nexport const ToolCalls: React.FC<ToolCallsProps> = ({\n  toolCalls,\n  onToolCallClick,\n  getToolIcon,\n  isIntermediate = false,\n  toolResults = [],\n}) => {\n  // Helper function to get tool call status\n  const getToolCallStatus = (toolCall: any) => {\n    const result = toolResults.find((result) => result.toolCallId === toolCall.id);\n\n    if (!result) {\n      return 'pending'; // No result yet, tool is still running\n    }\n\n    if (result.error) {\n      return 'error'; // Tool execution failed\n    }\n\n    return 'success'; // Tool completed successfully\n  };\n\n  // Helper function to get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return (\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}\n          >\n            <FiLoader size={10} className=\"text-slate-500 dark:text-slate-400\" />\n          </motion.div>\n        );\n      case 'success':\n        return <FiCheck size={10} className=\"text-slate-600 dark:text-slate-300\" />;\n      case 'error':\n        return <FiX size={10} className=\"text-red-600 dark:text-red-400\" />;\n      default:\n        return <FiClock size={10} className=\"text-slate-500 dark:text-slate-400\" />;\n    }\n  };\n\n  // 修改工具调用状态颜色，确保暗黑模式下的可见性\n  const getStatusColorClasses = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-800/60 text-slate-700 dark:text-slate-300 shadow-sm';\n      case 'success':\n        return 'border-slate-200 dark:border-slate-700 bg-white dark:bg-slate-800/80 text-slate-800 dark:text-slate-200 shadow-sm';\n      case 'error':\n        return 'border-red-200 dark:border-red-800 bg-red-50 dark:bg-red-900/30 text-red-700 dark:text-red-400 shadow-sm';\n      default:\n        return 'border-slate-200 dark:border-slate-700 bg-slate-50 dark:bg-slate-800/60 text-slate-700 dark:text-slate-300 shadow-sm';\n    }\n  };\n\n  // 改进悬浮效果\n  const getHoverColorClasses = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'hover:bg-slate-100 dark:hover:bg-slate-700/70 hover:border-slate-300 dark:hover:border-slate-600';\n      case 'success':\n        return 'hover:bg-slate-50 dark:hover:bg-slate-700/80 hover:border-slate-300 dark:hover:border-slate-600';\n      case 'error':\n        return 'hover:bg-red-100 dark:hover:bg-red-900/40 hover:border-red-300 dark:hover:border-red-700';\n      default:\n        return 'hover:bg-slate-100 dark:hover:bg-slate-700/70 hover:border-slate-300 dark:hover:border-slate-600';\n    }\n  };\n\n  return (\n    <div className=\"mt-2 space-y-1.5\">\n      {toolCalls.map((toolCall) => {\n        const status = getToolCallStatus(toolCall);\n        const statusColorClasses = getStatusColorClasses(status);\n        const hoverColorClasses = getHoverColorClasses(status);\n\n        return (\n          <motion.button\n            key={toolCall.id}\n            onClick={() => onToolCallClick(toolCall)}\n            className={`flex items-center gap-2 px-3 py-1.5 text-xs font-medium rounded-2xl transition-all duration-200 hover:scale-[1.01] active:scale-[0.99] border text-left group w-full ${statusColorClasses} ${hoverColorClasses}`}\n            initial={{ opacity: 0, y: 5 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.2 }}\n            whileHover={{\n              y: -1,\n              transition: { duration: 0.15 },\n            }}\n          >\n            {/* Tool icon with refined styling */}\n            <div className=\"flex-shrink-0 opacity-80\">{getToolIcon(toolCall.function.name)}</div>\n\n            {/* Tool name with refined typography */}\n            <div className=\"truncate flex-1 font-medium\">{toolCall.function.name}</div>\n\n            {/* Status and arrow with refined styling */}\n            <div className=\"flex items-center gap-1.5 flex-shrink-0\">\n              {/* Status icon */}\n              <div className=\"flex items-center justify-center\">{getStatusIcon(status)}</div>\n\n              {/* Arrow - only show if completed */}\n              {status !== 'pending' && (\n                <FiArrowRight\n                  className=\"opacity-60 group-hover:opacity-100 group-hover:translate-x-0.5 transition-all duration-200 text-slate-500 dark:text-slate-400\"\n                  size={11}\n                />\n              )}\n            </div>\n          </motion.button>\n        );\n      })}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAUA;;;;;;;;;AASA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;AAGA;AAAA;;AAEA;AAAA;AAAA;;;;;;AAGA;AAEA;AACA;;;;;;;;;;;;;AA1BA;;;;;AAgCA;;;;;;AAGA;AAnHA"}