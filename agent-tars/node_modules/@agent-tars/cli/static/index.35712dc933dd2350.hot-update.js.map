{"version":3,"file":"index.35712dc933dd2350.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/Workspace.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/PlanView.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceContent.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspaceDetail.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/WorkspacePanel.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/BrowserShell.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/PlanViewerRenderer.tsx","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/ResearchReportRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749656988213\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749656987999\n        var cssReload = require(\"../../../../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiArrowLeft, FiCpu, FiPlayCircle, FiPauseCircle, FiCheckCircle, FiClock, FiMap } from 'react-icons/fi';\nimport { useSession } from '../../hooks/useSession';\nimport { usePlan } from '../../hooks/usePlan';\nimport { PlanViewerRenderer, PlanKeyframe } from './renderers/PlanViewerRenderer';\n\ninterface PlanViewProps {\n  onBack: () => void;\n}\n\n/**\n * PlanView Component - Displays plan details in the workspace\n *\n * Features:\n * - Shows current plan status and steps\n * - Supports timeline navigation through plan keyframes\n * - Will support replay functionality in future\n */\nexport const PlanView: React.FC<PlanViewProps> = ({ onBack }) => {\n  const { activeSessionId } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const [currentKeyframeIndex, setCurrentKeyframeIndex] = useState<number | undefined>(undefined);\n  const [displayedPlan, setDisplayedPlan] = useState(currentPlan);\n\n  // Set the initial keyframe to the latest when plan changes\n  useEffect(() => {\n    if (currentPlan?.keyframes?.length) {\n      setCurrentKeyframeIndex(currentPlan.keyframes.length - 1);\n    }\n    setDisplayedPlan(currentPlan);\n  }, [currentPlan]);\n\n  // Update displayed plan when keyframe changes\n  useEffect(() => {\n    if (currentPlan?.keyframes && currentKeyframeIndex !== undefined) {\n      const keyframe = currentPlan.keyframes[currentKeyframeIndex];\n      if (keyframe) {\n        setDisplayedPlan({\n          ...currentPlan,\n          steps: keyframe.steps,\n          isComplete: keyframe.isComplete,\n          summary: keyframe.summary,\n          currentKeyframeIndex,\n        });\n      }\n    }\n  }, [currentPlan, currentKeyframeIndex]);\n\n  // Handle keyframe change\n  const handleKeyframeChange = (index: number) => {\n    setCurrentKeyframeIndex(index);\n  };\n\n  if (!activeSessionId || !currentPlan || !displayedPlan) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center max-w-md p-8\"\n        >\n          <div className=\"w-20 h-20 mx-auto mb-6 rounded-3xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/50 dark:border-gray-700/30 shadow-sm\">\n            <FiMap className=\"text-gray-500 dark:text-gray-400\" size={32} />\n          </div>\n          <h3 className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\">\n            No Plan Available\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            The agent hasn't created a plan for this task yet, or the task was simple enough to not require planning.\n          </p>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\"\n    >\n      {/* Header with back button */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={onBack}\n            className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={18} />\n          </motion.button>\n\n          <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 border border-accent-100/50 dark:border-accent-800/30 flex items-center justify-center text-accent-600 dark:text-accent-400\">\n            <FiCpu size={18} />\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              Task Plan\n            </h2>\n            <div className=\"text-xs flex items-center text-gray-500 dark:text-gray-400\">\n              {displayedPlan.isComplete ? (\n                <span className=\"flex items-center\">\n                  <FiCheckCircle className=\"mr-1 text-green-500 dark:text-green-400\" size={12} />\n                  Completed\n                </span>\n              ) : (\n                <span className=\"flex items-center\">\n                  <FiClock className=\"mr-1 text-accent-500 dark:text-accent-400\" size={12} />\n                  In progress\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Future replay controls */}\n        <div className=\"flex items-center space-x-2\">\n          {currentPlan.keyframes && currentPlan.keyframes.length > 1 && (\n            <div className=\"text-xs bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full text-gray-600 dark:text-gray-400 border border-gray-200/50 dark:border-gray-700/30\">\n              {currentKeyframeIndex !== undefined && (\n                <span>\n                  Keyframe {currentKeyframeIndex + 1} of {currentPlan.keyframes.length}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Plan content */}\n      <div className=\"flex-1 overflow-auto bg-gradient-to-b from-gray-50/80 to-gray-100/50 dark:from-gray-900/20 dark:to-gray-900/30\">\n        <PlanViewerRenderer\n          plan={{\n            ...displayedPlan,\n            keyframes: currentPlan.keyframes,\n            currentKeyframeIndex,\n          }}\n          onKeyframeChange={handleKeyframeChange}\n        />\n      </div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useSession } from '../../hooks/useSession';\nimport { usePlan } from '../../hooks/usePlan';\nimport { usePro } from '../../hooks/usePro';\nimport { FiLayout, FiCpu, FiCheck, FiClock, FiZap, FiArrowRight, FiLayers, FiActivity } from 'react-icons/fi';\nimport './Workspace.css';\n\n/**\n * WorkspaceContent Component - Enhanced workspace with beautiful empty state\n *\n * Design principles:\n * - Focus on plan display for Pro users\n * - Beautiful empty state when no content is available\n * - Clean visual hierarchy and elegant animations\n */\nexport const WorkspaceContent: React.FC = () => {\n  const { activeSessionId, setActivePanelContent } = useSession();\n  const { currentPlan } = usePlan(activeSessionId);\n  const isProMode = usePro();\n\n  // Animation variants\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: { \n      opacity: 1,\n      transition: { \n        staggerChildren: 0.1,\n        delayChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: { \n      opacity: 1, \n      y: 0,\n      transition: { duration: 0.6, ease: [0.19, 1, 0.22, 1] }\n    },\n  };\n\n  // Plan view button for Pro users\n  const renderPlanButton = () => {\n    if (!isProMode) return null;\n\n    if (!currentPlan || !currentPlan.hasGeneratedPlan || currentPlan.steps.length === 0)\n      return null;\n\n    const completedSteps = currentPlan.steps.filter((step) => step.done).length;\n    const totalSteps = currentPlan.steps.length;\n    const isComplete = currentPlan.isComplete;\n\n    return (\n      <motion.div\n        variants={itemVariants}\n        className=\"mb-6\"\n      >\n        <motion.div\n          whileHover={{ y: -4, boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02)' }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() =>\n            setActivePanelContent({\n              type: 'plan',\n              source: null,\n              title: 'Task Plan',\n              timestamp: Date.now(),\n            })\n          }\n          className=\"bg-white dark:bg-gray-800/90 rounded-2xl border border-[#E5E6EC]/70 dark:border-gray-700/40 overflow-hidden cursor-pointer transition-all duration-300 shadow-sm hover:shadow-md\"\n        >\n          <div className=\"p-5\">\n            <div className=\"flex items-start\">\n              <div\n                className={`w-14 h-14 rounded-2xl flex items-center justify-center mr-4 flex-shrink-0 ${\n                  isComplete\n                    ? 'bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 text-green-600 dark:text-green-400 border border-green-100/80 dark:border-green-800/40'\n                    : 'bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30'\n                }`}\n              >\n                {isComplete ? (\n                  <FiCpu size={24} />\n                ) : (\n                  <motion.div\n                    animate={{ scale: [1, 1.08, 1] }}\n                    transition={{ duration: 2.5, repeat: Infinity, ease: \"easeInOut\" }}\n                  >\n                    <FiCpu size={24} />\n                  </motion.div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between\">\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg mb-1 truncate pr-2\">\n                    Task Plan\n                  </h4>\n                  <div className=\"flex items-center text-xs\">\n                    <span\n                      className={`w-2 h-2 rounded-full mr-1.5 ${\n                        isComplete\n                          ? 'bg-green-500 dark:bg-green-400'\n                          : 'bg-accent-500 dark:bg-accent-400'\n                      }`}\n                    />\n                    <span className=\"text-gray-500 dark:text-gray-400\">\n                      {isComplete ? 'Completed' : 'In progress'}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  {isComplete \n                    ? 'All planned steps have been completed successfully.' \n                    : 'The agent is executing a plan to accomplish your task.'}\n                </div>\n\n                {/* Progress bar */}\n                <div className=\"mt-1 mb-2\">\n                  <div className=\"flex justify-between items-center mb-1.5 text-xs\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Progress</span>\n                    <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                      {completedSteps}/{totalSteps}\n                    </span>\n                  </div>\n                  <div className=\"h-2 bg-gray-100 dark:bg-gray-700/70 rounded-full overflow-hidden\">\n                    <div\n                      className={`h-full ${\n                        isComplete\n                          ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                          : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n                      }`}\n                      style={{ width: `${totalSteps ? (completedSteps / totalSteps) * 100 : 0}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-b from-gray-50/70 to-gray-50 dark:from-gray-800/50 dark:to-gray-800/80 px-5 py-3 border-t border-[#E5E6EC]/50 dark:border-gray-700/30 flex justify-between items-center\">\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              View plan details\n            </div>\n            <div className=\"flex items-center text-sm\">\n              <FiArrowRight \n                className=\"text-accent-500 dark:text-accent-400\"\n                size={16}\n              />\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    );\n  };\n\n  // Enhanced empty state when no session\n  if (!activeSessionId) {\n    return (\n      <motion.div\n        variants={containerVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        className=\"flex items-center justify-center h-full text-center py-12\"\n      >\n        <div className=\"max-w-md mx-auto px-6\">\n          <motion.div\n            variants={itemVariants}\n            className=\"relative mx-auto mb-8\"\n          >\n            {/* Gradient background glow effect */}\n            <div className=\"absolute inset-0 w-24 h-24 mx-auto rounded-full bg-gradient-to-br from-gray-200/50 to-gray-100/30 dark:from-gray-700/30 dark:to-gray-800/20 blur-xl\"></div>\n            \n            {/* Main icon */}\n            <div className=\"relative w-24 h-24 mx-auto rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n              <FiLayout size={40} className=\"text-gray-500 dark:text-gray-400\" />\n            </div>\n          </motion.div>\n          \n          <motion.h3 \n            variants={itemVariants}\n            className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n          \n          <motion.p \n            variants={itemVariants}\n            className=\"text-gray-600 dark:text-gray-400 leading-relaxed\"\n          >\n            Create or select a session to start working. Tool results and detailed information will be displayed here automatically.\n          </motion.p>\n        </div>\n      </motion.div>\n    );\n  }\n\n  // Enhanced empty state when session exists but no content\n  const hasContent = currentPlan && currentPlan.hasGeneratedPlan && currentPlan.steps.length > 0;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header with refined styling */}\n      <div className=\"flex items-center px-6 py-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-700 dark:to-gray-800 flex items-center justify-center text-gray-600 dark:text-gray-400 border border-gray-200/60 dark:border-gray-700/40 shadow-sm\">\n          <FiLayers size={18} />\n        </div>\n        <div>\n          <h2 className=\"font-medium text-gray-900 dark:text-gray-100 text-lg\">Workspace</h2>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            View tool outputs and plan details\n          </div>\n        </div>\n      </div>\n\n      {/* Content area with elegant empty state */}\n      <div className=\"flex-1 overflow-y-auto p-6\">\n        {hasContent ? (\n          <motion.div \n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"space-y-8\"\n          >\n            {/* Plan view for Pro users */}\n            {renderPlanButton()}\n          </motion.div>\n        ) : (\n          /* Beautiful empty state for active session with no content */\n          <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            className=\"flex items-center justify-center h-full text-center\"\n          >\n            <div className=\"max-w-lg mx-auto px-6\">\n              <motion.div\n                variants={itemVariants}\n                className=\"relative mb-10\"\n              >\n                {/* Animated background circles */}\n                <motion.div\n                  animate={{ \n                    scale: [1, 1.1, 1], \n                    opacity: [0.3, 0.5, 0.3],\n                    rotate: [0, 5, 0, -5, 0]\n                  }}\n                  transition={{ duration: 6, repeat: Infinity, ease: \"easeInOut\" }}\n                  className=\"absolute inset-0 w-28 h-28 rounded-full bg-gradient-to-br from-accent-200/30 to-accent-300/20 dark:from-accent-800/20 dark:to-accent-700/10 mx-auto blur-xl\"\n                />\n                <motion.div\n                  animate={{ \n                    scale: [1.1, 1, 1.1], \n                    opacity: [0.2, 0.4, 0.2],\n                    rotate: [0, -5, 0, 5, 0]\n                  }}\n                  transition={{ duration: 5, repeat: Infinity, ease: \"easeInOut\", delay: 1 }}\n                  className=\"absolute inset-0 w-32 h-32 rounded-full bg-gradient-to-br from-purple-200/20 to-purple-300/10 dark:from-purple-800/10 dark:to-purple-700/5 mx-auto mt-2 ml-2 blur-xl\"\n                />\n                \n                {/* Main icon with glowing effect */}\n                <div className=\"relative mx-auto w-28 h-28 rounded-3xl bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center border border-gray-200/60 dark:border-gray-700/40 shadow-lg\">\n                  <motion.div \n                    animate={{ \n                      scale: [1, 1.05, 1],\n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: \"easeInOut\" }}\n                  >\n                    <FiActivity size={44} className=\"text-accent-500 dark:text-accent-400\" />\n                  </motion.div>\n                  \n                  {/* Subtle pulsing ring */}\n                  <motion.div\n                    animate={{ \n                      scale: [0.8, 1.2, 0.8], \n                      opacity: [0.3, 0.1, 0.3] \n                    }}\n                    transition={{ duration: 3, repeat: Infinity, ease: \"easeInOut\" }}\n                    className=\"absolute inset-0 rounded-3xl border-2 border-accent-400/20 dark:border-accent-400/10\"\n                  />\n                </div>\n              </motion.div>\n              \n              <motion.h3 \n                variants={itemVariants}\n                className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200 bg-gradient-to-r from-gray-800 to-gray-600 dark:from-gray-200 dark:to-gray-300 bg-clip-text text-transparent\"\n              >\n                Ready for Action\n              </motion.h3>\n              \n              <motion.p \n                variants={itemVariants}\n                className=\"text-gray-600 dark:text-gray-400 leading-relaxed mb-8 max-w-md mx-auto\"\n              >\n                Your workspace is active. Start a conversation with Agent TARS and watch as tool results, plans, and detailed information appear here in real-time.\n              </motion.p>\n\n              <motion.div\n                variants={containerVariants}\n                className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 max-w-2xl mx-auto\"\n              >\n                <motion.div \n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-blue-50 dark:bg-blue-900/20 flex items-center justify-center mb-3 text-blue-500 dark:text-blue-400 border border-blue-100/80 dark:border-blue-800/30\">\n                    <FiLayout size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Tool Results</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Comprehensive outputs</div>\n                  </div>\n                </motion.div>\n\n                {isProMode && (\n                  <motion.div \n                    variants={itemVariants}\n                    whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                    className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                  >\n                    <div className=\"w-12 h-12 rounded-xl bg-purple-50 dark:bg-purple-900/20 flex items-center justify-center mb-3 text-purple-500 dark:text-purple-400 border border-purple-100/80 dark:border-purple-800/30\">\n                      <FiCpu size={22} />\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Task Plans</div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Execution progress</div>\n                    </div>\n                  </motion.div>\n                )}\n\n                <motion.div \n                  variants={itemVariants}\n                  whileHover={{ y: -4, boxShadow: '0 12px 20px -8px rgba(0, 0, 0, 0.1)' }}\n                  className=\"flex flex-col items-center p-5 bg-gradient-to-b from-white to-gray-50 dark:from-gray-800 dark:to-gray-800/80 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\"\n                >\n                  <div className=\"w-12 h-12 rounded-xl bg-green-50 dark:bg-green-900/20 flex items-center justify-center mb-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n                    <FiZap size={22} />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200 mb-1\">Live Updates</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Real-time results</div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiFileText, FiBookOpen, FiX, FiArrowLeft } from 'react-icons/fi';\nimport { useSession } from '../../hooks/useSession';\nimport { useTool } from '../../hooks/useTool';\nimport { formatTimestamp } from '../../utils/formatters';\nimport { ToolResultRenderer } from './renderers/ToolResultRenderer';\nimport { ResearchReportRenderer } from './renderers/ResearchReportRenderer';\n\n/**\n * WorkspaceDetail Component - Displays details of a single tool result or report\n */\nexport const WorkspaceDetail: React.FC = () => {\n  const { activePanelContent, setActivePanelContent } = useSession();\n  const { getToolIcon } = useTool();\n  const [zoomedImage, setZoomedImage] = useState<{ src: string; alt?: string } | null>(null);\n\n  if (!activePanelContent) {\n    return null;\n  }\n\n  // 特殊处理 final_answer 类型或研究报告内容\n  if (\n    activePanelContent?.type === 'research_report' ||\n    (activePanelContent.toolCallId && activePanelContent.toolCallId.startsWith('final-answer'))\n  ) {\n    return (\n      <ResearchReportRenderer\n        content={\n          typeof activePanelContent.source === 'string'\n            ? activePanelContent.source\n            : JSON.stringify(activePanelContent.source, null, 2)\n        }\n        title={activePanelContent.title || 'Research Report'}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // 特殊处理研究报告内容\n  if (activePanelContent?.type === 'research_report') {\n    return (\n      <ResearchReportRenderer\n        content={activePanelContent.source}\n        title={activePanelContent.title}\n        isStreaming={activePanelContent.isStreaming}\n      />\n    );\n  }\n\n  // Convert legacy format content to standardized tool result parts\n  const getStandardizedContent = (): ToolResultContentPart[] => {\n    const { type, source, title, error, arguments: toolArguments } = activePanelContent;\n\n    // ... 保留其他代码 ...\n  };\n\n  // 辅助函数：从文本内容中提取URL\n  const extractUrlFromContent = (content: string): string => {\n    if (typeof content === 'string' && content.includes('Navigated to ')) {\n      const lines = content.split('\\n');\n      const firstLine = lines[0] || '';\n      return firstLine.replace('Navigated to ', '').trim();\n    }\n    return '';\n  };\n\n  // 辅助函数：从环境内容中提取图片URL\n  const extractImageUrl = (content: any[]): string | null => {\n    const imgPart = content.find(\n      (part) => part && part.type === 'image_url' && part.image_url && part.image_url.url,\n    );\n    return imgPart ? imgPart.image_url.url : null;\n  };\n\n  // Handle tool result content action\n  const handleContentAction = (action: string, data: any) => {\n    if (action === 'zoom' && data.src) {\n      // Show zoomed image in modal\n      setZoomedImage({ src: data.src, alt: data.alt });\n    }\n  };\n\n  // Handle back navigation\n  const handleBack = () => {\n    setActivePanelContent(null);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\"\n    >\n      {/* Header with tool info */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <motion.button\n            whileHover={{ scale: 1.05, x: -2 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleBack}\n            className=\"mr-4 p-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100/70 dark:hover:bg-gray-700/50 rounded-lg border border-transparent hover:border-gray-100/70 dark:hover:border-gray-700/50 bg-gray-50/80 dark:bg-gray-800/50\"\n            title=\"Back to workspace\"\n          >\n            <FiArrowLeft size={18} />\n          </motion.button>\n          \n          <div className=\"w-10 h-10 mr-4 rounded-xl flex items-center justify-center overflow-hidden relative\">\n            {/* 使用特殊图标替代 final_answer 工具图标 */}\n            {activePanelContent.toolCallId?.startsWith('final-answer') ? (\n              <>\n                <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400/20 to-accent-500/10 dark:from-accent-600/30 dark:to-accent-500/20\"></div>\n                <div className=\"relative z-10\">\n                  <FiBookOpen className=\"text-accent-600 dark:text-accent-400\" size={20} />\n                </div>\n              </>\n            ) : (\n              <>\n                <div\n                  className={`absolute inset-0 ${\n                    activePanelContent?.type === 'search'\n                      ? 'bg-gradient-to-br from-blue-400/20 to-indigo-500/10 dark:from-blue-600/30 dark:to-indigo-500/20'\n                      : activePanelContent?.type === 'browser'\n                        ? 'bg-gradient-to-br from-purple-400/20 to-pink-500/10 dark:from-purple-600/30 dark:to-pink-500/20'\n                        : activePanelContent?.type === 'command'\n                          ? 'bg-gradient-to-br from-green-400/20 to-emerald-500/10 dark:from-green-600/30 dark:to-emerald-500/20'\n                          : activePanelContent?.type === 'file'\n                            ? 'bg-gradient-to-br from-yellow-400/20 to-amber-500/10 dark:from-yellow-600/30 dark:to-amber-500/20'\n                            : activePanelContent?.type === 'image'\n                              ? 'bg-gradient-to-br from-red-400/20 to-rose-500/10 dark:from-red-600/30 dark:to-rose-500/20'\n                              : activePanelContent?.type === 'browser_vision_control'\n                                ? 'bg-gradient-to-br from-cyan-400/20 to-teal-500/10 dark:from-cyan-600/30 dark:to-teal-500/20'\n                                : 'bg-gradient-to-br from-gray-400/20 to-gray-500/10 dark:from-gray-500/30 dark:to-gray-600/20'\n                  }`}\n                ></div>\n                <div className=\"relative z-10\">\n                  {getToolIcon(activePanelContent?.type || 'other')}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {activePanelContent.title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {formatTimestamp(activePanelContent.timestamp)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"flex-1 overflow-auto p-6\">\n        <ToolResultRenderer content={getStandardizedContent()} onAction={handleContentAction} />\n      </div>\n\n      {/* Image Zoom Modal */}\n      <AnimatePresence>\n        {zoomedImage && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 p-4 backdrop-blur-sm\"\n            onClick={() => setZoomedImage(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n              className=\"relative max-w-[95vw] max-h-[95vh]\"\n            >\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setZoomedImage(null);\n                }}\n                className=\"absolute -top-2 -right-2 p-2 rounded-full bg-gray-900/90 text-white hover:bg-gray-800 shadow-lg\"\n                aria-label=\"Close\"\n              >\n                <FiX size={24} />\n              </button>\n              <img \n                src={zoomedImage.src} \n                alt={zoomedImage.alt || \"Zoomed image\"} \n                className=\"max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl\"\n              />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};","import React from 'react';\nimport { useSession } from '../../hooks/useSession';\nimport { WorkspaceContent } from './WorkspaceContent';\nimport { WorkspaceDetail } from './WorkspaceDetail';\nimport { PlanView } from './PlanView';\nimport { useReplay } from '../../hooks/useReplay';\nimport { TimelineSlider } from '../Replay/TimelineSlider';\nimport { ReplayControls } from '../Replay/ReplayControls';\nimport { usePro } from '../../hooks/usePro';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport './Workspace.css';\n\n/**\n * WorkspacePanel Component - Container for workspace content\n */\nexport const WorkspacePanel: React.FC = () => {\n  const { activeSessionId, activePanelContent, setActivePanelContent } = useSession();\n  const { replayState } = useReplay();\n  const isProMode = usePro();\n\n  // 检查是否在查看计划，同时确保只有在 Pro 模式下才允许查看计划\n  const isViewingPlan = isProMode && activePanelContent?.type === 'plan';\n  const isReplayActive = replayState.isActive;\n\n  if (!activeSessionId) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center p-8 max-w-md\">\n          <motion.div \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-sm border border-gray-200/50 dark:border-gray-700/30\"\n          >\n            <svg\n              className=\"w-10 h-10 text-gray-400 dark:text-gray-500\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n          </motion.div>\n          <motion.h3 \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n            className=\"text-xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n          >\n            No Active Session\n          </motion.h3>\n          <motion.p \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            className=\"text-gray-600 dark:text-gray-400\"\n          >\n            Create or select a session to view detailed information and tool results in this workspace.\n          </motion.p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-gray-50/80 dark:bg-gray-900/30\">\n      {/* Main content area */}\n      <div className=\"flex-1 overflow-hidden\">\n        {isViewingPlan ? (\n          <PlanView onBack={() => setActivePanelContent(null)} />\n        ) : activePanelContent ? (\n          <WorkspaceDetail />\n        ) : (\n          <WorkspaceContent />\n        )}\n      </div>\n\n      {/* Refined replay controls with modern styling */}\n      <AnimatePresence>\n        {isReplayActive && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.4, ease: [0.19, 1, 0.22, 1] }}\n            className=\"p-5 border-t border-gray-100/40 dark:border-gray-700/20 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm\"\n          >\n            {/* Timeline slider */}\n            <TimelineSlider />\n\n            {/* Controls centered below the timeline */}\n            <div className=\"flex justify-center mt-4\">\n              <ReplayControls />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  FiRefreshCw,\n  FiArrowLeft,\n  FiArrowRight,\n  FiHome,\n  FiLock,\n  FiX,\n  FiPlus,\n  FiGlobe,\n} from 'react-icons/fi';\n\ninterface BrowserShellProps {\n  children: React.ReactNode;\n  title?: string;\n  url?: string;\n  className?: string;\n}\n\n/**\n * BrowserShell - A component that mimics a browser window with improved visuals\n *\n * Design improvements:\n * - Modern browser chrome styling with authentic address bar\n * - Refined control buttons with hover effects\n * - Subtle shadows and borders for enhanced depth perception\n * - Realistic URL formatting with https indicator\n * - Tab-like interface for better visual fidelity\n */\nexport const BrowserShell: React.FC<BrowserShellProps> = ({\n  children,\n  title = 'Browser',\n  url = '',\n  className = '',\n}) => {\n  // Format URL for display\n  const displayUrl = url || '';\n  const isSecure = displayUrl.startsWith('https://');\n\n  // Extract domain for tab display\n  const getDomain = (url: string) => {\n    try {\n      if (url.startsWith('http')) {\n        const domain = new URL(url).hostname;\n        return domain || title;\n      }\n    } catch (e) {}\n    return title;\n  };\n\n  const domain = getDomain(displayUrl);\n\n  return (\n    <motion.div\n      className={`bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${className}`}\n      initial={{ opacity: 0.9, y: 5 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3, ease: [0.19, 1, 0.22, 1] }}\n    >\n      {/* Browser toolbar with improved design */}\n      <div className=\"bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-800/90 dark:to-gray-800 border-b border-gray-200/80 dark:border-gray-700/40 shadow-sm\">\n        {/* Browser tabs bar */}\n        <div className=\"flex items-center px-3 pt-2 pb-0 border-b border-transparent\">\n          <div className=\"flex-1 flex items-center\">\n            <div className=\"flex items-center mr-1 px-3 py-1.5 bg-white dark:bg-gray-700 rounded-t-lg border-t border-l border-r border-gray-200/80 dark:border-gray-700/40 text-xs font-medium relative\">\n              {isSecure && <FiLock className=\"mr-1.5 text-green-500 dark:text-green-400\" size={10} />}\n              <span className=\"max-w-[120px] truncate\">{domain}</span>\n              <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-accent-500 dark:bg-accent-400\"></div>\n            </div>\n            <div className=\"w-7 h-7 flex items-center justify-center text-gray-500 dark:text-gray-400 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 rounded-full cursor-pointer transition-colors\">\n              <FiPlus size={14} />\n            </div>\n          </div>\n        </div>\n\n        {/* Address bar with controls */}\n        <div className=\"flex items-center p-3\">\n          {/* Control buttons with enhanced styling */}\n          <div className=\"flex space-x-1.5 mr-3\">\n            <div className=\"w-3 h-3 rounded-full bg-red-400 dark:bg-red-500 border border-red-500/20 dark:border-red-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-yellow-400 dark:bg-yellow-500 border border-yellow-500/20 dark:border-yellow-400/20 shadow-sm\" />\n            <div className=\"w-3 h-3 rounded-full bg-green-400 dark:bg-green-500 border border-green-500/20 dark:border-green-400/20 shadow-sm\" />\n          </div>\n\n          {/* Navigation buttons */}\n          <div className=\"flex space-x-1 mr-3 text-gray-500 dark:text-gray-400\">\n            <button className=\"p-1 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 rounded-full transition-colors\">\n              <FiArrowLeft size={14} />\n            </button>\n            <button className=\"p-1 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 rounded-full transition-colors\">\n              <FiArrowRight size={14} />\n            </button>\n            <button className=\"p-1 hover:bg-gray-200/70 dark:hover:bg-gray-700/50 rounded-full transition-colors\">\n              <FiRefreshCw size={14} />\n            </button>\n          </div>\n\n          {/* URL bar with secure indicator */}\n          <div className=\"flex-1 bg-white dark:bg-gray-700 rounded-md flex items-center px-3 py-1.5 text-xs text-gray-700 dark:text-gray-200 border border-gray-300/30 dark:border-gray-600/40 group hover:border-gray-400/30 dark:hover:border-gray-500/30 transition-colors shadow-inner\">\n            <div className=\"flex items-center w-full\">\n              <div className=\"flex items-center mr-2\">\n                {isSecure ? (\n                  <FiLock className=\"mr-1.5 text-green-500 dark:text-green-400\" size={12} />\n                ) : (\n                  <FiGlobe className=\"mr-1.5 text-gray-400 dark:text-gray-500\" size={12} />\n                )}\n              </div>\n              <span className=\"truncate font-mono flex-1\">{displayUrl}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content area */}\n      <div className=\"overflow-auto max-h-[70vh]\">{children}</div>\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiCheck, FiClock, FiLoader, FiTarget, FiCheckCircle, FiArrowRight } from 'react-icons/fi';\nimport type { PlanStep } from '@multimodal/agent-interface';\nimport { formatTimestamp } from '../../../utils/formatters';\n\ninterface PlanViewerRendererProps {\n  plan: {\n    steps: AgentEventStream.PlanStep[];\n    isComplete: boolean;\n    summary: string | null;\n    hasGeneratedPlan: boolean;\n    keyframes?: PlanKeyframe[];\n    currentKeyframeIndex?: number;\n  };\n  onKeyframeChange?: (index: number) => void;\n}\n\nexport interface PlanKeyframe {\n  timestamp: number;\n  steps: AgentEventStream.PlanStep[];\n  isComplete: boolean;\n  summary: string | null;\n}\n\n/**\n * PlanViewerRenderer - Renders the plan and its steps in the workspace area\n *\n * Features:\n * - Displays plan steps with completion status\n * - Shows progress indicator\n * - Supports keyframe navigation for plan history\n * - Elegant, minimal design consistent with workspace aesthetics\n */\nexport const PlanViewerRenderer: React.FC<PlanViewerRendererProps> = ({\n  plan,\n  onKeyframeChange,\n}) => {\n  const { steps, isComplete, summary, keyframes, currentKeyframeIndex } = plan;\n\n  // 计算进度百分比\n  const progressPercentage = isComplete\n    ? 100\n    : steps.length === 0\n      ? 0\n      : (steps.filter((step) => step.done).length / steps.length) * 100;\n\n  // 如果没有计划，显示空状态\n  if (!plan.hasGeneratedPlan || steps.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full p-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-24 h-24 rounded-3xl bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 flex items-center justify-center mb-6 border border-gray-200/50 dark:border-gray-700/30 shadow-sm\"\n        >\n          <FiTarget size={40} className=\"text-gray-400 dark:text-gray-500\" />\n        </motion.div>\n        <motion.h3\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n          className=\"text-2xl font-medium mb-3 text-gray-800 dark:text-gray-200\"\n        >\n          No Plan Generated\n        </motion.h3>\n        <motion.p\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          className=\"text-gray-600 dark:text-gray-400 max-w-md\"\n        >\n          The agent hasn't created a plan for this task yet, or the task was simple enough to not\n          require a plan.\n        </motion.p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-8 h-full flex flex-col\">\n      {/* 标题和计划摘要 */}\n      <motion.div \n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4 }}\n        className=\"mb-8\"\n      >\n        <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n          {isComplete ? (\n            <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-4 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheckCircle size={20} />\n            </div>\n          ) : (\n            <motion.div\n              animate={{ scale: [1, 1.05, 1] }}\n              transition={{ duration: 2.5, repeat: Infinity }}\n              className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center mr-4 text-accent-500 dark:text-accent-400 border border-accent-100/50 dark:border-accent-800/30\"\n            >\n              <FiTarget size={20} />\n            </motion.div>\n          )}\n          Execution Plan\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 ml-14\">\n          {isComplete\n            ? 'All steps have been completed successfully.'\n            : 'The agent is executing this plan to complete your task.'}\n        </p>\n      </motion.div>\n\n      {/* 关键帧时间轴 (如果有关键帧) */}\n      {keyframes && keyframes.length > 1 && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.1 }}\n          className=\"mb-8\"\n        >\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Plan Timeline\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100/70 dark:bg-gray-800/70 px-3 py-1.5 rounded-full border border-gray-200/50 dark:border-gray-700/30\">\n              {currentKeyframeIndex !== undefined &&\n                keyframes[currentKeyframeIndex] &&\n                formatTimestamp(keyframes[currentKeyframeIndex].timestamp)}\n            </div>\n          </div>\n          <div className=\"relative h-12 bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            <div className=\"absolute inset-0 flex\">\n              {keyframes.map((keyframe, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\n                  className={`flex-1 cursor-pointer transition-all duration-200 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 ${\n                    index === currentKeyframeIndex \n                      ? 'bg-gradient-to-b from-gray-100/80 to-gray-50/80 dark:from-gray-700/50 dark:to-gray-800/50 border-b-2 border-accent-500 dark:border-accent-400' \n                      : ''\n                  }`}\n                  onClick={() => onKeyframeChange && onKeyframeChange(index)}\n                >\n                  <div className=\"h-full flex flex-col items-center justify-center\">\n                    <div\n                      className={`w-3 h-3 rounded-full mb-1 ${\n                        index === currentKeyframeIndex\n                          ? 'bg-accent-500 dark:bg-accent-400 ring-2 ring-accent-200 dark:ring-accent-700/30 ring-opacity-60'\n                          : 'bg-gray-300 dark:bg-gray-600'\n                      }`}\n                    />\n                    <div className=\"text-[0.65rem] text-gray-500 dark:text-gray-400\">\n                      {formatTimestamp(keyframe.timestamp, true)}\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* 进度指示器 */}\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.4, delay: 0.2 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex justify-between items-center mb-3\">\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Progress</span>\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n            {steps.filter((step) => step.done).length}/{steps.length} steps\n          </span>\n        </div>\n        <div className=\"h-3 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden shadow-inner\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progressPercentage}%` }}\n            transition={{ duration: 0.7, ease: 'easeOut' }}\n            className={`h-full ${\n              isComplete\n                ? 'bg-gradient-to-r from-green-400 to-green-500 dark:from-green-500 dark:to-green-400'\n                : 'bg-gradient-to-r from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400'\n            }`}\n          />\n        </div>\n      </motion.div>\n\n      {/* 步骤列表 */}\n      <div className=\"flex-1 overflow-auto pr-2 workspace-scrollbar\">\n        <motion.div \n          className=\"space-y-4\"\n          variants={{\n            visible: { transition: { staggerChildren: 0.07 } }\n          }}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {steps.map((step, index) => (\n            <motion.div \n              key={index}\n              variants={{\n                hidden: { opacity: 0, y: 20 },\n                visible: { opacity: 1, y: 0, transition: { duration: 0.4, ease: [0.19, 1, 0.22, 1] } }\n              }}\n              className=\"relative\"\n            >\n              {/* 连接线 */}\n              {index < steps.length - 1 && (\n                <div className=\"absolute left-6 w-0.5 top-12 bottom-0 bg-gradient-to-b from-gray-200 to-gray-100 dark:from-gray-700 dark:to-gray-600\" />\n              )}\n\n              <div className=\"flex items-start gap-4\">\n                <div\n                  className={`flex-shrink-0 w-12 h-12 rounded-xl flex items-center justify-center transition-all duration-300 shadow-sm ${\n                    step.done\n                      ? 'bg-gradient-to-br from-green-400 to-green-500 dark:from-green-500 dark:to-green-400 text-white'\n                      : index === steps.filter((s) => s.done).length\n                        ? 'bg-gradient-to-br from-accent-400 to-accent-500 dark:from-accent-500 dark:to-accent-400 text-white'\n                        : 'bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-600 text-gray-500 dark:text-gray-400'\n                  }`}\n                >\n                  {step.done ? (\n                    <FiCheck size={22} />\n                  ) : index === steps.filter((s) => s.done).length ? (\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 2.5, repeat: Infinity, ease: 'linear' }}\n                    >\n                      <FiLoader size={22} />\n                    </motion.div>\n                  ) : (\n                    <FiClock size={20} />\n                  )}\n                </div>\n\n                <div className=\"flex-1\">\n                  <div className={`bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/70 dark:border-gray-700/40 shadow-sm ${\n                    step.done\n                      ? 'border-l-4 border-l-green-500 dark:border-l-green-400'\n                      : index === steps.filter((s) => s.done).length\n                        ? 'border-l-4 border-l-accent-500 dark:border-l-accent-400 animate-pulse'\n                        : ''\n                  }`}>\n                    <div\n                      className={`text-sm leading-relaxed ${\n                        step.done\n                          ? 'text-gray-800 dark:text-gray-200'\n                          : index === steps.filter((s) => s.done).length\n                            ? 'text-gray-800 dark:text-gray-200'\n                            : 'text-gray-500 dark:text-gray-400'\n                      }`}\n                    >\n                      {step.content}\n                    </div>\n\n                    {/* 步骤状态指示器 */}\n                    <div className=\"flex justify-between items-center mt-3 text-xs\">\n                      <div className={`flex items-center ${\n                        step.done\n                          ? 'text-green-600 dark:text-green-400'\n                          : index === steps.filter((s) => s.done).length\n                            ? 'text-accent-600 dark:text-accent-400'\n                            : 'text-gray-500 dark:text-gray-400'\n                      }`}>\n                        {step.done ? (\n                          <>\n                            <FiCheckCircle size={12} className=\"mr-1\" />\n                            <span>Completed</span>\n                          </>\n                        ) : index === steps.filter((s) => s.done).length ? (\n                          <>\n                            <FiLoader size={12} className=\"mr-1 animate-spin\" />\n                            <span>In progress</span>\n                          </>\n                        ) : (\n                          <>\n                            <FiClock size={12} className=\"mr-1\" />\n                            <span>Pending</span>\n                          </>\n                        )}\n                      </div>\n                      <div className=\"text-gray-400 dark:text-gray-500\">Step {index + 1}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n\n      {/* 计划总结 - 在底部显示 */}\n      {isComplete && summary && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: 0.3 }}\n          className=\"mt-8 pt-6 border-t border-gray-200/70 dark:border-gray-700/40\"\n        >\n          <div className=\"flex items-center mb-3\">\n            <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 flex items-center justify-center mr-3 text-green-500 dark:text-green-400 border border-green-100/80 dark:border-green-800/30\">\n              <FiCheck size={16} />\n            </div>\n            <div className=\"font-medium text-gray-800 dark:text-gray-200\">Plan Summary</div>\n          </div>\n          <div className=\"text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 p-5 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm\">\n            {summary}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nimport { FiDownload, FiBookOpen, FiLoader, FiShare2, FiCopy, FiCheck } from 'react-icons/fi';\nimport { MarkdownRenderer } from '../../Markdown';\n\ninterface ResearchReportRendererProps {\n  content: string;\n  title?: string;\n  isStreaming?: boolean;\n}\n\n/**\n * Research Report Renderer - Displays a detailed research report with proper formatting\n *\n * Features:\n * - Elegant markdown rendering with document styling\n * - Download capability for saving reports\n * - Animated indicators for streaming content\n * - Smooth transitions for content updates\n * - Auto-scrolling during streaming updates\n */\nexport const ResearchReportRenderer: React.FC<ResearchReportRendererProps> = ({\n  content,\n  title = 'Research Report',\n  isStreaming = false,\n}) => {\n  const [scrollToBottom, setScrollToBottom] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  // 处理内容格式化，确保始终是字符串\n  const formattedContent = React.useMemo(() => {\n    if (typeof content === 'string') {\n      return content;\n    }\n\n    // 如果不是字符串，尝试转换为 JSON 字符串\n    try {\n      return JSON.stringify(content, null, 2);\n    } catch (e) {\n      return String(content);\n    }\n  }, [content]);\n\n  // Auto-scroll to bottom when streaming content\n  useEffect(() => {\n    if (isStreaming && scrollToBottom && contentRef.current) {\n      contentRef.current.scrollTop = contentRef.current.scrollHeight;\n    }\n  }, [content, isStreaming, scrollToBottom]);\n\n  // Handle content scroll\n  const handleScroll = () => {\n    if (!contentRef.current) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = contentRef.current;\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n\n    setScrollToBottom(isNearBottom);\n  };\n\n  // Handle report download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${title.replace(/[^\\w\\s-]/g, '')}.md`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    URL.revokeObjectURL(url);\n  };\n\n  // Handle copy content\n  const handleCopy = () => {\n    navigator.clipboard.writeText(formattedContent);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-gray-50/80 dark:bg-gray-900/20\">\n      {/* Report header */}\n      <div className=\"flex items-center justify-between p-5 border-b border-gray-100/60 dark:border-gray-700/30 bg-white dark:bg-gray-800/90\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 mr-4 rounded-xl bg-gradient-to-br from-accent-50 to-accent-100 dark:from-accent-900/20 dark:to-accent-800/20 flex items-center justify-center border border-accent-100/50 dark:border-accent-800/30 text-accent-600 dark:text-accent-400 shadow-sm\">\n            <FiBookOpen size={18} />\n          </div>\n          <div>\n            <h2 className=\"font-medium text-gray-800 dark:text-gray-200 text-lg leading-tight\">\n              {title}\n            </h2>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center\">\n              {isStreaming ? (\n                <>\n                  <FiLoader className=\"mr-1.5 animate-spin\" size={10} />\n                  Generating report...\n                </>\n              ) : (\n                'Research Report'\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={20} className=\"text-green-500\" /> : <FiCopy size={20} />}\n          </motion.button>\n          \n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-50/80 dark:bg-gray-800/50 text-gray-600 dark:text-gray-400 hover:bg-gray-100/80 dark:hover:bg-gray-700/50 transition-colors border border-gray-200/50 dark:border-gray-700/30\"\n            title=\"Download Report\"\n          >\n            <FiDownload size={20} />\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Report content */}\n      <div\n        ref={contentRef}\n        className=\"flex-1 overflow-auto p-8 workspace-scrollbar\"\n        onScroll={handleScroll}\n      >\n        <div className=\"max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-xl border border-gray-200/70 dark:border-gray-700/40 shadow-sm overflow-hidden\">\n          <div className=\"p-8\">\n            <div className=\"research-report prose prose-slate lg:prose-lg dark:prose-invert max-w-none\">\n              <MarkdownRenderer content={formattedContent} />\n            </div>\n\n            {/* Loading indicator for streaming content */}\n            {isStreaming && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.5 }}\n                className=\"flex items-center justify-center py-6 mt-4 text-accent-500 dark:text-accent-400\"\n              >\n                <div className=\"flex items-center gap-3 px-4 py-2 bg-accent-50/70 dark:bg-accent-900/20 rounded-full border border-accent-100/60 dark:border-accent-800/30\">\n                  <FiLoader className=\"animate-spin\" size={16} />\n                  <span className=\"text-sm font-medium\">Generating report...</span>\n                </div>\n              </motion.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;AAOA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAMA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;;AACA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAAA;AACA;AAAA;;;;;;;;;;;AAGA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;AAIA;AAAA;;AACA;AAAA;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AASA;AAAA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAKA;AAjIA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACA;AAAA;;AACA;AACA;AAMA;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;AAIA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;;AACA;AACA;;;;;;AAMA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;;;;;;AAMA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AAAA;;AACA;AAAA;AAAA;;;;;;AAGA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AACA;AACA;;AAGA;AAAA;;;;;;AAGA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAMA;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;;;AAGA;AAEA;AACA;AACA;AACA;A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"}