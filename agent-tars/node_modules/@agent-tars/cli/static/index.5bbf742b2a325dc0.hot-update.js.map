{"version":3,"file":"index.5bbf742b2a325dc0.hot-update.js","sources":["/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/entry.css","/Users/chenhaoli/workspace/code/UI-TARS-desktop-5/multimodal/agent-tars-web-ui/src/v2/components/Workspace/renderers/DeliverableRenderer.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1749661164965\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.3.9_@swc+helpers@0.5.17/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FiFileText, FiCode, FiDownload, FiExternalLink, FiCopy, FiCheck } from 'react-icons/fi';\nimport { ToolResultContentPart } from '../../../types';\nimport { MarkdownRenderer } from '@/sdk/markdown-renderer';\n\ninterface DeliverableRendererProps {\n  part: ToolResultContentPart;\n  onAction?: (action: string, data: any) => void;\n}\n\n/**\n * DeliverableRenderer - Specialized component for rendering deliverable content\n * such as reports, code artifacts, and other final products\n *\n * Features:\n * - Categorizes deliverables by type (code, document, data)\n * - Provides download and copy functionality\n * - Offers appropriate preview for different content types\n * - Visual design consistent with other workspace renderers\n */\nexport const DeliverableRenderer: React.FC<DeliverableRendererProps> = ({ part, onAction }) => {\n  const { title, text, data, name } = part;\n  const [copied, setCopied] = React.useState(false);\n  \n  // Determine deliverable type based on available data\n  const getDeliverableType = () => {\n    if (!part) return 'unknown';\n    \n    // Check extensions if name exists\n    if (name) {\n      if (/\\.(js|ts|jsx|tsx|py|java|c|cpp|php|html|css|json)$/i.test(name)) return 'code';\n      if (/\\.(md|txt|docx|pdf|rtf)$/i.test(name)) return 'document';\n      if (/\\.(csv|xlsx|xls|xml)$/i.test(name)) return 'data';\n    }\n    \n    // Check title\n    if (title) {\n      if (title.toLowerCase().includes('report')) return 'document';\n      if (title.toLowerCase().includes('code')) return 'code';\n      if (title.toLowerCase().includes('data')) return 'data';\n    }\n    \n    // Default\n    return 'document';\n  };\n  \n  const deliverableType = getDeliverableType();\n  const content = text || (typeof data === 'string' ? data : JSON.stringify(data, null, 2));\n  \n  if (!content) {\n    return <div className=\"text-gray-500 italic\">No deliverable content available</div>;\n  }\n  \n  // Handle copy to clipboard\n  const handleCopy = () => {\n    navigator.clipboard.writeText(content);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  \n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name || title || 'deliverable';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"space-y-4\">\n      {/* Deliverable header with metadata */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200/50 dark:border-gray-700/30\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 rounded-xl flex items-center justify-center mr-3 border border-gray-200/50 dark:border-gray-700/30 shadow-sm \n            bg-gradient-to-br \n            from-amber-50 to-amber-100 dark:from-amber-900/20 dark:to-amber-800/20 \n            text-amber-500 dark:text-amber-400\">\n            {deliverableType === 'code' ? (\n              <FiCode size={18} />\n            ) : (\n              <FiFileText size={18} />\n            )}\n          </div>\n          <div>\n            <h3 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">\n              {title || name || 'Deliverable'}\n            </h3>\n            <div className=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n              <span className=\"mr-2\">{deliverableType === 'code' ? 'Code artifact' : 'Document'}</span>\n              {name && <span className=\"px-2 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full\">{name}</span>}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleCopy}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Copy content\"\n          >\n            {copied ? <FiCheck size={18} className=\"text-green-500\" /> : <FiCopy size={18} />}\n          </motion.button>\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleDownload}\n            className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n            title=\"Download file\"\n          >\n            <FiDownload size={18} />\n          </motion.button>\n        </div>\n      </div>\n      \n      {/* Content preview with appropriate rendering */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200/50 dark:border-gray-700/30 overflow-hidden\">\n        <div className=\"px-4 py-3 bg-gray-50/80 dark:bg-gray-800/80 border-b border-gray-100/50 dark:border-gray-700/30 flex items-center\">\n          <FiFileText className=\"text-gray-600 dark:text-gray-400 mr-2.5\" size={16} />\n          <div className=\"font-medium text-gray-700 dark:text-gray-300\">Content Preview</div>\n        </div>\n        \n        <div className=\"p-4 max-h-[70vh] overflow-auto\">\n          {deliverableType === 'code' ? (\n            <pre className=\"text-sm whitespace-pre-wrap font-mono bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border border-gray-100/30 dark:border-gray-700/20 overflow-x-auto\">\n              {content}\n            </pre>\n          ) : (\n            <div className=\"prose dark:prose-invert prose-sm max-w-none\">\n              <MarkdownRenderer content={content} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AAOA;;;;;;;;;AASA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;AAIA;AACA;;;;;AAEA;AAAA;;;;;;;;;;;AAGA;;AACA;AAAA;AACA;;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;AAAA;AAAA;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAMA;AAAA;;AACA;AAAA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AA1HA;AAAA"}