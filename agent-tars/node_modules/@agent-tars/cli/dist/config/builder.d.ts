import { AgentTARSCLIArguments, AgentTARSAppConfig } from '@agent-tars/interface';
/**
 * ConfigBuilder - Transforms CLI arguments into application configuration
 *
 * This class is responsible for converting command line arguments and user configuration
 * into a complete AgentTARSAppConfig object that can be passed to the server.
 *
 * Key responsibilities:
 * - Merge CLI arguments with loaded configuration using native object spreading
 * - Apply defaults where necessary
 * - Resolve environment variables
 * - Handle CLI-specific shortcuts (debug, quiet, port)
 * - Leverage CLI parser's automatic dot notation handling
 * - Handle deprecated CLI options with warnings
 */
export declare class ConfigBuilder {
    /**
     * Build complete application configuration from CLI arguments and user config
     *
     * @param cliArgs Command line arguments parsed from CLI
     * @param userConfig User configuration loaded from files
     * @returns Complete application configuration ready for server
     */
    static buildAppConfig(cliArgs: AgentTARSCLIArguments, userConfig: AgentTARSAppConfig): AgentTARSAppConfig;
    /**
     * Handle workspace config shortcut
     */
    private static handleWorkspaceOptions;
    /**
     * Handle deprecated CLI options
     */
    private static handleDeprecatedOptions;
    /**
     * Apply logging shortcuts from CLI arguments
     */
    private static applyLoggingShortcuts;
    /**
     * Parse log level string to enum
     */
    private static parseLogLevel;
    /**
     * Apply server configuration with defaults
     */
    private static applyServerConfiguration;
    /**
     * Resolve environment variables in model configuration
     */
    private static resolveModelSecrets;
}
//# sourceMappingURL=builder.d.ts.map