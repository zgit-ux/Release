export declare const logger: import("@agent-tars/core").ConsoleLogger;
/**
 * Resolve API key or URL for command line options
 * If the value is an environment variable name (all uppercase), use its value
 *
 * @param value The API key, URL, or environment variable name
 * @param label Optional label for logging (defaults to "value")
 * @returns The resolved value
 */
export declare function resolveValue(value: string | undefined, label?: string): string | undefined;
/**
 * Check if imgcat command is available in the system
 * @returns Promise that resolves to boolean indicating if imgcat is available
 */
export declare function isImgcatAvailable(): Promise<boolean>;
/**
 * Check if the terminal supports image display via imgcat
 * Currently only iTerm2 on macOS is supported
 */
export declare function isImageRenderingSupported(): boolean;
/**
 * Render image in terminal using imgcat
 * @param imageData Base64 encoded image data
 * @param mimeType Image MIME type
 * @param isDebug Whether to show debug logs
 * @returns Promise that resolves when rendering is complete
 */
export declare function renderImageInTerminal(imageData: string, mimeType: string, isDebug?: boolean): Promise<boolean>;
/**
 * Converts an absolute path to a user-friendly path with ~ for home directory
 * @param absolutePath The absolute path to convert
 * @returns A user-friendly path with ~ for home directory
 */
export declare function toUserFriendlyPath(absolutePath: string): string;
//# sourceMappingURL=misc.d.ts.map